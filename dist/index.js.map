{
  "version": 3,
  "sources": ["../ts/classes/element.ts", "../ts/classes/math/vector2.ts", "../ts/classes/dom/domElement.ts", "../ts/classes/dom/domText.ts", "../ts/classes/debug/fps.ts", "../ts/classes/debug/loader.ts", "../ts/classes/event.ts", "../ts/classes/dom/renderer.ts", "../ts/classes/input/gamepad.ts", "../ts/classes/input/gamepadManager.ts", "../ts/classes/input/inputDevices.ts", "../ts/classes/shaders/vertexShaderDir.ts", "../ts/classes/shaders/fragmentShaderDir.ts", "../ts/classes/rendering/glrInit.ts", "../ts/classes/rendering/glTranslator.ts", "../node_modules/gl-matrix/esm/common.js", "../node_modules/gl-matrix/esm/mat4.js", "../ts/classes/util/utils.ts", "../ts/classes/math/vector3.ts", "../ts/classes/math/matrix4.ts", "../ts/classes/rendering/glRenderer.ts", "../ts/classes/ticker.ts", "../ts/classes/elementBase.ts", "../ts/classes/group.ts", "../ts/classes/objStorage.ts", "../ts/classes/mode.ts", "../ts/classes/controller.ts", "../ts/classes/zone.ts", "../ts/classes/collider.ts", "../ts/classes/input/input.ts", "../ts/classes/input/mouseReader.ts", "../ts/classes/input/keyboardReader.ts", "../ts/classes/dom/interface.ts", "../ts/classes/level.ts", "../ts/classes/util/colors.ts", "../ts/classes/rendable.ts", "../ts/classes/texture.ts", "../ts/classes/objects/cuboid.ts", "../ts/classes/light.ts", "../ts/classes/objects/obj.ts", "../ts/classes/character.ts", "../ts/classes/util/ease.ts", "../ts/classes/animation/animation.ts", "../ts/classes/animation/skeleton.ts", "../ts/classes/animation/skeleton_bone.ts", "../ts/modes/side/player/bow.ts", "../ts/modes/side/player/player_camera.ts", "../ts/modes/side/player/player_controller.ts", "../ts/classes/animation/skeleton_human.ts", "../ts/modes/side/player/player_skeleton.ts", "../ts/modes/side/player/player_actor.ts", "../ts/modes/side/trees/treeBase.ts", "../ts/modes/side/trees/tree1.ts", "../ts/modes/side/trees/tree2.ts", "../ts/modes/side/trees/tree3.ts", "../ts/modes/side/trees/tree4.ts", "../ts/modes/side/trees/tree5.ts", "../ts/modes/side/trees/tree6.ts", "../ts/modes/side/trees/randomTree.ts", "../ts/modes/side/trees/forrest.ts", "../ts/classes/input/touchReader.ts", "../ts/modes/side/level.ts", "../ts/modes/mode.ts", "../ts/game.ts", "../ts/index.ts"],
  "sourcesContent": ["import { Game, glob } from '../game';\r\nimport { Events } from \"./event\";\r\nimport { GLRenderer } from './rendering/glRenderer';\r\nimport { Level } from './level';\r\nimport { Mode } from './mode';\r\nimport { TickerReturnData } from './ticker';\r\nimport { GLTranslator } from './rendering/glTranslator';\r\n\r\nexport type ElementAttributes = {\r\n    \r\n};\r\n\r\nexport abstract class Element {\r\n    public abstract rendererType: 'dom' | 'gl';\r\n\r\n    private events: Events<unknown>[] = [];\r\n\r\n    get t(): TickerReturnData {\r\n        return this.game.t;\r\n    }\r\n\r\n    public parent!: Element;\r\n\r\n    public get game(): Game {\r\n        return glob.game;\r\n    }\r\n    \r\n    public get mode(): Mode {\r\n        return this.game.mode;\r\n    }\r\n    public get level(): Level {\r\n        return this.game.level;\r\n    }\r\n    public get GLT(): GLTranslator {\r\n        return this.game.GLR.glt;\r\n    }\r\n    public get GLR(): GLRenderer {\r\n        return this.game.GLR;\r\n    }\r\n    public get gl(): WebGLRenderingContext{\r\n        return this.game.gl\r\n    };\r\n\r\n    public build(): void  {\r\n        //\r\n    }\r\n\r\n    addEvent(e: Events<unknown>) {\r\n        this.events.push(e);\r\n    }\r\n\r\n    getEvent(id: string) {\r\n        return this.events.find((e)=>id === e.id)\r\n    }\r\n}\r\n", "export function v2(n: [number, number?] | number, y?: number) {\r\n\tif (typeof n === 'number') {\r\n\t\treturn Vector2.f(n, y);\r\n\t} else if (typeof n === 'undefined') {\r\n\t\treturn Vector2.f(0);\r\n\t} else {\r\n\t\treturn Vector2.f(...n);\r\n\t}\r\n}\r\n\r\nexport class Vector2 {\r\n\tx: number;\r\n\ty: number;\r\n\tstatic Vector2: {};\r\n\tconstructor(x: number, y: number) {\r\n\t\tthis.x = (x === undefined) ? 0 : x;\r\n\t\tthis.y = (y === undefined) ? 0 : y;\r\n\t}\r\n\r\n\tstatic f(x: number = 0, y: number = x) {\r\n\t\treturn new Vector2(x, y);\r\n\t}\r\n\r\n\tisZero(): boolean {\r\n\t\treturn (this.x === 0 && this.y === 0)\r\n\t}\r\n\r\n\tclone(): Vector2 {\r\n\t\treturn new Vector2(this.x, this.y);\r\n\t}\r\n\r\n\tadd(vector: Vector2) {\r\n\t\treturn new Vector2(this.x + vector.x, this.y + vector.y);\r\n\t}\r\n\r\n\tmultiply(vector: Vector2) {\r\n\t\treturn new Vector2(this.x * vector.x, this.y * vector.y);\r\n\t}\r\n\r\n\tsubtract(vector: Vector2) {\r\n\t\treturn new Vector2(this.x - vector.x, this.y - vector.y);\r\n\t}\r\n\r\n\tscale(scalar: number) {\r\n\t\treturn new Vector2(this.x * scalar, this.y * scalar);\r\n\t}\r\n\r\n\tdot(vector: Vector2) {\r\n\t\treturn (this.x * vector.x + this.y + vector.y);\r\n\t}\r\n\r\n\tmoveTowards(vector: Vector2, t: number) {\r\n\t\tt = Math.min(t, 1); // still allow negative t\r\n\t\tvar diff = vector.subtract(this);\r\n\t\treturn this.add(diff.scale(t));\r\n\t}\r\n\r\n\tmagnitude() {\r\n\t\treturn Math.sqrt(this.magnitudeSqr());\r\n\t}\r\n\r\n\tmagnitudeSqr() {\r\n\t\treturn (this.x * this.x + this.y * this.y);\r\n\t}\r\n\r\n\tclampMagnitude( max:number = 1 ) {\r\n\t\treturn this.scale( 1/ this.magnitude() || 1 ).scale( Math.min( max, this.magnitude() ) );\r\n\t}\r\n\r\n\tdistance(vector: Vector2) {\r\n\t\treturn Math.sqrt(this.distanceSqr(vector));\r\n\t}\r\n\r\n\tdistanceSqr(vector: Vector2) {\r\n\t\tvar deltaX = this.x - vector.x;\r\n\t\tvar deltaY = this.y - vector.y;\r\n\t\treturn (deltaX * deltaX + deltaY * deltaY);\r\n\t}\r\n\r\n\tnormalize() {\r\n\t\tvar mag = this.magnitude();\r\n\t\tvar vector = this.clone();\r\n\t\tif (Math.abs(mag) < 1e-9) {\r\n\t\t\tvector.x = 0;\r\n\t\t\tvector.y = 0;\r\n\t\t} else {\r\n\t\t\tvector.x /= mag;\r\n\t\t\tvector.y /= mag;\r\n\t\t}\r\n\t\treturn vector;\r\n\t}\r\n\r\n\tangleDegrees() {\r\n\t\treturn this.angle() * (180/Math.PI);\r\n\t}\r\n\r\n\tangle() {\r\n\t\treturn Math.atan2(this.y, this.x);\r\n\t}\r\n\r\n\r\n\trotate(rad: number) {\r\n\t\tvar cos = Math.cos(rad);\r\n\t\tvar sin = Math.sin(rad);\r\n\t\treturn new Vector2(\r\n\t\t\tthis.x * cos - this.y * sin,\r\n\t\t\tthis.x * sin + this.y * cos\r\n\t\t);\r\n\t}\r\n\r\n\ttoPrecision(precision: number) {\r\n\t\tvar vector = this.clone();\r\n\t\tvector.x = +vector.x.toFixed(precision);\r\n\t\tvector.y = +vector.y.toFixed(precision);\r\n\t\treturn vector;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\tvar vector = this.toPrecision(1);\r\n\t\treturn (\"[\" + vector.x + \"; \" + vector.y + \"]\");\r\n\t}\r\n\r\n\tpublic clamp(min:Vector2, max:Vector2) {\r\n\t\treturn Vector2.clamp(this, min, max);\r\n    }\r\n\r\n\tpublic static min(a:Vector2, b:Vector2) {\r\n        return new Vector2(\r\n\t\t\tMath.min(a.x, b.x),\r\n\t\t\tMath.min(a.y, b.y),\r\n\t\t)\r\n    }\r\n\r\n\tpublic static max(a:Vector2, b:Vector2) {\r\n\t\treturn new Vector2(\r\n\t\t\tMath.max(a.x, b.x),\r\n\t\t\tMath.max(a.y, b.y),\r\n\t\t)\r\n    }\r\n\r\n\tpublic static clamp(value:Vector2, min:Vector2, max:Vector2) {\r\n        return Vector2.max(Vector2.min(value, min), max);\r\n    }\r\n\r\n\tpublic clampMagnitute(mag: number) {\r\n\t\treturn Vector2.clampMagnitute(this, mag);\r\n    }\r\n\r\n\tget array() {\r\n\t\treturn [this.x, this.y];\r\n\t}\r\n\r\n\tset array(a: [number, number]) {\r\n\t\t[this.x, this.y] = a;\r\n\t}\r\n\r\n\tget surfaceArea():number {\r\n\t\treturn this.x*this.y\r\n\t}\r\n\r\n\r\n\tpublic static clampMagnitute(value:Vector2, mag: number) {\r\n\t\tvar ratio = value.magnitude() / mag;\r\n\t\treturn new Vector2(value.x / ratio, value.y / ratio);\r\n    }\r\n\r\n\tstatic get zero() {\r\n\t\treturn new Vector2(0, 0);\r\n\t}\r\n\tstatic get down() {\r\n\t\treturn new Vector2(0, -1);\r\n\t}\r\n\tstatic get up() {\r\n\t\treturn new Vector2(0, 1);\r\n\t}\r\n\tstatic get right() {\r\n\t\treturn new Vector2(1, 0);\r\n\t}\r\n\tstatic get left() {\r\n\t\treturn new Vector2(-1, 0);\r\n\t}\r\n\tstatic get fromDegree() {\r\n\t\treturn new Vector2(0, 0);\r\n\t}\r\n}\r\n", "import { Element, ElementAttributes } from '../element';\r\nimport { Vector2, v2 } from '../math/vector2';\r\nimport { TickerReturnData } from '../ticker';\r\n\r\n\r\nexport type DomElementAttributes = ElementAttributes & {\r\n    id?: string,\r\n    background?: string,\r\n    position?: Vector2;\r\n    size?: Vector2;\r\n};\r\nexport class DomElement<T extends keyof HTMLElementTagNameMap> extends Element {\r\n    public dom: HTMLElementTagNameMap[T];\r\n    public children: DomElement<any>[] = [];\r\n    public rendererType = 'dom' as const;\r\n    private _position: Vector2 = v2(0);\r\n    public get position(): Vector2 {\r\n        return this._position;\r\n    }\r\n    public set position(value: Vector2) {\r\n        this._position = value;\r\n        this.x = value.x;\r\n        this.y = value.y\r\n    }\r\n    public size: Vector2 = v2(0);\r\n\r\n    public get id() { return this.dom.id; }\r\n\r\n    public set id(value: string) {\r\n        if (value) {\r\n            this.dom.id = value;\r\n        }\r\n    }\r\n\r\n    public get x(): number {\r\n        return Math.round(Number(this.dom.style.left.replace(/\\D/g,'')));\r\n    }\r\n    public set x(n: number) {\r\n        if (this.dom){\r\n            this.dom.style.left = `${n}px`;\r\n        }\r\n    }\r\n    public get y(): number {\r\n        return Math.round(Number(this.dom.style.bottom.replace(/\\D/g,'')));\r\n    }\r\n    public set y(n: number) {\r\n        if (this.dom){\r\n            this.dom.style.bottom = `${n}px`;\r\n        }\r\n    }\r\n\r\n    public set visible(value: boolean) {\r\n        this.dom? this.dom.style.display = value ? 'block' : 'none': null\r\n    }\r\n\r\n    public set background(v: string) {\r\n        this.dom.style.background = v;\r\n    }\r\n\r\n    public get width() {\r\n        return Math.round(Number(this.dom.style.width.replace(/\\D/g,'')));\r\n    }\r\n    public set width(value: number) {\r\n        if (this.dom) {\r\n            this.dom.style.width = `${value}px`;\r\n            this.dom.setAttribute('width', String(value));\r\n        }\r\n    }\r\n\r\n    public get height() {\r\n        return Math.round(Number(this.dom.style.height.replace(/\\D/g,'')));\r\n    }\r\n    public set height(value: number) {\r\n        if (this.dom) {\r\n            this.dom.style.height = `${value}px`;\r\n            this.dom.setAttribute('height', String(value));\r\n        }\r\n    }\r\n\r\n    constructor(type: T, attr: DomElementAttributes = {}) {\r\n        super();\r\n        this.dom = document.createElement(type);\r\n        this.dom.style.position = 'absolute';\r\n        this.dom.style.transformOrigin = 'bottom left';\r\n        this.dom.style.pointerEvents = 'none';\r\n        this.dom.style.bottom = '0px';\t\r\n        this.id = attr.id || '';\r\n        this.background = attr.background || '';\r\n        this.size = attr.size || Vector2.zero;\r\n        this.position = attr.position || Vector2.zero;\r\n        \r\n    }\r\n\r\n    public ready() {\r\n        this.build();\r\n    }\r\n\r\n    public tick(obj: TickerReturnData): void {\r\n        this.children.forEach((c)=>{\r\n            c.tick(obj);\r\n        })\r\n    }\r\n\r\n    public appendChild(e: DomElement<any>) {\r\n        this.dom.appendChild(e.dom);\r\n    }\r\n\r\n    public addChild(child: DomElement<any>) {\r\n        this.children.push(child);\r\n        this.dom.appendChild(child.dom);\r\n    }\r\n\r\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\r\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        this.dom.addEventListener(type, listener, options);\r\n    };\r\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\r\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void {\r\n        this.dom.removeEventListener(type, listener, options);\r\n    };\r\n\r\n\r\n\r\n}\r\n", "import { DomElement, DomElementAttributes } from \"./domElement\";\r\n\r\nexport type  DomTextAttributes = DomElementAttributes & {\r\n    text?: string,\r\n    color?: string,\r\n    fontSize?: number,\r\n    fontWeight?: number,\r\n    fontFamily?: string,\r\n    padding?: [number,number,number,number],\r\n}\r\nexport class DomText extends DomElement<'div'> {\r\n    set color (v: string) {\r\n        this.dom.style.color = v; \r\n    }\r\n    set fontSize (v: number) {\r\n        this.dom.style.fontSize = String(v)+'px'; \r\n    }\r\n    set fontWeight (v: number) {\r\n        this.dom.style.fontWeight = String(v); \r\n    }\r\n    set fontFamily (v: string) {\r\n        this.dom.style.fontFamily = v; \r\n    }\r\n    public get text() {\r\n        return this.dom.innerHTML;\r\n    }\r\n    public set text (v: string) {\r\n        this.dom.innerHTML = v?v:''; \r\n    }\r\n    public set padding (v: [number,number,number,number]) {\r\n        this.dom.style.padding = v.join('px ')+'px'; \r\n    }\r\n    public constructor(attr: DomTextAttributes = {}) {\r\n        super('div', attr);\r\n        this.color = attr.color;\r\n        this.text = attr.text;\r\n        this.fontSize = attr.fontSize;\r\n        this.fontWeight = attr.fontWeight;\r\n        this.fontFamily = attr.fontFamily;\r\n        this.padding = attr.padding || [0,0,0,0];\r\n\r\n        this.dom.style.pointerEvents = 'none';\r\n        this.dom.style.userSelect = 'none';\r\n        this.dom.style.zIndex = '1';\r\n        this.dom.style.whiteSpace = 'pre-line';\r\n    }\r\n}", "import { DomText } from '../dom/domText';\r\nimport { Vector2 } from '../math/vector2';\r\nimport { TickerReturnData } from '../ticker';\r\n\r\n\r\nexport class FPS extends DomText {\r\n    private fCount: number = 0;\r\n    private tCount: number = 0;\r\n    public constructor( ) {\r\n        super({\r\n            text: FPS.getString(''),\r\n            fontSize: 35,\r\n            fontWeight: 900,\r\n            color: 'white',\r\n            position: new Vector2(5,5), \r\n            size: new Vector2(100, 50),\r\n            background: '#ff0000aa',\r\n            fontFamily: 'monospace',\r\n            padding: [0,10,0,10]\r\n        });\r\n    }\r\n\r\n    public tick({frameRate, frame}: TickerReturnData){\r\n        if (frame % 100 === 1){\r\n            this.text = FPS.getString(frameRate.toFixed(0));\r\n        }\r\n    }\r\n\r\n    public static getString(v: string){\r\n        return `${String(v)}<sub style=\"font-size:25px; top: -7px; position: relative\">FPS</sub>`\r\n    }\r\n}", "import { DomElement } from '../dom/domElement';\r\nimport { DomText } from '../dom/domText';\r\nimport { Vector2 } from '../math/vector2';\r\n\r\n\r\nexport class Loader extends DomElement<'div'> {\r\n    bar: DomElement<'div'>;\r\n    barBackground: DomElement<'div'>;\r\n    text: DomText;\r\n    public constructor( ) {\r\n        super('div',{\r\n            position: new Vector2(5, 5),\r\n            size: new Vector2(600, 70),\r\n            background: '#272727',\r\n        });\r\n\r\n        this.bar = new DomElement('div', {\r\n            size: new Vector2(600, 70),\r\n            background: '#80808070',\r\n        })\r\n        this.dom.appendChild(this.bar.dom);\r\n\r\n        this.text = new DomText({\r\n            text: '',\r\n            fontSize: 35,\r\n            fontWeight: 900,\r\n            color: 'white',\r\n            size: new Vector2(600, 70),\r\n            position: new Vector2(30, -10),\r\n            fontFamily: 'monospace',\r\n        });\r\n        this.dom.appendChild(this.text.dom);\r\n    }\r\n\r\n    public update(value: number, total: number){\r\n        this.text.text = `loaded ${total - value} out of ${total} assets`;\r\n        this.bar.width = 600 * (total - value) / total;\r\n    }\r\n}", "export type eventFunction<T> = (v: T) => void;\r\nexport class Events<T> {\r\n    public id: string;\r\n    private subscribers: Record<string, eventFunction<T>> = {};\r\n    constructor(id: string) {\r\n        this.id = id;\r\n    }\r\n\r\n    public subscribe(key: string, func: eventFunction<T>) {\r\n        this.subscribers[key] = func;\r\n    }\r\n\r\n    public alert(v: T) {\r\n        Object.values(this.subscribers).forEach((s) => {\r\n            s(v);\r\n        });\r\n    }\r\n}\r\n", "import { ElementAttributes } from '../element';\r\nimport { Events } from '../event';\r\nimport { Vector2, v2 } from '../math/vector2';\r\nimport { Mode } from '../mode';\r\nimport { TickerReturnData } from '../ticker';\r\nimport { DomElement } from './domElement';\r\n\r\n\r\nexport type DomElementAttributes = ElementAttributes & {\r\n    id?: string,\r\n    size?: Vector2,\r\n    background?: string,\r\n    position?: Vector2;\r\n};\r\nexport class Renderer extends DomElement<'canvas'> {\r\n    public tickerData: TickerReturnData;\r\n\r\n    constructor() {\r\n        super('canvas');\r\n        this.dom.style.position = 'absolute';\r\n        this.dom.style.pointerEvents = 'all';\r\n        this.dom.style.bottom = '0px';\r\n        this.dom.style.touchAction = 'none';\r\n        this.dom.tabIndex = 1;\r\n\r\n        window.addEventListener(\"resize\", () => {\r\n            this.resize();\r\n        });\r\n\r\n        this.addEvent(new Events('resize'));\r\n        this.resize();\r\n    }\r\n\r\n    resize() {\r\n        this.size = v2(document.body.clientWidth, document.body.clientHeight);\r\n        this.dom.style.width = `${this.size.x}px`;\r\n        this.dom.setAttribute('width', String(this.size.x));\r\n\r\n        this.dom.style.height = `${this.size.y}px`;\r\n        this.dom.setAttribute('height', String(this.size.y));\r\n\r\n        this.getEvent('resize').alert(this.size);\r\n\r\n    }\r\n\r\n    public get width() {\r\n        return Math.round(Number(this.dom.style.width.replace(/\\D/g, '')));\r\n    }\r\n    public set width(value: number) {\r\n        this.dom.style.width = `${value}px`;\r\n        this.dom.setAttribute('width', String(value));\r\n    }\r\n\r\n    public get height() {\r\n        return Math.round(Number(this.dom.style.height.replace(/\\D/g, '')));\r\n    }\r\n    public set height(value: number) {\r\n        this.dom.style.height = `${value}px`;\r\n        this.dom.setAttribute('height', String(value));\r\n    }\r\n\r\n    public addMode(child: Mode) {\r\n        child.build();\r\n    }\r\n\r\n    private _context: '2d' | '3d';\r\n    public get context(): '2d' | '3d' {\r\n        return this._context;\r\n    }\r\n    public set context(value: '2d' | '3d') {\r\n        this._context = value;\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        this.tickerData = obj;\r\n        this.game.GLR.draw();\r\n        this.game.mode.tick(obj);\r\n    }\r\n}\r\n\r\n\r\n", "export class Pad {\r\n    recentPad: Gamepad;\r\n    constructor(public gamepad:Gamepad) {\r\n        \r\n    }\r\n\r\n    tick() {\r\n        this.recentPad = navigator.getGamepads().find((g)=>g.id === this.gamepad.id);\r\n        // console.log(this.recentPad.buttons[7]);\r\n        \r\n    }\r\n}", "import { Pad } from './gamepad';\r\n\r\nexport class PadManager {\r\n    private pads: Record<string, Pad> = {};\r\n    constructor() {\r\n        window.addEventListener(\"gamepadconnected\", this.connect.bind(this));\r\n        window.addEventListener(\"gamepaddisconnected\", this.disconnect.bind(this));\r\n    }\r\n    connect(e: GamepadEvent) {\r\n        this.pads[e.gamepad.id] = new Pad(e.gamepad);\r\n    }\r\n    disconnect(e: GamepadEvent) {\r\n        delete this.pads[e.gamepad.id];\r\n    }\r\n    tick() {\r\n        // console.log(this.pads);\r\n        \r\n        Object.values(this.pads).forEach((pad)=>{\r\n            pad.tick();\r\n        });\r\n    }\r\n}", "import { glob } from '../../game';\r\nimport { DomText } from '../dom/domText';\r\n\r\nexport class Keyboard {\r\n\r\n    private keyDown: Record<string, [() => void]> = {};\r\n    private keyUp: Record<string, [() => void]> = {};\r\n\r\n    ready() {\r\n        glob.renderer.dom.addEventListener('keydown', (e) => {\r\n            const k = e.key.toLowerCase();\r\n            this.keyDown[k]?.forEach((c) => {\r\n                c();\r\n            });\r\n        });\r\n        glob.renderer.dom.addEventListener('keyup', (e) => {\r\n            const k = e.key.toLowerCase();\r\n            this.keyUp[k]?.forEach((c) => {\r\n                c();\r\n            });\r\n        });\r\n    }\r\n\r\n    register(key: string, down: () => void, up: () => void) {\r\n        const k = key.toLowerCase();\r\n\r\n        if (this.keyDown[k]) this.keyDown[k].push(down);\r\n        else this.keyDown[k] = [down];\r\n\r\n        if (this.keyUp[k]) this.keyUp[k].push(up);\r\n        else this.keyUp[k] = [up];\r\n    }\r\n}\r\n\r\nexport class InputDevices {\r\n    public keyboard: Keyboard = new Keyboard();\r\n    private overlay: DomText;\r\n    private _locked: boolean;\r\n    mobile: boolean;\r\n    public get locked(): boolean {\r\n        return this._locked;\r\n    }\r\n    public set locked(value: boolean) {\r\n        this._locked = value;\r\n        this.overlay.dom.style.display = !value ? 'block' : 'none';\r\n    }\r\n    constructor() {\r\n        this.overlay = new DomText({\r\n            text: 'Pauzed',\r\n        });\r\n        this.overlay.dom.setAttribute('style', `\r\n            transform-origin: left bottom;\r\n            pointer-events: none;\r\n            bottom: 0px;\r\n            left: 0px;\r\n            user-select: none;\r\n            z-index: 999;\r\n            position: absolute;\r\n            height: 100vh;\r\n            width: 100vw;\r\n            color: white !important;\r\n            font-family: monospace;\r\n            font-weight: bold;\r\n            font-size: 40px;\r\n            padding-left: 50px;\r\n            padding-top: 20px;\r\n            box-sizing: border-box;\r\n            text-transform: uppercase;`\r\n        );\r\n    }\r\n\r\n    ready() {\r\n        window.addEventListener(`contextmenu`, (e) => e.preventDefault());\r\n\r\n        this.mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n        if (this.mobile) {\r\n            //mobile\r\n            this.locked = true;\r\n\r\n        } else {\r\n            glob.renderer.dom.addEventListener('click', (e) => {\r\n                if (!this.locked) {\r\n                    glob.renderer.dom.requestPointerLock();\r\n                }\r\n            });\r\n\r\n            document.addEventListener('pointerlockchange', () => {\r\n                this.locked = (document.pointerLockElement === glob.renderer.dom);\r\n            });\r\n            document.body.appendChild(this.overlay.dom);\r\n\r\n        }\r\n        this.keyboard.ready();\r\n    }\r\n}\r\n", "export default `\r\nattribute vec4 o_a_position;\r\nattribute vec3 o_a_normal;\r\n\r\nuniform mat4 uModelViewMatrix;\r\nuniform mat4 uProjectionMatrix;\r\nattribute vec2 aTextureCoord;\r\nuniform mat4 uNormalMatrix;\r\nattribute vec3 aVertexNormal;\r\n\r\nuniform vec3 o_u_lightWorldPosition;\r\nuniform vec3 o_u_viewWorldPosition;\r\n\r\nuniform mat4 o_u_world;\r\nuniform mat4 o_u_worldViewProjection;\r\nuniform mat4 o_u_worldInverseTranspose;\r\n\r\nvarying vec3 o_v_normal;\r\n\r\nvarying vec3 o_v_surfaceToLight;\r\nvarying vec3 o_v_surfaceToView;\r\n\r\nvarying highp vec2 vTextureCoord;\r\n\r\nvoid main() {\r\n  gl_Position = uProjectionMatrix * uModelViewMatrix * o_a_position;\r\n  vTextureCoord = aTextureCoord;\r\n\r\n  o_v_normal = (uNormalMatrix * vec4(aVertexNormal, 1.0)).xyz;\r\n  vec3 surfaceWorldPosition = (uModelViewMatrix * o_a_position).xyz;\r\n  o_v_surfaceToLight = o_u_lightWorldPosition - surfaceWorldPosition;\r\n  o_v_surfaceToView = normalize(o_u_viewWorldPosition - surfaceWorldPosition);\r\n}`\r\n", "export default `\r\nprecision mediump float;\r\n\r\nvarying vec3 o_v_normal;\r\nvarying vec3 o_v_surfaceToLight;\r\nvarying vec3 o_v_surfaceToView;\r\nvarying highp vec2 vTextureCoord;\r\n\r\nuniform sampler2D uSampler;\r\n\r\nuniform float o_u_shininess;\r\nuniform vec3 o_u_lightColor;\r\nuniform vec3 o_u_specularColor;\r\nuniform vec3 o_u_lightDirection;\r\nuniform float o_u_innerLimit;  \r\nuniform float o_u_outerLimit;  \r\nuniform float o_u_innerRange;  \r\nuniform float o_u_outerRange;  \r\nuniform int o_u_ignoreLighting;  \r\n\r\nvoid main() {\r\n  highp vec4 texelColor = texture2D(uSampler, vTextureCoord);\r\n\r\n  vec3 normal = normalize(o_v_normal);\r\n\r\n  vec3 surfaceToLightDirection = normalize(o_v_surfaceToLight);\r\n  vec3 surfaceToViewDirection = normalize(o_v_surfaceToView);\r\n  vec3 halfVector = normalize(surfaceToLightDirection + surfaceToViewDirection);\r\n\r\n  float dotFromDirection = dot(surfaceToLightDirection,-o_u_lightDirection);\r\n\r\n  float rangeLight = smoothstep(o_u_outerRange, o_u_innerRange, length(o_v_surfaceToLight));\r\n  float inLight = smoothstep(o_u_outerLimit, o_u_innerLimit, dotFromDirection);\r\n  float light = 0.2 + rangeLight*inLight*dot(normal, surfaceToLightDirection);\r\n  float specular = rangeLight*(inLight*pow(dot(normal, halfVector), o_u_shininess));\r\n  gl_FragColor = texelColor;\r\n  if (o_u_ignoreLighting == 0){\r\n    gl_FragColor.rgb *= light * o_u_lightColor;\r\n    gl_FragColor.rgb += specular * o_u_specularColor;\r\n  }\r\n}\r\n`;", "import vs from '../shaders/vertexShaderDir';\r\nimport fs from '../shaders/fragmentShaderDir';\r\n\r\nfunction loadShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n    const shader = gl.createShader(type);\r\n    \r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        console.error(`An error occurred compiling the shaders: ${gl.getShaderInfoLog(shader)}`)\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n\r\n    return shader;\r\n}\r\n\r\nexport type uniforms = Record<string, {\r\n    pointer: WebGLUniformLocation,\r\n    type: 'matrix4' | 'float' | 'int' | 'vector2' | 'vector3' | 'vector4';\r\n}>\r\nexport type attributes = Record<string, {\r\n    pointer: number,\r\n    count: number;\r\n}>\r\n\r\nexport function initShaderProgram(gl: WebGLRenderingContext): [WebGLProgram, uniforms, attributes] {\r\n\r\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vs);\r\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fs);\r\n\r\n    const shaderProgram = gl.createProgram();\r\n    gl.attachShader(shaderProgram, vertexShader);\r\n    gl.attachShader(shaderProgram, fragmentShader);\r\n    gl.linkProgram(shaderProgram);\r\n    \r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n        alert(\r\n            `Unable to initialize the shader program: ${gl.getProgramInfoLog(\r\n                shaderProgram,\r\n            )}`,\r\n        );\r\n        return;\r\n    }\r\n\r\n    return [\r\n        shaderProgram, \r\n        {\r\n            'uProjectionMatrix':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"uProjectionMatrix\"),\r\n                type: 'matrix4'\r\n            },\r\n            'uModelViewMatrix':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"uModelViewMatrix\"),\r\n                type: 'matrix4'\r\n            },\r\n            'uNormalMatrix':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"uNormalMatrix\"),\r\n                type: 'matrix4'\r\n            },\r\n            'uOpacity':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"uOpacity\"),\r\n                type: 'float'\r\n            },\r\n            'uIntensity':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"uIntensity\"),\r\n                type: 'float'\r\n            },\r\n            'uSampler':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"uSampler\"),\r\n                type: 'int'\r\n            },\r\n            'o_u_worldViewProjection':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_worldViewProjection\"),\r\n                type: 'matrix4'\r\n            },\r\n            'o_u_worldInverseTranspose':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_worldInverseTranspose\"),\r\n                type: 'matrix4'\r\n            },\r\n            'o_u_lightColor':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_lightColor\"),\r\n                type: 'vector3'\r\n            },\r\n            'o_u_specularColor':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_specularColor\"),\r\n                type: 'vector3'\r\n            },\r\n            'o_u_shininess':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_shininess\"),\r\n                type: 'float'\r\n            },\r\n            'o_u_lightWorldPosition':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_lightWorldPosition\"),\r\n                type: 'vector3'\r\n            },\r\n            'o_u_viewWorldPosition':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_viewWorldPosition\"),\r\n                type: 'vector3'\r\n            },\r\n            'o_u_world':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_world\"),\r\n                type: 'matrix4'\r\n            },\r\n            'o_u_lightDirection':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_lightDirection\"),\r\n                type: 'vector3'\r\n            },\r\n            'o_u_innerLimit':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_innerLimit\"),\r\n                type: 'float'\r\n            },\r\n            'o_u_outerLimit':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_outerLimit\"),\r\n                type: 'float'\r\n            },\r\n            'o_u_innerRange':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_innerRange\"),\r\n                type: 'float'\r\n            },\r\n            'o_u_outerRange':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_outerRange\"),\r\n                type: 'float'\r\n            },\r\n            'o_u_ignoreLighting':{\r\n                pointer: gl.getUniformLocation(shaderProgram, \"o_u_ignoreLighting\"),\r\n                type: 'int'\r\n            },\r\n        },\r\n        {\r\n            'aVertexPosition':{\r\n                pointer: gl.getAttribLocation(shaderProgram, \"aVertexPosition\"),\r\n                count: 3,\r\n            },\r\n            'aVertexNormal':{\r\n                pointer: gl.getAttribLocation(shaderProgram, \"aVertexNormal\"),\r\n                count: 3,\r\n            },\r\n            'aTextureCoord':{\r\n                pointer: gl.getAttribLocation(shaderProgram, \"aTextureCoord\"),\r\n                count: 2,\r\n            },\r\n            'o_a_position':{\r\n                pointer: gl.getAttribLocation(shaderProgram, \"o_a_position\"),\r\n                count: 3,\r\n            },\r\n            'o_a_normal':{\r\n                pointer: gl.getAttribLocation(shaderProgram, \"o_a_normal\"),\r\n                count: 3,\r\n            },\r\n        }\r\n    ]\r\n}", "import { mat4, vec2, vec3, vec4 } from 'gl-matrix';\r\nimport { Game } from '../../game';\r\nimport { GLRenderer } from './glRenderer';\r\nimport { attributes, initShaderProgram, uniforms } from './glrInit';\r\n\r\nexport class GLTranslator {\r\n\r\n    public program: WebGLProgram;\r\n    private uniforms: uniforms;\r\n    private attributes: attributes;\r\n    public gl: WebGLRenderingContext;\r\n\r\n    constructor(public game: Game, public glr: GLRenderer) {\r\n        this.gl = this.glr.gl;\r\n        [this.program, this.uniforms, this.attributes] = initShaderProgram(this.gl) as [WebGLProgram, uniforms, attributes];\r\n    }\r\n\r\n    public createBuffer(data: number[], type: 'normal'|'element' = 'normal', dataType: typeof Float32Array|typeof Uint32Array = Float32Array) {\r\n        const buffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(type === 'element'?this.gl.ELEMENT_ARRAY_BUFFER:this.gl.ARRAY_BUFFER, buffer);\r\n        this.gl.bufferData(\r\n            type === 'element'?this.gl.ELEMENT_ARRAY_BUFFER:this.gl.ARRAY_BUFFER,\r\n            new dataType(data),\r\n            this.gl.STATIC_DRAW\r\n        );\r\n        return buffer;\r\n    }\r\n\r\n    public sendAttribute(pointer: string, buffer: WebGLBuffer) {\r\n        const at = this.attributes[pointer];\r\n        if (at){\r\n            this.sendBuffer(buffer);\r\n            this.gl.vertexAttribPointer(\r\n                at.pointer,\r\n                at.count,\r\n                this.gl.FLOAT,\r\n                false,\r\n                0,\r\n                0,\r\n            );\r\n            this.gl.enableVertexAttribArray(at.pointer);\r\n\r\n        } else {\r\n            throw new Error(`${pointer} attribute doesnt exist`)\r\n        }\r\n                \r\n    }\r\n\r\n    public sendTexture(texture: WebGLTexture): void {\r\n        this.gl.activeTexture(this.gl.TEXTURE0);\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\r\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    }\r\n\r\n    public sendBuffer(buffer: WebGLBuffer, type: 'normal'|'element' = 'normal'): void {\r\n        this.gl.bindBuffer(type === 'element'?this.gl.ELEMENT_ARRAY_BUFFER:this.gl.ARRAY_BUFFER, buffer);\r\n    }\r\n    public sendUniform(pointer: string, data: unknown): void {\r\n        const un = this.uniforms[pointer];\r\n        if (un){\r\n            if (un.type === 'matrix4') this.sendMat4(un.pointer, data as mat4);\r\n            if (un.type === 'float') this.sendFloat(un.pointer, data as number);\r\n            if (un.type === 'int') this.sendInt(un.pointer, data as number);\r\n            if (un.type === 'vector2') this.sendVector2(un.pointer, data as vec2);\r\n            if (un.type === 'vector3') this.sendVector3(un.pointer, data as vec3);\r\n            if (un.type === 'vector4') this.sendVector4(un.pointer, data as vec4);\r\n        } else {\r\n            throw new Error('unform doesnt exist')\r\n        }\r\n    }\r\n\r\n    public drawElements(n: number) {\r\n        this.gl.drawElements(\r\n            this.gl.TRIANGLES,\r\n            n,\r\n            this.gl.UNSIGNED_INT,\r\n            0\r\n        );\r\n    }\r\n\r\n    private sendMat4(pointer: WebGLUniformLocation, data: mat4) {\r\n        this.gl.uniformMatrix4fv(\r\n            pointer,\r\n            false,\r\n            data,\r\n        );\r\n    }\r\n    private sendFloat(pointer: WebGLUniformLocation, data: number) {\r\n        this.gl.uniform1f(\r\n            pointer,\r\n            data,\r\n        );\r\n    }\r\n    private sendInt(pointer: WebGLUniformLocation, data: number) {\r\n        this.gl.uniform1i(\r\n            pointer,\r\n            data,\r\n        );\r\n    }\r\n    private sendVector2(pointer: WebGLUniformLocation, data: vec2) {\r\n        this.gl.uniform2fv(\r\n            pointer,\r\n            data,\r\n        );\r\n    }\r\n    private sendVector3(pointer: WebGLUniformLocation, data: vec3) {\r\n        this.gl.uniform3fv(\r\n            pointer,\r\n            data,\r\n        );\r\n    }\r\n    private sendVector4(pointer: WebGLUniformLocation, data: vec4) {\r\n        this.gl.uniform4fv(\r\n            pointer,\r\n            data,\r\n        );\r\n    }\r\n}", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import { Vector3 } from '../math/vector3';\r\n\r\nexport abstract class Util {\r\n    public static clamp(value: number, min: number, max: number) {\r\n        return Math.max(Math.min(value, max), min);\r\n    }\r\n    public static to0(value: number, tolerance: number = 0.1) {\r\n        return Math.abs(value) < tolerance ? 0 : value;\r\n    }\r\n\r\n    public static padArray(ar: any[], b: any, len: number) {\r\n        return ar.concat(Array.from(Array(len).fill(b))).slice(0, len);\r\n    }\r\n\r\n    public static addArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a + br[i]);\r\n    }\r\n\r\n    public static subtractArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a - br[i]);\r\n    }\r\n\r\n    public static multiplyArrays(ar: number[], br: number[]) {\r\n        return ar.map((a, i) => a * br[i]);\r\n    }\r\n\r\n    public static scaleArrays(ar: number[], b: number) {\r\n        return ar.map((a, i) => a * b);\r\n    }\r\n\r\n    public static radToDeg(r: number) {\r\n        return r * 180 / Math.PI;\r\n    }\r\n\r\n    public static degToRad(d: number) {\r\n        return d * Math.PI / 180;\r\n    }\r\n\r\n    public static closestVectorMagniture(vectors: Vector3[], target: number): Vector3 {\r\n        let current: Vector3;\r\n        vectors.forEach((v) => {\r\n            if (current === undefined || Math.abs(v.magnitude()) < Math.abs(current.magnitude())) current = v;\r\n            else {\r\n                // console.log(current.magnitude(), v.magnitude());\r\n            }\r\n\r\n        });\r\n        return current;\r\n    }\r\n\r\n\r\n}", "import { vec3 } from 'gl-matrix';\r\nimport { Vector2, v2 } from './vector2';\r\nimport { Util } from '../util/utils';\r\n\r\nexport function v3(): Vector3;\r\nexport function v3(a?: [number?, number?, number?]): Vector3;\r\nexport function v3(a?: number, b?: number, c?: number): Vector3;\r\nexport function v3(a?: [number?, number?, number?] | number, b?: number, c?: number): Vector3 {\r\n\tif (typeof a === 'number') {\r\n\t\treturn Vector3.f(a, b, c);\r\n\t} else if (typeof a === 'undefined') {\r\n\t\treturn Vector3.f(0);\r\n\t} else {\r\n\t\treturn Vector3.f(...a);\r\n\t}\r\n}\r\n\r\nexport class Vector3 {\r\n\tpublic get pitch(): number { return this.x; }\r\n\tpublic set pitch(value: number) { this.x = value; }\r\n\r\n\tpublic get yaw(): number { return this.y; }\r\n\tpublic set yaw(value: number) { this.y = value; }\r\n\r\n\tpublic get roll(): number { return this.z; }\r\n\tpublic set roll(value: number) { this.z = value; }\r\n\r\n\tpublic get x(): number { return this.vec[0]; }\r\n\tpublic set x(value: number) { this.vec[0] = value; }\r\n\r\n\tpublic get y(): number { return this.vec[1]; }\r\n\tpublic set y(value: number) { this.vec[1] = value; }\r\n\r\n\tpublic get z(): number { return this.vec[2]; }\r\n\tpublic set z(value: number) { this.vec[2] = value; }\r\n\r\n\tpublic get xy() { return v2(this.x, this.y); }\r\n\tpublic set xy(v: Vector2) { this.x = v.x; this.y = v.y}\r\n\r\n\tpublic get xz() { return v2(this.x, this.z); }\r\n\tpublic set xz(v: Vector2) { this.x = v.x; this.z = v.y}\r\n\r\n\tpublic get yx() { return v2(this.y, this.x); }\r\n\tpublic set yx(v: Vector2) { this.y = v.x; this.x = v.y}\r\n\r\n\tpublic get yz() { return v2(this.y, this.z); }\r\n\tpublic set yz(v: Vector2) { this.y = v.x; this.z = v.y}\r\n\r\n\tpublic get zx() { return v2(this.z, this.x); }\r\n\tpublic set zx(v: Vector2) { this.z = v.x; this.x = v.y}\r\n\r\n\tpublic get zy() { return v2(this.z, this.y); }\r\n\tpublic set zy(v: Vector2) { this.z = v.x; this.y = v.y}\r\n\r\n\r\n\tpublic vec: vec3;\r\n\r\n\tconstructor(x: number = 0, y: number = 0, z: number = 0) {\r\n\t\tthis.vec = [x, y, z];\r\n\t}\r\n\r\n\tstatic from2(vector: Vector2, z: number = 0) {\r\n\t\treturn new Vector3(vector.x, vector.y, z);\r\n\t}\r\n\r\n\tstatic f(x: number = 0, y: number = x, z: number = x) {\r\n\t\treturn new Vector3(x, y, z);\r\n\t}\r\n\r\n\tstatic get forwards() {\r\n\t\treturn new Vector3(0, 0, 1);\r\n\t}\r\n\tstatic get backwards() {\r\n\t\treturn new Vector3(0, 0, -1);\r\n\t}\r\n\tstatic get up() {\r\n\t\treturn new Vector3(0, 1, 0);\r\n\t}\r\n\tstatic get down() {\r\n\t\treturn new Vector3(0, -1, 0);\r\n\t}\r\n\tstatic get left() {\r\n\t\treturn new Vector3(-1, 0, 0);\r\n\t}\r\n\tstatic get right() {\r\n\t\treturn new Vector3(1, 0, 0);\r\n\t}\r\n\tstatic get PI() {\r\n\t\treturn new Vector3(Math.PI, Math.PI, Math.PI);\r\n\t}\r\n\tstatic get TAU() {\r\n\t\treturn Vector3.PI.scale(0.5);\r\n\t}\r\n\r\n\tget array() {\r\n\t\treturn [this.x, this.y, this.z];\r\n\t}\r\n\r\n\tset array(a: [number, number, number]) {\r\n\t\t[this.x, this.y, this.z] = a;\r\n\t}\r\n\r\n\tforEach(callbackfn: (value: number, index: number, array: number[]) => void): void {\r\n\t\tthis.array.forEach(callbackfn);\r\n\t};\r\n\r\n\tget c(): Vector3 {\r\n\t\treturn this.clone();\r\n\t}\r\n\r\n\tequals(vector: Vector3): boolean {\r\n\t\treturn (\r\n\t\t\tthis.x === vector.x &&\r\n\t\t\tthis.y === vector.y &&\r\n\t\t\tthis.z === vector.z\r\n\t\t);\r\n\t}\r\n\r\n\tclone(): Vector3 {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x,\r\n\t\t\tthis.y,\r\n\t\t\tthis.z\r\n\t\t);\r\n\t}\r\n\r\n\tadd(vector: Vector3) {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x + vector.x,\r\n\t\t\tthis.y + vector.y,\r\n\t\t\tthis.z + vector.z,\r\n\t\t);\r\n\t}\r\n\r\n\tmultiply(a: Vector3): Vector3;\r\n\tmultiply(a: number, b: number, c: number): Vector3;\r\n\tmultiply(a: Vector3 | number, b?: number, c?: number): Vector3 {\r\n\t\tconst [x, y, z] = (typeof a === 'number') ? [a, b, c] : a.array;\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x * x,\r\n\t\t\tthis.y * y,\r\n\t\t\tthis.z * z,\r\n\t\t);\r\n\t}\r\n\r\n\tsubtract(vector: Vector3) {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x - vector.x,\r\n\t\t\tthis.y - vector.y,\r\n\t\t\tthis.z - vector.z,\r\n\t\t);\r\n\t}\r\n\r\n\tscale(scalar: number) {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x * scalar,\r\n\t\t\tthis.y * scalar,\r\n\t\t\tthis.z * scalar,\r\n\t\t);\r\n\t}\r\n\r\n\tdivide(vector: Vector3) {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x / vector.x,\r\n\t\t\tthis.y / vector.y,\r\n\t\t\tthis.z / vector.z,\r\n\t\t);\r\n\t}\r\n\r\n\trotateXY(rad: number) {\r\n\t\tconst [a, b] = this.xy.rotate(rad).array;\r\n\r\n\t\treturn new Vector3(\r\n\t\t\ta,\r\n\t\t\tthis.y,\r\n\t\t\tb,\r\n\t\t);\r\n\t}\r\n\trotateXZ(rad: number) {\r\n\t\tconst [a, b] = this.xz.rotate(rad).array;\r\n\r\n\t\treturn new Vector3(\r\n\t\t\ta,\r\n\t\t\tb,\r\n\t\t\tthis.z,\r\n\t\t);\r\n\t}\r\n\trotateYZ(rad: number) {\r\n\t\tconst [a, b] = this.yz.rotate(rad).array;\r\n\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x,\r\n\t\t\ta,\r\n\t\t\tb,\r\n\t\t);\r\n\t}\r\n\r\n\tmagnitude() {\r\n\t\treturn Math.sqrt(this.magnitudeSqr());\r\n\t}\r\n\r\n\tmagnitudeSqr() {\r\n\t\treturn (this.x * this.x + this.y * this.y + this.z * this.z);\r\n\t}\r\n\r\n\tmod(max: Vector3) {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x % max.x,\r\n\t\t\tthis.y % max.y,\r\n\t\t\tthis.z % max.z,\r\n\t\t);\r\n\t}\r\n\tclamp(min: Vector3, max: Vector3) {\r\n\t\treturn new Vector3(\r\n\t\t\tUtil.clamp(this.x, min.x, max.x),\r\n\t\t\tUtil.clamp(this.y, min.y, max.y),\r\n\t\t\tUtil.clamp(this.z, min.z, max.z),\r\n\t\t);\r\n\t}\r\n\tnormalize() {\r\n\t\tlet len = this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\tif (len > 0) {\r\n\t\t\tlen = 1 / Math.sqrt(len);\r\n\t\t}\r\n\t\treturn v3(\r\n\t\t\tthis.x * len,\r\n\t\t\tthis.y * len,\r\n\t\t\tthis.z * len\r\n\t\t);\r\n\t}\r\n}\r\n", "import { mat4, vec3 } from 'gl-matrix';\r\nimport { Vector3, v3 } from './vector3';\r\n\r\nexport function m4() {\r\n\treturn Matrix4.f()\r\n}\r\n\r\nexport class Matrix4 {\r\n    public mat4: mat4;\r\n    public constructor(source?: mat4) {\r\n        this.mat4 = source?mat4.clone(source):mat4.create();\r\n        return this\r\n    }\r\n\r\n    static f() {\r\n\t\treturn new Matrix4();\r\n\t}\r\n\r\n    public add(mat: Matrix4) {\r\n        mat4.add(\r\n            this.mat4,\r\n            this.mat4,\r\n            mat.mat4\r\n        );\r\n        return this;\r\n    }\r\n    public subtract(mat: Matrix4) {\r\n        mat4.subtract(\r\n            this.mat4,\r\n            this.mat4,\r\n            mat.mat4\r\n        );\r\n        return this;\r\n    }\r\n    public multiply(mat: Matrix4) {\r\n        mat4.multiply(\r\n            this.mat4,\r\n            this.mat4,\r\n            mat.mat4\r\n        );\r\n        return this;\r\n    }\r\n    public translate(vector: Vector3) {\r\n        mat4.translate(\r\n            this.mat4,\r\n            this.mat4,\r\n            vector.vec\r\n        );\r\n        return this;\r\n    }\r\n    public invert() {\r\n        mat4.invert(\r\n            this.mat4,\r\n            this.mat4,\r\n        );\r\n        return this;\r\n    }\r\n    public transpose(mat?: Matrix4) {\r\n        mat4.transpose(\r\n            this.mat4,\r\n            mat?mat.mat4:this.mat4,\r\n        );\r\n        return this;\r\n    }\r\n    public rotateAxis(angle: number, axis: 0|1|2) {\r\n        mat4.rotate(\r\n            this.mat4,\r\n            this.mat4,\r\n            angle,\r\n            [[1,0,0], [0,1,0],[0,0,1]][axis] as vec3\r\n        );\r\n        return this;\r\n    }\r\n    public rotate(rotation: Vector3) {\r\n        rotation.forEach((r, i) => {\r\n            this.rotateAxis(r, i as 0|1|2)\r\n        });\r\n        return this;\r\n    }\r\n    public perspective(fov: number, near: number = 1, far: number = Infinity) {\r\n        mat4.perspective(\r\n            this.mat4,\r\n            fov,\r\n            document.body.clientWidth / document.body.clientHeight,\r\n            near,\r\n            far\r\n        );\r\n        return this;\r\n    }\r\n    public clone() {\r\n        return new Matrix4(this.mat4);\r\n    }\r\n\r\n    public static lookAt(camera: Vector3, target: Vector3): Matrix4 {\r\n        let matrix = m4();\r\n        mat4.lookAt(\r\n            matrix.mat4,\r\n            camera.vec,\r\n            target.vec,\r\n            v3(0,1,0).vec\r\n        );\r\n        return matrix;\r\n    }\r\n\r\n    public get position() {\r\n        return v3(this.mat4[12], this.mat4[13], this.mat4[14])\r\n    }\r\n}\r\n", "import { vec4 } from 'gl-matrix';\r\nimport { Game } from '../../game';\r\nimport { TickerReturnData } from '../ticker';\r\nimport { Vector3 } from '../math/vector3';\r\nimport { GLRendable } from '../rendable';\r\nimport { GlElement } from '../elementBase';\r\nimport { Vector2 } from '../math/vector2';\r\nimport { GLTranslator } from './glTranslator';\r\nimport { Matrix4, m4 } from '../math/matrix4';\r\nimport { Util } from '../util/utils';\r\n\r\nexport interface bufferDataInitilizers {\r\n    indices: WebGLBuffer;\r\n    initColor: (gl: WebGLRenderingContext, colors: vec4[]) => WebGLBuffer;\r\n    initSize: (gl: WebGLRenderingContext, size: Vector3) => WebGLBuffer;\r\n    verticesCount: number;\r\n}\r\nexport interface buffers {\r\n    indices: WebGLBuffer;\r\n    positionBuffer: WebGLBuffer;\r\n    textureCoord: WebGLBuffer,\r\n    normalBuffer: WebGLBuffer,\r\n}\r\n\r\nexport type GlElementType = 'controller' | 'obj' | 'mesh' | 'collider' | 'group';\r\n\r\nexport interface objectData {\r\n    meshType: GlElementType,\r\n    size3?: Vector3,\r\n    position3: Vector3,\r\n    buffer?: buffers;\r\n    verticesCount?: number;\r\n}\r\n\r\nexport class GLRenderer {\r\n    private objects: (GLRendable)[] = [];\r\n    public gl: WebGLRenderingContext;\r\n    public glt: GLTranslator;\r\n\r\n    get t(): TickerReturnData {\r\n        return this.game.t;\r\n    }\r\n\r\n    constructor(public game: Game) {\r\n        this.gl = this.game.renderer.dom.getContext('webgl');\r\n        this.gl.getExtension(\"OES_element_index_uint\");\r\n        this.gl.enable(this.gl.BLEND);\r\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n        this.glt = new GLTranslator(this.game, this);\r\n\r\n        this.game.renderer.getEvent('resize').subscribe('glr', (size: Vector2) => {\r\n            this.gl.viewport(0, 0, size.x, size.y);\r\n        });\r\n\r\n    }\r\n\r\n    initGlElement(mesh: GLRendable) {\r\n        this.objects.push(mesh);\r\n    }\r\n\r\n    clear() {\r\n        this.gl.clearColor(...this.game.level.background);\r\n        this.gl.clearDepth(1.0);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n        this.gl.enable(this.gl.CULL_FACE);\r\n        this.gl.depthFunc(this.gl.LEQUAL);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n    }\r\n\r\n    getProjection() {\r\n        return new Matrix4()\r\n            .perspective(\r\n                (this.game.mode.camera.fov * Math.PI) / 180,\r\n                1,\r\n                20000\r\n            )\r\n            .translate(this.game.mode.camera.offset.multiply(1, 1, -1))\r\n            .rotate(this.game.mode.camera.rotation)\r\n            .translate(this.game.mode.camera.target.multiply(-1, -1, 1));\r\n    }\r\n\r\n    draw() {\r\n        this.clear();\r\n        this.gl.useProgram(this.glt.program);\r\n        const camera = m4()\r\n            .translate(this.game.mode.camera.offset.multiply(1, 1, -1))\r\n            .rotate(this.game.mode.camera.rotation)\r\n            .translate(this.game.mode.camera.target.multiply(-1, -1, 1))\r\n\r\n        this.glt.sendUniform('uSampler', 0);\r\n        this.glt.sendUniform('uProjectionMatrix', this.getProjection().mat4);\r\n        this.glt.sendUniform('o_u_viewWorldPosition', camera.invert().position.vec);\r\n\r\n\r\n        const light = this.game.level.lights[0];\r\n        this.glt.sendUniform('o_u_lightDirection', light.direction.vec);\r\n        this.glt.sendUniform('o_u_innerLimit', Math.cos(Util.degToRad(light.limit[0])));\r\n        this.glt.sendUniform('o_u_outerLimit', Math.cos(Util.degToRad(light.limit[1])));\r\n        this.glt.sendUniform('o_u_innerRange', light.range[0]);\r\n        this.glt.sendUniform('o_u_outerRange', light.range[1]);\r\n        this.glt.sendUniform('o_u_lightColor', light.color.slice(0, 3));\r\n        this.glt.sendUniform('o_u_specularColor', light.specular.slice(0, 3));\r\n        this.glt.sendUniform('o_u_lightWorldPosition', light.globalPosition.multiply(1,1,-1).vec);\r\n\r\n\r\n        this.drawChildren(this.game.level);\r\n    }\r\n\r\n    drawChildren(element: GlElement) {\r\n        element.children.forEach((o) => {\r\n            this.drawObject(o);\r\n        });\r\n    }\r\n\r\n    drawObject(mesh: GlElement) {\r\n        if (mesh.visible) {\r\n            if ((mesh as GLRendable).buffer) {\r\n                this.renderMesh(mesh as GLRendable, mesh.globalMatrix);\r\n            }\r\n            this.drawChildren(mesh);\r\n        }\r\n\r\n    }\r\n\r\n    renderMesh(mesh: GLRendable, currentModelview: Matrix4) {\r\n        this.glt.sendBuffer(mesh.buffer.indices, 'element');\r\n        this.glt.sendAttribute('aVertexNormal', mesh.buffer.normalBuffer);\r\n\r\n        this.glt.sendUniform('uModelViewMatrix', currentModelview.mat4);\r\n        // this.glt.sendUniform('uOpacity', mesh.opacity);\r\n        this.glt.sendUniform('uNormalMatrix', currentModelview.invert().transpose().mat4);\r\n        this.glt.sendAttribute('aTextureCoord', mesh.buffer.textureCoord);\r\n        this.glt.sendTexture(mesh.texture.texture);\r\n\r\n        const projectionMatrix = this.getProjection();\r\n\r\n        const cameraMatrix = m4();\r\n        const viewMatrix = cameraMatrix.invert();\r\n        const viewProjectionMatrix = projectionMatrix.multiply(viewMatrix);\r\n\r\n        const worldViewProjectionMatrix = viewProjectionMatrix.multiply(currentModelview);\r\n        const worldInverseMatrix = currentModelview.invert();\r\n        const worldInverseTransposeMatrix = worldInverseMatrix.transpose();\r\n\r\n        this.glt.sendUniform('o_u_worldViewProjection', worldViewProjectionMatrix.mat4);\r\n        this.glt.sendUniform('o_u_worldInverseTranspose', worldInverseTransposeMatrix.mat4);\r\n        this.glt.sendUniform('o_u_shininess', 600);\r\n        this.glt.sendUniform('o_u_ignoreLighting', Number(mesh.ignoreLighting));\r\n\r\n\r\n        this.glt.sendAttribute('o_a_position', mesh.buffer.positionBuffer);\r\n        this.glt.sendUniform('o_u_world', currentModelview.mat4);\r\n\r\n\r\n        this.glt.drawElements(mesh.verticesCount);\r\n    }\r\n}\r\n", "export type TickerReturnData = { interval: number, intervalS3: number, intervalS10: number, intervalS20: number, total: number, frameRate: number, frame: number; };\r\nexport type TickerCallback = (obj: TickerReturnData) => void;\r\nexport class Ticker {\r\n    private _running: boolean = false;\r\n    private started: boolean = false;\r\n    private pauzedTime: number = 0;\r\n    private intervalKeeper:number[] = []\r\n    private id: number;\r\n    public get running(): boolean {\r\n        return this._running;\r\n    }\r\n    public set running(value: boolean) {\r\n        this._running = value;\r\n        \r\n        if (value) {\r\n            this.pTime = performance.now() - this.pauzedTime;\r\n            this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n        } else {\r\n            window.cancelAnimationFrame(this.id);\r\n            this.pauzedTime = performance.now() - this.pTime\r\n            \r\n        }\r\n    }\r\n    constructor() {\r\n        document.addEventListener(\"visibilitychange\", () => {\r\n            if (this.started) {\r\n                this.running = !document.hidden;\r\n            }\r\n        });\r\n    }\r\n    private callbacks: TickerCallback[] = [];\r\n    private sTime: number;\r\n    public get startTime() {\r\n        return this.sTime;\r\n    }\r\n    private eTime: number;\r\n    // public get elapsed() {\r\n    //     return this.eTime;\r\n    // }\r\n    private pTime: number;\r\n    private frameN: number = 0;\r\n\r\n    private averagedInterval(count: number, interval: number){\r\n        const average = this.intervalKeeper.slice(0,count).reduce((partialSum, a) => partialSum + a, 0) / count;\r\n        return Math.abs(interval - average) > 10?interval: average;\r\n    }\r\n\r\n    private frame(timeStamp: number) {\r\n\r\n        if (this.running) {\r\n            const interval = timeStamp - this.pTime;\r\n            this.intervalKeeper.push(interval);\r\n            this.intervalKeeper = this.intervalKeeper.slice(0,20);\r\n            while(this.intervalKeeper.length<20){\r\n                this.intervalKeeper.push(this.intervalKeeper[0]);\r\n            }\r\n\r\n            this.pTime = timeStamp;\r\n            this.frameN++;\r\n\r\n            const o = {\r\n                interval,\r\n                total: this.eTime,\r\n                frameRate: 1000 / interval,\r\n                frame: this.frameN,\r\n                intervalS3: this.averagedInterval(3, interval),\r\n                intervalS10: this.averagedInterval(5, interval),\r\n                intervalS20: this.averagedInterval(20, interval),\r\n            };\r\n\r\n            this.callbacks.forEach((c) => {\r\n                c(o);\r\n            });\r\n\r\n            this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        this.started = true;\r\n        this._running = true;\r\n        this.sTime = performance.now();\r\n        this.pTime = performance.now();\r\n        this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n    }\r\n\r\n    public add(callback: TickerCallback) {\r\n        this.callbacks.push(callback);\r\n    }\r\n}\r\n", "import { Element, ElementAttributes } from \"./element\";\r\nimport { GlElementType } from './rendering/glRenderer';\r\nimport { TickerReturnData } from './ticker';\r\nimport { Vector2, v2 } from \"./math/vector2\";\r\nimport { Vector3, v3 } from './math/vector3';\r\nimport { GlController } from './controller';\r\nimport { Matrix4 } from './math/matrix4';\r\nimport { Zone } from './zone';\r\n\r\nexport type GlElementAttributes = ElementAttributes & {\r\n    autoReady?: boolean,\r\n    controllers?: GlController[];\r\n    composite?: GlobalCompositeOperation;\r\n    size?: Vector3;\r\n    position?: Vector3;\r\n    rotation?: Vector3;\r\n    anchorPoint?: Vector3;\r\n};\r\nexport interface GlElement {\r\n    mouseMove?(e: MouseEvent): void;\r\n    keyDown?(e: KeyboardEvent): void;\r\n    keyUp?(e: KeyboardEvent): void;\r\n    click?(e: MouseEvent): void;\r\n    scroll?(e: WheelEvent): void;\r\n    drag?(d: Vector2): void;\r\n}\r\nexport abstract class GlElement extends Element {\r\n    public abstract type: GlElementType;\r\n    public rendererType = 'gl' as const;\r\n    public autoReady: boolean;\r\n    public anchorPoint: Vector3;\r\n    public parent: GlElement;\r\n    private transformMatrix: Matrix4;\r\n    public zones: Zone[] = [];\r\n    private _position: Vector3 = v3(0);\r\n    public get position(): Vector3 {\r\n        return this._position;\r\n    }\r\n    public set position(value: Vector3) {\r\n        this._position = value;\r\n    }\r\n\r\n    private _size: Vector3 = v3(0);\r\n    public get size(): Vector3 {\r\n        return this._size;\r\n    }\r\n    public set size(value: Vector3) {\r\n        this._size = value;\r\n    }\r\n    private _rotation: Vector3 = v3(0);\r\n    public get rotation(): Vector3 {\r\n        return this._rotation;\r\n    }\r\n    public set rotation(value: Vector3) {\r\n        this._rotation = value;\r\n    }\r\n\r\n    public get localMatrix() {\r\n        return new Matrix4()\r\n            .translate((this.position || v3(0)).multiply(new Vector3(1, 1, -1)))\r\n            .translate((this.anchorPoint || v3(0)).multiply(1, 1, -1))\r\n            .rotate((this.rotation || v3(0)).multiply(new Vector3(1, -1, -1)))\r\n            .translate((this.anchorPoint || v3(0)).multiply(-1, -1, 1));\r\n    }\r\n\r\n    public get globalMatrix(): Matrix4 {\r\n        return (this.parent?.globalMatrix || new Matrix4()).multiply(this.localMatrix);\r\n    }\r\n\r\n    public get globalPosition(): Vector3 {\r\n        return this.globalMatrix.position.multiply(v3(1, 1, -1));\r\n    }\r\n\r\n    public get worldRotation(): Vector3 {\r\n        return (this.parent?.worldRotation || v3()).add(this.rotation);\r\n    }\r\n\r\n    public get screenPosition(): Vector2 {\r\n        return v2(0);\r\n    }\r\n\r\n    private _active: boolean = true;\r\n    private _visible: boolean = true;\r\n    public get visible(): boolean {\r\n        return this._visible;\r\n    }\r\n    public set visible(value: boolean) {\r\n        this._visible = value;\r\n    }\r\n    public readyState: boolean = false;\r\n    public get active(): boolean {\r\n        return this._active;\r\n    }\r\n    public set active(value: boolean) {\r\n        this._active = value;\r\n    }\r\n\r\n    public children: GlElement[] = [];\r\n    public controllers: GlController[] = [];\r\n    public anchoredPosition: Vector2 = Vector2.zero;\r\n\r\n    public get camera(): typeof this.mode.camera {\r\n        return this.mode.camera;\r\n    }\r\n    public set camera(c: typeof this.mode.camera) {\r\n        this.mode.camera = c;\r\n    }\r\n\r\n    public get axis(): (v: string) => Vector2 {\r\n        return this.level.inputMap.axis.bind(this.level.inputMap);\r\n    }\r\n\r\n    public get button(): (v: string) => number {\r\n        return this.level.inputMap.button.bind(this.level.inputMap);\r\n    }\r\n\r\n    constructor(attr: GlElementAttributes = {}) {\r\n        super();\r\n        this.autoReady = attr.autoReady !== undefined ? attr.autoReady : true;\r\n        this.addControllers(attr.controllers || []);\r\n\r\n        this.size = attr.size || this.parent?.size || v3(0);\r\n        this.position = attr.position || v3(0);\r\n        this.rotation = attr.rotation || v3(0);\r\n        this.anchorPoint = attr.anchorPoint || v3(0);\r\n    }\r\n\r\n\r\n    public ready() {\r\n        this.build();\r\n        // glob.game.waitCount--;\r\n    }\r\n\r\n    public addChild(child: GlElement): typeof child {\r\n        child.parent ??= this;\r\n        // glob.game.waitCount++;\r\n        this.children.push(child);\r\n        if (child.autoReady) {\r\n            child.ready();\r\n        }\r\n        GlElement.registerControllers(child);\r\n        child.readyState = true;\r\n        return child;\r\n    }\r\n\r\n    public removeChild(child: GlElement) {\r\n        if (this.children.includes(child)) {\r\n            this.children.splice(this.children.indexOf(child), 1);\r\n        }\r\n    }\r\n\r\n    public addControllers(c: GlController[]) {\r\n        if (c.length > 0) {\r\n            this.controllers.push(...c);\r\n        }\r\n    }\r\n\r\n    public static registerControllers(child: GlElement) {\r\n        child.controllers.forEach((controller) => {\r\n            if (controller.parent === undefined) {\r\n                controller.parent ??= child;\r\n                controller.build();\r\n\r\n                if (controller.type === 'collider' && controller.level) {\r\n                    child.level.addZone(controller as Zone);\r\n                    child.zones.push(controller as Zone);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n\r\n        this.controllers.filter((child) => child.active && child.order === 'before').forEach((c) => c.tick(obj));\r\n        this.children.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        this.children.filter((child) => child.active).forEach((c) => c.afterTick(obj));\r\n    }\r\n\r\n    public afterTick(obj: TickerReturnData) {\r\n        this.controllers.filter((child) => child.active && child.order === 'after').forEach((c) => c.tick(obj));\r\n    }\r\n}", "import { Skeleton } from './animation/skeleton';\r\nimport { GlElement } from './elementBase';\r\nimport { GlElementType } from './rendering/glRenderer';\r\n\r\nexport class GLGroup extends GlElement {\r\n    public type: GlElementType = 'group';\r\n    public skeleton: Skeleton;\r\n    public get ani(){\r\n        return this.skeleton.animator\r\n    }\r\n}", "import { GLobj } from './objects/obj';\r\n\r\nexport class ObjStorage{\r\n    private registered: Record<string, {\r\n        ready: boolean,\r\n        origin: GLobj,\r\n        using: GLobj[]\r\n    }> = {}\r\n    \r\n    public check(url: string) {\r\n        const item = Object.entries(this.registered).find(([u])=>u===url);\r\n        return item?item[1]:false;\r\n    }\r\n    public register(url: string, user: GLobj) {\r\n        const o = this.check(url);\r\n        if (o){\r\n            o.using.push(user)\r\n            if (o.ready){\r\n                this.callBack(user, o.origin);\r\n            }\r\n            return false\r\n        } else {\r\n            this.registered[url] = {\r\n                ready: false,\r\n                origin: user,\r\n                using: [],\r\n            }\r\n            return true\r\n        }\r\n    }\r\n    public callBack(user: GLobj, origin: GLobj) {\r\n        user.giveData(origin.getData());\r\n        if (user.readyState){\r\n            user.build();\r\n        } else {\r\n            user.autoReady = true;\r\n        }\r\n    }\r\n    public loaded(url: string) {\r\n        const o = this.check(url);\r\n        if(o && !o.ready){\r\n            o.ready = true;\r\n            o.using.forEach((user:GLobj)=>this.callBack(user, o.origin));\r\n        }\r\n    }\r\n}", "import { GlElementAttributes } from './elementBase';\r\nimport { GLGroup } from './group';\r\nimport { ObjStorage } from './objStorage';\r\nimport { Level } from './level';\r\nimport { TickerReturnData } from './ticker';\r\nimport { Vector2 } from './math/vector2';\r\n\r\nexport type modeAttributes = GlElementAttributes & {\r\n\r\n};\r\nexport abstract class Mode extends GLGroup {\r\n    public levels: Record<string, Level> = {};\r\n    public storage: ObjStorage;\r\n    public lastTouch: Vector2;\r\n\r\n    public get camera(): typeof this.level.camera {\r\n        return this.level.camera;\r\n    }\r\n    public set camera(value: typeof this.level.camera) {\r\n        this.level.camera = value;\r\n    }\r\n\r\n    constructor(attr: modeAttributes = {}) {\r\n        super(attr);\r\n    }\r\n\r\n    public build(): void {\r\n        this.game.active.mode = this;\r\n        this.storage = new ObjStorage();\r\n        this.switchLevel(Object.keys(this.levels)[0]);\r\n    }\r\n\r\n    protected addLevel(s: string, level: Level) {\r\n        this.levels[s] = level;\r\n        this.addChild(level);\r\n        document.body.appendChild(level.interface.dom)\r\n    }\r\n\r\n    public switchLevel(s: string) {\r\n        Object.entries(this.levels).forEach(([key, level]) => {\r\n            level.active = key === s;\r\n        });\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        this.controllers.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        this.children.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n    }\r\n}\r\n", "import { GlElement } from './elementBase';\r\nimport { Character } from './character';\r\nimport { GlElementType } from './rendering/glRenderer';\r\nexport type GlControllerOrder = 'before'|'after';\r\nexport class GlController extends GlElement {\r\n    public type: GlElementType = 'controller';\r\n    public order: GlControllerOrder = 'before';\r\n    public target: Character;\r\n}", "import { GlElementAttributes } from './elementBase';\r\nimport { GlElementType } from './rendering/glRenderer';\r\nimport { GlController } from './controller';\r\nimport { Vector3, v3 } from './math/vector3';\r\n\r\n\r\nexport type ZoneAttributes = GlElementAttributes & {\r\n    fixed?: boolean;\r\n    absoluteOffset?: Vector3\r\n};\r\n\r\nexport type ZoneType = 'collider' | 'trigger' | 'interact';\r\nexport abstract class Zone extends GlController {\r\n    public type: GlElementType = 'collider';\r\n    public fixed: boolean;\r\n    public abstract zoneType: ZoneType;\r\n    public overlaps: Zone[] = [];\r\n    public absoluteOffset: Vector3;\r\n\r\n    public constructor(attr: ZoneAttributes) {\r\n        super(attr);\r\n        this.fixed = Boolean(attr.fixed);\r\n        this.absoluteOffset = attr.absoluteOffset || v3();\r\n    }\r\n\r\n    get globalPosition(){\r\n        return super.globalPosition.add(this.absoluteOffset);\r\n    }\r\n\r\n    public calculateOverlaps() {\r\n        this.overlaps = this.level.levelZones.filter(this.overlap.bind(this)) || [];\r\n    }\r\n\r\n    public overlap(othr: Zone): boolean {\r\n        //myself\r\n        if (this === othr) return false;\r\n        \r\n        //fixed objects dont react\r\n        if (this.fixed) return false;\r\n\r\n        //do these NOT overlap?\r\n        if (this.globalPosition.x + this.size.x < othr.globalPosition.x) return false; // to the x- of other\r\n        if (this.globalPosition.x > othr.globalPosition.x + othr.size.x) return false; // to the x+ of other\r\n        if (this.globalPosition.y + this.size.y < othr.globalPosition.y) return false; // to the y- of other\r\n        if (this.globalPosition.y > othr.globalPosition.y + othr.size.y) return false; // to the y+ of other\r\n        if (this.globalPosition.z + this.size.z < othr.globalPosition.z) return false; // to the z- of other\r\n        if (this.globalPosition.z > othr.globalPosition.z + othr.size.z) return false; // to the z+ of other\r\n\r\n        return true;\r\n    }\r\n}", "import { Util } from './util/utils';\r\nimport { Vector3, v3 } from './math/vector3';\r\nimport { Zone, ZoneType } from './zone';\r\n\r\n\r\nexport class Collider extends Zone {\r\n    public zoneType: ZoneType = 'collider';\r\n    \r\n    calculateCollision(): Vector3[] {\r\n        this.calculateOverlaps();\r\n        return this.overlaps.filter((o)=>o.zoneType === 'collider').map(this.calculateExitVelocity.bind(this)) || [];\r\n    }\r\n\r\n    public calculateExitVelocity(othr: Zone): Vector3 {\r\n        return Util.closestVectorMagniture([\r\n            v3(-(this.globalPosition.x + this.size.x - othr.globalPosition.x), 0, 0),// to the x- of other\r\n            v3((othr.globalPosition.x + othr.size.x) - this.globalPosition.x, 0, 0),// to the x+ of other\r\n\r\n            v3(0, -(this.globalPosition.y + this.size.y - othr.globalPosition.y), 0),// to the y- of other\r\n            v3(0, (othr.globalPosition.y + othr.size.y) - this.globalPosition.y, 0),// to the y+ of other\r\n\r\n            v3(0, 0, -(this.globalPosition.z + this.size.z - othr.globalPosition.z)),// to the z- of other\r\n            v3(0, 0, (othr.globalPosition.z + othr.size.z) - this.globalPosition.z),// to the z+ of other\r\n\r\n        ], 0);\r\n    }\r\n}", "import { Vector2, v2 } from '../math/vector2';\r\n\r\n\r\nexport abstract class InputReader<T extends number | Vector2> {\r\n    tick(): void {\r\n        //void\r\n    }\r\n    abstract get value(): T;\r\n}\r\n\r\n// export class TouchReader<T extends number|Vector2> extends InputReader<T>{\r\n//     get value(): T {\r\n//         throw new Error('Method not implemented.');\r\n//     }\r\n\r\n// }\r\n\r\n// export class ControllerReader<T extends number|Vector2> extends InputReader<T>{\r\n//     get value(): T {\r\n//         throw new Error('Method not implemented.');\r\n//     }\r\n\r\n// }\r\n\r\nexport abstract class Input<T extends number | Vector2> {\r\n    constructor(protected readers: InputReader<T>[]) {\r\n\r\n    }\r\n    protected abstract _value: T;\r\n    abstract get value(): T;\r\n    public tick() {\r\n        this.readers.forEach((r) => {\r\n            r.tick();\r\n        });\r\n    }\r\n}\r\n\r\nexport class JoyStick extends Input<Vector2> {\r\n    protected _value: Vector2;\r\n    get value(): Vector2 {\r\n        let total = v2(0);\r\n        this.readers.forEach((r) => {\r\n            total = total.add(r.value);\r\n        });\r\n        return total;\r\n    }\r\n}\r\nexport class Button extends Input<number> {\r\n    protected _value: number;\r\n    get value(): number {\r\n        let total = 0;\r\n        this.readers.forEach((r) => {\r\n            total += r.value;\r\n        });\r\n        return total;\r\n    }\r\n}\r\n\r\nexport class InputMap {\r\n    joysticks: Record<string, JoyStick> = {};\r\n    buttons: Record<string, Button> = {};\r\n    constructor(\r\n        joysticks: Record<string, InputReader<Vector2>[]> = {},\r\n        buttons: Record<string, InputReader<number>[]> = {}\r\n    ) {\r\n        Object.entries(joysticks).forEach(([key, readers]) => {\r\n            this.joysticks[key] = new JoyStick(readers);\r\n        });\r\n        Object.entries(buttons).forEach(([key, readers]) => {\r\n            this.buttons[key] = new Button(readers);\r\n        });\r\n    }\r\n\r\n    public tick() {\r\n        Object.values(this.joysticks).forEach((j) => {\r\n            j.tick();\r\n        });\r\n        Object.values(this.buttons).forEach((j) => {\r\n            j.tick();\r\n        });\r\n    }\r\n\r\n    public axis(key: string) {\r\n        return this.joysticks[key].value;\r\n    }\r\n\r\n    public button(key: string) {\r\n        return this.buttons[key].value;\r\n    }\r\n}", "import { glob } from '../../game';\r\nimport { Vector2, v2 } from '../math/vector2';\r\nimport { InputReader } from './input';\r\n\r\n\r\nexport class MouseMoveReader extends InputReader<Vector2> {\r\n    constructor() {\r\n        super();\r\n        if (!glob.mobile) {\r\n            glob.renderer.dom.addEventListener('mousemove', (e) => {\r\n                this._delta.x += e.movementX;\r\n                this._delta.y += e.movementY;\r\n            });\r\n        }\r\n    }\r\n    private _delta: Vector2 = v2(0);\r\n    get value(): Vector2 {\r\n        return this._delta;\r\n    }\r\n    public tick(): void {\r\n        this._delta = v2(0);\r\n    }\r\n}\r\n\r\nexport class MouseScrollReader extends InputReader<number> {\r\n    constructor() {\r\n        super();\r\n        if (!glob.mobile) {\r\n            glob.renderer.dom.addEventListener('wheel', (e) => {\r\n                this._delta += e.deltaY;\r\n            });\r\n        }\r\n    }\r\n    private _delta: number = 0;\r\n    get value(): number {\r\n        return this._delta;\r\n    }\r\n    tick(): void {\r\n        this._delta = 0;\r\n    }\r\n}\r\n", "import { glob } from '../../game';\r\nimport { Vector2, v2 } from '../math/vector2';\r\nimport { InputReader } from './input';\r\n\r\nexport class KeyboardReader extends InputReader<number> {\r\n    key: string;\r\n    constructor(key: string) {\r\n        super();\r\n        glob.device.keyboard.register(\r\n            key,\r\n            () => { this._state = true; },\r\n            () => { this._state = false; }\r\n        );\r\n    }\r\n    private _state: boolean = false;\r\n    get value(): number {\r\n        return Number(this._state);\r\n    }\r\n}\r\n\r\nexport class KeyboardJoyStickReader extends InputReader<Vector2> {\r\n    constructor(keys: [string, string, string, string]) {\r\n        super();\r\n        keys.forEach((k, i) => {\r\n            glob.device.keyboard.register(\r\n                k,\r\n                () => { this._state[Math.floor(i / 2)][i % 2] = true; this.setVector(); },\r\n                () => { this._state[Math.floor(i / 2)][i % 2] = false; this.setVector(); }\r\n            );\r\n        });\r\n    }\r\n\r\n    private setVector() {\r\n        this._vector = v2(\r\n            -this._state[0][0] + +this._state[0][1],\r\n            -this._state[1][0] + +this._state[1][1]\r\n        );\r\n    }\r\n\r\n    private _state: [[boolean, boolean], [boolean, boolean]] = [[false, false], [false, false]];\r\n    private _vector: Vector2 = v2(0);\r\n    get value(): Vector2 {\r\n        return this._vector;\r\n    }\r\n}\r\n", "import { DomElement, DomElementAttributes } from \"./domElement\";\r\n\r\nexport type  UIAttributes = DomElementAttributes & {\r\n   \r\n}\r\nexport class UI extends DomElement<'div'> {\r\n    public constructor(attr: UIAttributes = {}) {\r\n        super('div', attr);\r\n        this.dom.style.width = '100%';\r\n        this.dom.style.height = '100%';\r\n        this.dom.style.zIndex = '3';\r\n        this.dom.style.pointerEvents = 'none';\r\n    }\r\n}", "import { glob } from '../game';\r\nimport { DomElement } from './dom/domElement';\r\nimport { UI } from './dom/interface';\r\nimport { GlElementAttributes, GlElement } from './elementBase';\r\nimport { InputMap } from './input/input';\r\nimport { Light } from './light';\r\nimport { Vector2 } from './math/vector2';\r\nimport { Vector3 } from './math/vector3';\r\nimport { GLCuboid } from './objects/cuboid';\r\nimport { GlElementType } from './rendering/glRenderer';\r\nimport { TickerReturnData } from './ticker';\r\nimport { Color } from './util/colors';\r\nimport { Zone } from './zone';\r\n\r\n\r\nexport type levelAttributes = GlElementAttributes & {\r\n    size3?: Vector3;\r\n};\r\nexport abstract class Level extends GlElement {\r\n    abstract start: Vector2;\r\n    abstract background: Color;\r\n    public type: GlElementType = 'group';\r\n    public levelZones: Zone[] = [];\r\n    public lights: Light[] = [];\r\n    private colliderMeshes: GLCuboid[] = [];\r\n    public interface: UI = new UI();\r\n    public abstract inputMap: InputMap; \r\n\r\n    private _camera: {\r\n        target: Vector3;\r\n        rotation: Vector3;\r\n        offset: Vector3;\r\n        fov: number;\r\n    } = {\r\n            target: Vector3.f(0),\r\n            rotation: Vector3.f(0),\r\n            offset: Vector3.f(0),\r\n            fov: 60,\r\n        };\r\n\r\n    addUi(element: DomElement<any>) {\r\n        this.interface.appendChild(element)\r\n    }\r\n\r\n    addZone(c: Zone) {\r\n        this.levelZones.push(c);\r\n\r\n        // const mesh = new GLCuboid({\r\n        //     size: c.size,\r\n        //     colors: [Colors.r],\r\n        //     opacity: 0.3,\r\n        //     anchorPoint: c.anchorPoint\r\n        // });\r\n        // this.colliderMeshes.push(mesh);\r\n        // this.addChild(mesh);\r\n    }\r\n\r\n    addLight(c: Light) {\r\n        this.lights.push(c);\r\n        this.addChild(c);\r\n    }\r\n\r\n    public get camera(): typeof this._camera {\r\n        return this._camera;\r\n    }\r\n    public set camera(value: typeof this._camera) {\r\n        this._camera = value;\r\n    }\r\n\r\n    constructor(attr: levelAttributes = {}) {\r\n        super(attr);\r\n        this.size = this.size;\r\n    }\r\n\r\n    public build(): void {\r\n        glob.game.active.level = this;\r\n        this.interface.build();\r\n    }\r\n\r\n    public tick(obj: TickerReturnData): void {\r\n        super.tick(obj);\r\n\r\n        this.colliderMeshes.forEach((c, i) => {\r\n            c.position = this.levelZones[i].globalPosition;\r\n            c.size = this.levelZones[i].size.clone();\r\n        });\r\n\r\n    }\r\n\r\n    public afterTick(obj: TickerReturnData): void {\r\n        super.afterTick(obj);\r\n        this.inputMap.tick();\r\n    }\r\n\r\n}\r\n", "export type Color = [number, number, number, number];\r\nexport class Colors {\r\n    public static k:Color = [0.0, 0.0, 0.0, 1.0];\r\n    public static r:Color = [1.0, 0.0, 0.0, 1.0];\r\n    public static g:Color = [0.0, 1.0, 0.0, 1.0];\r\n    public static b:Color = [0.0, 0.0, 1.0, 1.0];\r\n    public static y:Color = [1.0, 1.0, 0.0, 1.0];\r\n    public static c:Color = [0.0, 1.0, 1.0, 1.0];\r\n    public static m:Color = [1.0, 0.0, 1.0, 1.0];\r\n    public static w:Color = [1.0, 1.0, 1.0, 1.0];\r\n}\r\nexport class rgba{\r\n    constructor(public color: Color) {}\r\n    get r(){\r\n        return this.color[0];\r\n    }\r\n    get g(){\r\n        return this.color[1];\r\n    }\r\n    get b(){\r\n        return this.color[2];\r\n    }\r\n    get a(){\r\n        return this.color[3];\r\n    }\r\n    get rgb(){\r\n        return [this.color[1], this.color[2], this.color[3]];\r\n    }\r\n}", "import { buffers } from './rendering/glRenderer';\r\nimport { Vector3 } from './math/vector3';\r\nimport { GlElement, GlElementAttributes } from './elementBase';\r\nimport { GLTexture } from './texture';\r\n\r\nexport type GLRendableAttributes = GlElementAttributes & {\r\n    opacity?: number;\r\n    colorIntensity?: number;\r\n    ignoreLighting?: boolean;\r\n};\r\n\r\nexport abstract class GLRendable extends GlElement {\r\n    public buffer: buffers;\r\n    public colorIntensity: number = 1;\r\n    public opacity: number = 1;\r\n    public colors: [number, number, number, number][] = [];\r\n    public ignoreLighting: boolean;\r\n    public abstract verticesCount: number;\r\n    public abstract texture: GLTexture;\r\n\r\n    constructor(attr: GLRendableAttributes = {}) {\r\n        super(attr);\r\n        this.opacity = attr.opacity !== undefined ? attr.opacity : 1;\r\n        this.colorIntensity = attr.colorIntensity !== undefined ? attr.colorIntensity : 1;\r\n        this.ignoreLighting = attr.ignoreLighting !== undefined ? attr.ignoreLighting : false;\r\n    }\r\n\r\n    public build() {\r\n        this.buffer = {\r\n            positionBuffer: this.GLT.createBuffer(this.positionBuffer(this.size)),\r\n            indices: this.GLT.createBuffer(this.indexBuffer(), 'element', Uint32Array),\r\n            textureCoord: this.GLT.createBuffer(this.textureBuffer(this.size)),\r\n            normalBuffer: this.GLT.createBuffer(this.normalBuffer()),\r\n        };\r\n        this.GLR.initGlElement(this);\r\n    };\r\n\r\n    public ready() {\r\n        this.build();\r\n        // if (this.game.waitCount) {\r\n        //     this.game.waitCount--;\r\n        // }\r\n    }\r\n\r\n    protected abstract indexBuffer(): number[];\r\n    protected abstract positionBuffer(size: Vector3): number[];\r\n    protected abstract textureBuffer(size: Vector3): number[];\r\n    protected abstract normalBuffer(): number[];\r\n}\r\n\r\n\r\n", "import { Game } from '../game';\r\nimport { Color } from './util/colors';\r\n\r\nexport type GLTextureAttributes = {\r\n    url?: string;\r\n    image?: HTMLImageElement | HTMLCanvasElement;\r\n    color?: Color[];\r\n};\r\n\r\nexport class GLTexture {\r\n    static textureOffset(index: number, total: number): number[] {\r\n        const inc = 1 / total;\r\n        return [\r\n            index * inc + (inc / 3), 0,\r\n            index * inc + (inc / 3), 1,\r\n            (index + 1) * inc - (inc / 3), 0\r\n        ];\r\n\r\n    }\r\n    public texture: WebGLTexture;\r\n    private image: HTMLImageElement;\r\n    constructor(public game: Game, attr: GLTextureAttributes) {\r\n        if (attr.image) {\r\n            this.loadTexture(attr.image);\r\n        } else if (attr.url) {\r\n            this.game.waitCount++;\r\n            this.image = new Image();\r\n            this.image.onload = () => {\r\n                this.game.waitCount--;\r\n                this.loadTexture(this.image);\r\n            };\r\n            this.image.src = `${window.location.href}/${attr.url}`;\r\n        } else {\r\n            this.loadColor(attr.color || [[0.8, 0.8, 0.7, 1]]);\r\n        }\r\n    }\r\n    loadColor(colors: Color[]) {\r\n\r\n        const ss = document.createElement('canvas');\r\n        ss.width = colors.length;\r\n        ss.height = 1;\r\n        const ssCTX = ss.getContext('2d');\r\n\r\n        for (let x = 0; x < colors.length; x++) {\r\n            const color = colors[x];\r\n            ssCTX.fillStyle = `rgba(${color[0] * 255}, ${color[1] * 255}, ${color[2] * 255}, ${color[3]})`;\r\n            ssCTX.fillRect(\r\n                x,\r\n                0,\r\n                1,\r\n                1\r\n            );\r\n        }\r\n        this.loadTexture(ss);\r\n\r\n    }\r\n    loadTexture(img: HTMLImageElement | HTMLCanvasElement) {\r\n        const gl = this.game.gl;\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            gl.RGBA,\r\n            gl.RGBA,\r\n            gl.UNSIGNED_BYTE,\r\n            img\r\n        );\r\n        gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n        if (this.isPowerOf2(img.width) && this.isPowerOf2(img.height)) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n        } else {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        }\r\n\r\n        this.texture = texture;\r\n    }\r\n\r\n    isPowerOf2(value: number) {\r\n        return (value & (value - 1)) === 0;\r\n    }\r\n}", "import { GlElementType } from '../rendering/glRenderer';\r\nimport { Color, Colors } from '../util/colors';\r\nimport { Vector3 } from '../math/vector3';\r\nimport { GLRendable, GLRendableAttributes } from '../rendable';\r\nimport { GLTexture } from '../texture';\r\n\r\nexport type GlCuboidAttributes = GLRendableAttributes & {\r\n    colors?: [Color, Color?, Color?, Color?, Color?, Color?],\r\n    textureUrl?: string,\r\n    size: Vector3;\r\n};\r\n\r\nexport type bufferData = {\r\n    index: number[],\r\n    position: number[],\r\n    normal: number[],\r\n    texture: number[],\r\n};\r\n\r\nexport class GLCuboid extends GLRendable {\r\n    public texture: GLTexture;\r\n    public type: GlElementType = 'mesh';\r\n    public colors: [number, number, number, number][] = [];\r\n    public verticesCount = 36;\r\n    public dimensions = 0 | 1 | 2 | 3;\r\n    public textureUrl: string;\r\n    private faceCount: number;\r\n    public ignoreLighting: boolean;\r\n\r\n    public get size(): Vector3 {\r\n        return super.size;\r\n    }\r\n    public set size(value: Vector3) {\r\n        super.size = value;\r\n        if (this.parent){\r\n            this.buffer.positionBuffer = this.GLT.createBuffer(this.positionBuffer(this.size))\r\n        }\r\n    }\r\n\r\n    constructor(attr: GlCuboidAttributes) {\r\n        super(attr);\r\n        this.dimensions = attr.size.array.filter((v) => v !== 0).length;\r\n        if (this.dimensions < 2) {\r\n            return;\r\n        }\r\n        this.verticesCount = this.dimensions === 3 ? 36 : 6;\r\n        this.faceCount = this.dimensions === 3 ? 6 : 1;\r\n        this.textureUrl = attr.textureUrl;\r\n\r\n        if (attr.colors) this.colors = attr.colors;\r\n        else this.colors = [\r\n            Colors.r,\r\n            Colors.g,\r\n            Colors.b,\r\n            Colors.c,\r\n            Colors.m,\r\n            Colors.y\r\n        ].slice(0, this.faceCount);\r\n\r\n\r\n    }\r\n\r\n    public build(): void {\r\n        super.build();\r\n        this.texture = new GLTexture(this.game, this.textureUrl ? { url: this.textureUrl } : { color: this.colors });\r\n    }\r\n\r\n    protected indexBuffer() {\r\n        let b: number[] = this.getBufferData().index.slice(0, this.faceCount * 6);\r\n        return b;\r\n    }\r\n\r\n    protected positionBuffer(size: Vector3) {\r\n        return GLCuboid.scale(\r\n            GLCuboid.sliceToDimension(\r\n                this.getBufferData().position,\r\n                this.size,\r\n                72\r\n            ),\r\n            size\r\n        );\r\n    }\r\n\r\n    protected normalBuffer() {\r\n        return GLCuboid.sliceToDimension(\r\n            this.getBufferData().normal,\r\n            this.size,\r\n            72\r\n        );\r\n    }\r\n\r\n    protected textureBuffer() {\r\n        let b: number[] = [];\r\n        if (this.textureUrl) {\r\n            return GLCuboid.sliceToDimension(\r\n                this.getBufferData().texture,\r\n                this.size,\r\n                48\r\n            );\r\n        } else {\r\n            const inc = 1 / this.faceCount;\r\n\r\n            for (let index = 0; index < this.faceCount; index++) {\r\n                b.push(\r\n                    index * inc + (inc / 3), 0,\r\n                    index * inc + (inc / 3), 1,\r\n                    (index + 1) * inc - (inc / 3), 0,\r\n                    (index + 1) * inc - (inc / 3), 0\r\n                );\r\n            }\r\n        }\r\n\r\n        return b;\r\n    }\r\n\r\n\r\n    protected getIndexBufferData(): number[] {\r\n        return [\r\n            0, 1, 2,\r\n            0, 2, 3,\r\n            4, 5, 6,\r\n            4, 6, 7,\r\n            8, 9, 10,\r\n            8, 10, 11,\r\n            12, 13, 14,\r\n            12, 14, 15,\r\n            16, 17, 18,\r\n            16, 18, 19,\r\n            20, 21, 22,\r\n            20, 22, 23\r\n        ];\r\n    }\r\n    protected getPositionBufferData(): number[] {\r\n        return [\r\n            0.0, 0.0, -1.0,\r\n            1.0, 0.0, -1.0,\r\n\r\n            1.0, 1.0, -1.0,\r\n            0.0, 1.0, -1.0,\r\n\r\n            0.0, 0.0, -0.0,\r\n            0.0, 1.0, -0.0,\r\n\r\n            1.0, 1.0, -0.0,\r\n            1.0, 0.0, -0.0,\r\n\r\n            0.0, 1.0, -0.0,\r\n            0.0, 1.0, -1.0,\r\n\r\n            1.0, 1.0, -1.0,\r\n            1.0, 1.0, -0.0,\r\n\r\n            0.0, 0.0, -0.0,\r\n            1.0, 0.0, -0.0,\r\n\r\n            1.0, 0.0, -1.0,\r\n            0.0, 0.0, -1.0,\r\n\r\n            1.0, 0.0, -0.0,\r\n            1.0, 1.0, -0.0,\r\n\r\n            1.0, 1.0, -1.0,\r\n            1.0, 0.0, -1.0,\r\n\r\n            0.0, 0.0, -0.0,\r\n            0.0, 0.0, -1.0,\r\n\r\n            0.0, 1.0, -1.0,\r\n            0.0, 1.0, -0.0\r\n        ];\r\n    }\r\n    protected getNormalBufferData(): number[] {\r\n        return [\r\n            0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\r\n            0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n            0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n            0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\r\n            1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\r\n            -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\r\n        ];\r\n    }\r\n    protected getTextureBufferData(): number[] {\r\n        return [\r\n            0.0, 0.0, 1.0, 0.0,\r\n            1.0, 1.0, 0.0, 1.0,\r\n            0.0, 0.0, 1.0, 0.0,\r\n            1.0, 1.0, 0.0, 1.0,\r\n            0.0, 0.0, 1.0, 0.0,\r\n            1.0, 1.0, 0.0, 1.0,\r\n            0.0, 0.0, 1.0, 0.0,\r\n            1.0, 1.0, 0.0, 1.0,\r\n            0.0, 0.0, 1.0, 0.0,\r\n            1.0, 1.0, 0.0, 1.0,\r\n            0.0, 0.0, 1.0, 0.0,\r\n            1.0, 1.0, 0.0, 1.0,\r\n        ];\r\n    }\r\n    protected getBufferData(): bufferData {\r\n        return {\r\n            index: this.getIndexBufferData(),\r\n            position: this.getPositionBufferData(),\r\n            normal: this.getNormalBufferData(),\r\n            texture: this.getTextureBufferData(),\r\n        };\r\n    }\r\n\r\n    public static sliceToDimension(array: number[], size: Vector3, total: number): number[] {\r\n        const s = total / 6;\r\n        if (size.z === 0) array = array.slice(0, s * 1);\r\n        else if (size.x === 0) array = array.slice(s * 5, s * 6);\r\n        else if (size.y === 0) array = array.slice(s * 3, s * 4);\r\n        return array;\r\n    }\r\n\r\n    public static scale(array: number[], size?: Vector3): number[] {\r\n        return size ? array.map((n, i) => n * size.array[(i % 3)]) : array;\r\n    }\r\n\r\n}", "import { GlElementAttributes } from './elementBase';\r\nimport { Vector3, v3 } from './math/vector3';\r\nimport { Color, Colors } from './util/colors';\r\nimport { GLGroup } from './group';\r\nimport { GLCuboid } from './objects/cuboid';\r\n\r\n\r\nexport type LightAttributes = GlElementAttributes & {\r\n    range: [number,number];\r\n    limit: [number,number];\r\n    color?: Color,\r\n    specular?: Color,\r\n    direction?: Vector3\r\n};\r\n\r\nexport class Light extends GLGroup{\r\n    private _range: [number, number];\r\n    public get range(): [number, number] {\r\n        return this._range;\r\n    }\r\n    public set range(value: [number, number?]) {\r\n        this._range = [\r\n            value[0],\r\n            value[1]===undefined || value[1]<=value[0]?value[0]+1:value[1],\r\n        ]\r\n    }\r\n    private _limit: [number, number];\r\n    public get limit(): [number, number] {\r\n        return this._limit;\r\n    }\r\n    public set limit(value: [number, number]) {\r\n        this._limit = [\r\n            value[0],\r\n            value[1]===undefined || value[1]<=value[0]?value[0]+1:value[1],\r\n        ]\r\n    }\r\n    public specular: Color;\r\n    public direction: Vector3;\r\n    public color: Color;\r\n\r\n    public constructor(attr: LightAttributes) {\r\n        super(attr);\r\n        this.range = attr.range;\r\n        this.limit = attr.limit;\r\n        this.color = attr.color || Colors.w;\r\n        this.specular = attr.specular;\r\n        this.direction = attr.direction || Vector3.forwards;\r\n    }\r\n\r\n    public build(): void {\r\n        super.build();\r\n        this.addChild(new GLCuboid({\r\n            anchorPoint: v3(2.5,2.5,1),\r\n            position: v3(-2.5,-2.5,0),\r\n            colors: [this.color, Colors.k,Colors.k,Colors.k,Colors.k,Colors.k],\r\n            size: v3(5,5,1),\r\n            rotation: v3(this.direction.y,this.direction.z,this.direction.x).scale(Math.PI),\r\n            ignoreLighting: true,\r\n        }))\r\n    }\r\n}", "import { Color } from '../util/colors';\r\nimport { GlElementType } from '../rendering/glRenderer';\r\nimport { Vector3 } from '../math/vector3';\r\nimport { GlElementAttributes } from '../elementBase';\r\nimport { GLRendable } from '../rendable';\r\nimport { GLTexture } from '../texture';\r\nimport { glob } from '../../game';\r\n\r\nexport type matData = Record<string, string[]>;\r\n\r\nexport type GLobjAttributes = GlElementAttributes & {\r\n    url?: string;\r\n    opacity?: number;\r\n    colorIntensity?: number;\r\n};\r\nexport type textureCoords = [number, number];\r\nexport type vertexCoords = [number, number, number];\r\nexport type vertexData = [vertexCoords, number, vertexCoords, string];\r\nexport type faceData = [vertexData, vertexData, vertexData];\r\n\r\nexport type GLObjTransferData = {\r\n    verticesCount: number;\r\n    matIndeces: string[];\r\n    matsData: Record<string, matData>;\r\n    positionIndeces: number[];\r\n    indexIndeces: number[];\r\n    normalIndeces: number[];\r\n    texturePositionIndeces: number[];\r\n};\r\nexport class GLobj extends GLRendable {\r\n    public type: GlElementType = 'mesh';\r\n    public texture: GLTexture;\r\n    public verticesCount: number = 0;\r\n    private matIndeces: string[] = [];\r\n    private mats: Record<string, string[]> = {};\r\n    private matsData: Record<string, matData> = {};\r\n    private positionIndeces: number[] = [];\r\n    private indexIndeces: number[] = [];\r\n    private normalIndeces: number[] = [];\r\n    private textureIndeces: number[] = [];\r\n    private texturePositionIndeces: number[] = [];\r\n    path: string;\r\n\r\n    public getData(): GLObjTransferData {\r\n        return {\r\n            verticesCount: this.verticesCount,\r\n            matIndeces: this.matIndeces,\r\n            matsData: this.matsData,\r\n            positionIndeces: this.positionIndeces,\r\n            indexIndeces: this.indexIndeces,\r\n            normalIndeces: this.normalIndeces,\r\n            texturePositionIndeces: this.texturePositionIndeces\r\n        };\r\n    }\r\n\r\n    public giveData(data: GLObjTransferData) {\r\n        this.verticesCount = data.verticesCount;\r\n        this.matIndeces = data.matIndeces;\r\n        this.matsData = data.matsData;\r\n        this.positionIndeces = data.positionIndeces;\r\n        this.indexIndeces = data.indexIndeces;\r\n        this.normalIndeces = data.normalIndeces;\r\n        this.texturePositionIndeces = data.texturePositionIndeces;\r\n    }\r\n\r\n    constructor(attr: GLobjAttributes = {}) {\r\n        super({ ...attr, ...{ autoReady: false } });\r\n\r\n        this.opacity = attr.opacity !== undefined ? attr.opacity : 1;\r\n        this.colorIntensity = attr.colorIntensity !== undefined ? attr.colorIntensity : 1;\r\n\r\n        this.path = attr.url.split('/').slice(0, -1).join('/') + '/';\r\n\r\n        if (glob.storage.register(attr.url, this)) {\r\n            this.loadFile(`${window.location.href}/obj/${attr.url}`)\r\n                .then(this.parseMtl.bind(this))\r\n                .then(this.parseObj.bind(this))\r\n                .then(() => {\r\n                    this.ready();\r\n                    glob.storage.loaded(attr.url);\r\n                });\r\n        }\r\n    }\r\n\r\n    private async parseMtl(str: string) {\r\n        if (/mtllib/.test(str)) {\r\n            await this.loadFile(`${window.location.href}obj/${this.path}${str.split(/mtllib/)[1].split(/\\n/)[0].trim()}`)\r\n                .then((v) => {\r\n                    v.split('newmtl ').slice(1).forEach((s: string) => {\r\n                        const lines = s.split(/\\r\\n|\\r|\\n/).filter((n) => n);\r\n\r\n                        this.matsData[lines.shift()] = Object.fromEntries(lines.map((line) => {\r\n                            const a = line.split(' ');\r\n                            return [a.shift(), a];\r\n                        }));\r\n                    });\r\n                });\r\n\r\n            return str;\r\n\r\n        } else {\r\n            return str;\r\n        }\r\n    }\r\n\r\n    private parseFaces(lineArray: string[], mat: string, points: vertexCoords[], normals: vertexCoords[], tCoords: textureCoords[]) {\r\n        const textRemainder = lineArray.slice(1);\r\n        const numbRemainder = textRemainder.map(Number);\r\n\r\n        (({\r\n            usemtl: () => {\r\n                mat = textRemainder[0];\r\n            },\r\n            f: () => {\r\n                if (numbRemainder.length === 3) {\r\n\r\n                    this.positionIndeces.push(...points[numbRemainder[0] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[1] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[2] - 1]);\r\n\r\n                } else if (numbRemainder.length === 6) {\r\n\r\n                    this.positionIndeces.push(...points[numbRemainder[0] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[2] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[4] - 1]);\r\n\r\n                    this.texturePositionIndeces.push(...tCoords[numbRemainder[1] - 1]);\r\n                    this.texturePositionIndeces.push(...tCoords[numbRemainder[3] - 1]);\r\n                    this.texturePositionIndeces.push(...tCoords[numbRemainder[5] - 1]);\r\n\r\n                } else {\r\n                    this.positionIndeces.push(...points[numbRemainder[0] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[3] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[6] - 1]);\r\n\r\n                    this.texturePositionIndeces.push(...tCoords[numbRemainder[1] - 1]);\r\n                    this.texturePositionIndeces.push(...tCoords[numbRemainder[4] - 1]);\r\n                    this.texturePositionIndeces.push(...tCoords[numbRemainder[7] - 1]);\r\n\r\n                    this.normalIndeces.push(...normals[numbRemainder[2] - 1]);\r\n                    this.normalIndeces.push(...normals[numbRemainder[5] - 1]);\r\n                    this.normalIndeces.push(...normals[numbRemainder[8] - 1]);\r\n\r\n                    this.textureIndeces.push(\r\n                        ...GLTexture.textureOffset(Object.keys(this.mats).indexOf(mat), Object.keys(this.mats).length)\r\n                    );\r\n                }\r\n\r\n                this.indexIndeces.push(this.indexIndeces.length);\r\n                this.indexIndeces.push(this.indexIndeces.length);\r\n                this.indexIndeces.push(this.indexIndeces.length);\r\n                this.matIndeces.push(mat);\r\n                this.matIndeces.push(mat);\r\n                this.matIndeces.push(mat);\r\n            },\r\n        } as Record<string, () => void>)[lineArray[0]] || (() => { }))();\r\n\r\n        return mat;\r\n    }\r\n\r\n    private parseObj(str: string) {\r\n        let mat = 'none';\r\n        const lines = str.split(/\\r\\n|\\r|\\n/);\r\n        const nonVertex: string[][] = [];\r\n        const points: vertexCoords[] = [];\r\n        const normals: vertexCoords[] = [];\r\n        const tCoords: textureCoords[] = [];\r\n\r\n        lines.forEach(async (line) => {\r\n            const words = line.split(/(?: |\\/)/);\r\n            const command = words[0];\r\n            const numbers = words.slice(1).map(Number);\r\n\r\n            if (command === 'v') {\r\n                points.push([numbers[0], numbers[1], numbers[2]]);\r\n            } else if (command === 'vn') {\r\n                normals.push([numbers[0], numbers[1], numbers[2]]);\r\n            } else if (command === 'vt') {\r\n                tCoords.push([numbers[0], numbers[1]]);\r\n            } else {\r\n                nonVertex.push(words);\r\n            }\r\n\r\n        });\r\n\r\n        nonVertex.forEach((words) => {\r\n            mat = this.parseFaces(words, mat, points, normals, tCoords);\r\n        });\r\n\r\n        this.verticesCount = this.indexIndeces.length;\r\n    }\r\n\r\n    public async loadFile(url: string): Promise<any> {\r\n        const response = await fetch(url);\r\n        const data = await response.text();\r\n        return data;\r\n    }\r\n\r\n    protected indexBuffer() {\r\n        return this.indexIndeces;\r\n    }\r\n\r\n    protected positionBuffer(size: Vector3) {\r\n        return this.positionIndeces.map((n, i) => n * size.array[i % 3]);\r\n    }\r\n\r\n    protected normalBuffer() {\r\n        return this.normalIndeces;\r\n    }\r\n\r\n    protected textureBuffer(size: Vector3) {\r\n\r\n        this.texture = new GLTexture(this.game, {});\r\n\r\n        if (Object.values(this.matsData).length) {\r\n\r\n            const matArray = Object.values(this.matsData);\r\n            const matImage = matArray.find((m) => m.map_Kd);\r\n\r\n            if (matImage) {\r\n                this.texture = new GLTexture(this.game, {\r\n                    url: `obj/${this.path}${matImage.map_Kd.join(' ').trim()}`,\r\n                });\r\n            } else {\r\n                this.texture = new GLTexture(this.game, {\r\n                    color: matArray.map((m) => [\r\n                        ...(m.Kd ? m.Kd.map(Number) : [0, 0, 0]),\r\n                        m.d ? Number(m.d[0]) : 1] as Color)\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        return this.texturePositionIndeces;\r\n    }\r\n}", "import { Skeleton } from './animation/skeleton';\r\nimport { GlElement, GlElementAttributes } from './elementBase';\r\nimport { GlElementType } from './rendering/glRenderer';\r\n\r\nexport type CharacterAttributes = GlElementAttributes & {\r\n}\r\n\r\nexport abstract class Character extends GlElement {\r\n    public type: GlElementType = 'group';\r\n    public stat: Record<string, boolean> = {}\r\n    public skeleton: Skeleton;\r\n    public get ani(){\r\n        return this.skeleton.animator\r\n    }\r\n    constructor(attr: CharacterAttributes) {\r\n        super(attr);\r\n    }\r\n}\r\n", "export type EaseFunction = (progress: number) => number;\r\nexport type EaseKeys = 'linear'|'easeInQuad'|'easeOutQuad'|'easeInOutQuad'|'easeInCubic'|'easeOutCubic'|'easeInOutCubic'|'easeInQuart'|'easeOutQuart'|'easeInOutQuart'|'easeInQuint'|'easeOutQuint'|'easeInOutQuint'|'easeInSine'|'easeOutSine'|'easeInOutSine'|'easeInExpo'|'easeOutExpo'|'easeInOutExpo'|'easeInCirc'|'easeOutCirc'|'easeInOutCirc'|'easeInBack'|'easeOutBack'|'easeInOutBack';\r\n\r\nexport abstract class Ease {\r\n    static linear(x:number) {\r\n        return x;\r\n    }\r\n    static easeInQuad(x:number) {\r\n        return x * x;\r\n    }\r\n    static easeOutQuad(x:number) {\r\n        return 1 - (1 - x) * (1 - x);\r\n    }\r\n    static easeInOutQuad(x:number) {\r\n        return x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2;\r\n    }\r\n    static easeInCubic(x:number) {\r\n        return x * x * x;\r\n    }\r\n    static easeOutCubic(x:number) {\r\n        return 1 - Math.pow(1 - x, 3);\r\n    }\r\n    static easeInOutCubic(x:number) {\r\n        return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\r\n    }\r\n    static easeInQuart(x:number) {\r\n        return x * x * x * x;\r\n    }\r\n    static easeOutQuart(x:number) {\r\n        return 1 - Math.pow(1 - x, 4);\r\n    }\r\n    static easeInOutQuart(x:number) {\r\n        return x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2;\r\n    }\r\n    static easeInQuint(x:number) {\r\n        return x * x * x * x * x;\r\n    }\r\n    static easeOutQuint(x:number) {\r\n        return 1 - Math.pow(1 - x, 5);\r\n    }\r\n    static easeInOutQuint(x:number) {\r\n        return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2;\r\n    }\r\n    static easeInSine(x:number) {\r\n        return 1 - Math.cos((x * Math.PI) / 2);\r\n    }\r\n    static easeOutSine(x:number) {\r\n        return Math.sin((x * Math.PI) / 2);\r\n    }\r\n    static easeInOutSine(x:number) {\r\n        return -(Math.cos(Math.PI * x) - 1) / 2;\r\n    }\r\n    static easeInExpo(x:number) {\r\n        return x === 0 ? 0 : Math.pow(2, 10 * x - 10);\r\n    }\r\n    static easeOutExpo(x:number) {\r\n        return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\r\n    }\r\n    static easeInOutExpo(x:number) {\r\n        return x === 0\r\n            ? 0\r\n            : x === 1\r\n                ? 1\r\n                : x < 0.5\r\n                    ? Math.pow(2, 20 * x - 10) / 2\r\n                    : (2 - Math.pow(2, -20 * x + 10)) / 2;\r\n    }\r\n    static easeInCirc(x:number) {\r\n        return 1 - Math.sqrt(1 - Math.pow(x, 2));\r\n    }\r\n    static easeOutCirc(x:number) {\r\n        return Math.sqrt(1 - Math.pow(x - 1, 2));\r\n    }\r\n    static easeInOutCirc(x:number) {\r\n        return x < 0.5\r\n            ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\r\n            : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\r\n    }\r\n    static easeInBack(x:number) {\r\n        return 2.70158 * x * x * x - 1.70158 * x * x;\r\n    }\r\n    static easeOutBack(x:number) {\r\n        return 1 + 2.70158 * Math.pow(x - 1, 3) + 1.70158 * Math.pow(x - 1, 2);\r\n    }\r\n    static easeInOutBack(x:number) {\r\n        return x < 0.5\r\n            ? (Math.pow(2 * x, 2) * (7.18982 * x - 2.59491)) / 2\r\n            : (Math.pow(2 * x - 2, 2) * (3.59491 * (x * 2 - 2) + 2.59491) + 2) / 2;\r\n    }\r\n};", "import { Ease, EaseKeys } from '../util/ease';\r\nimport { Bone } from './skeleton_bone';\r\nimport { Util } from '../util/utils';\r\nimport { v3 } from '../math/vector3';\r\n\r\nexport type aniBoneTransform = [number?, number?, number?, number?, number?, number?];\r\nexport type aniBoneData = [number, aniBoneTransform?, EaseKeys?];\r\nexport type aniBones = Record<string, Bone>;\r\nexport type aniData = Record<string, aniBoneData[]>;\r\n\r\nexport type AnimationAttributes = {\r\n    time: number,\r\n    loop: boolean,\r\n    once: boolean,\r\n    dynamic: boolean,\r\n    bounce: boolean,\r\n    bones: Record<string, Bone>,\r\n    defaultEase: EaseKeys,\r\n    data: Record<string, aniBoneData[]>,\r\n};\r\n\r\nexport class Animation {\r\n    public interval: number = 0;\r\n    public loop: boolean;\r\n    public once: boolean;\r\n    public dynamic: boolean;\r\n    public defaultEase: EaseKeys;\r\n    public bounce: boolean;\r\n    public direction: -1 | 1 = 1;\r\n\r\n    private bones: aniBones;\r\n    private data: aniData = {};\r\n    public time: number;\r\n\r\n    private _active: boolean = false;\r\n    public get active(): boolean {\r\n        return this._active;\r\n    }\r\n    public set active(value: boolean) {\r\n        this._active = value;\r\n        if (!value) {\r\n            this.interval = 0; //reset on turn off.\r\n        }\r\n    }\r\n\r\n    public constructor(attr: AnimationAttributes) {\r\n        this.bones = attr.bones || {};\r\n        this.time = attr.time || 0;\r\n        this.loop = attr.loop || false;\r\n        this.once = attr.once || false;\r\n        this.dynamic = attr.dynamic || false;\r\n        this.bounce = attr.bounce || false;\r\n        this.defaultEase = attr.defaultEase || 'linear';\r\n\r\n        Object.entries(attr.data).forEach(([key, d]) => {\r\n            if (d.length === 0) {\r\n                d = [[0], [1]];\r\n            }\r\n\r\n            if (d[0][0] !== 0) {\r\n                d.unshift([0, ...d[0].slice(1)] as aniBoneData);\r\n            }\r\n\r\n            if (d[d.length - 1][0] !== 1) {\r\n                d.push([1, ...d[d.length - 1].slice(1)] as aniBoneData);\r\n            }\r\n\r\n            this.data[key] = d;\r\n        });\r\n\r\n    }\r\n\r\n    public setTime(t: number) {\r\n        const f = this.interval / this.time;\r\n        this.time = t;\r\n        this.interval = t * f;\r\n    }\r\n\r\n    public setBoneTransform(key: string, transform: aniBoneTransform) {\r\n        const bone = this.bones[key];\r\n\r\n        if (bone) {\r\n            bone.setRotation(v3(transform[0] || 0, transform[1] || 0, transform[2] || 0), this.dynamic);\r\n            bone.setPosition(v3(transform[3] || 0, transform[4] || 0, transform[5] || 0), this.dynamic);\r\n        }\r\n    }\r\n\r\n\r\n    private setBoneToValue(key: string, value: number) {\r\n        // console.log(key);\r\n        \r\n        if (this.data[key]) {\r\n\r\n            let before: aniBoneData = this.data[key][0];\r\n            let after: aniBoneData = this.data[key][this.data[key].length - 1];\r\n\r\n            this.data[key].forEach((d) => {\r\n                if (d[0] >= before[0] && d[0] <= value) {\r\n                    before = [d[0], Util.padArray(d[1] || [], 0, 7) as aniBoneTransform];\r\n                }\r\n                if (d[0] <= after[0] && d[0] >= value) {\r\n                    after = [d[0], Util.padArray(d[1] || [], 0, 7) as aniBoneTransform];\r\n                }\r\n            });\r\n\r\n            const [[startNumber, start], [endNumber, end, ease]] = [before, after];\r\n\r\n            const factor = Ease[ease || this.defaultEase]((value - startNumber) / (endNumber - startNumber));\r\n            if (key === 'bowS1'){\r\n                // console.log(key, (value - startNumber));\r\n            }\r\n\r\n            this.setBoneTransform(\r\n                key,\r\n                Util.addArrays(\r\n                    start || [],\r\n                    Util.scaleArrays(\r\n                        Util.subtractArrays(end || [], start || []),\r\n                        factor\r\n                    )\r\n                ) as aniBoneTransform\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    public setBonesToValue(n: number) {\r\n        Object.keys(this.bones).forEach((b) => {\r\n            this.setBoneToValue(b, n);\r\n        });\r\n    }\r\n\r\n    public stop() {\r\n        // Object.values(this.bones).forEach((b) => {\r\n        //     b.active = true;\r\n        // });\r\n    }\r\n\r\n    public tick(interval: number) {\r\n        if (this.active) {\r\n            this.interval = this.interval + (interval * this.direction);\r\n\r\n\r\n            if (this.interval >= this.time) {\r\n                if (this.bounce) {\r\n                    this.interval = this.time - 1;\r\n                    this.direction = -1;\r\n                } else if (this.loop) {\r\n                    this.interval = this.interval % this.time;\r\n                } else if (this.once) {\r\n                    this.interval = this.time - 1;\r\n                } else {\r\n                    this.active = false;\r\n                    this.interval = 1;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.interval < 0) {\r\n                if (this.loop) {\r\n                    this.interval = 0;\r\n                    this.direction = 1;\r\n                } else {\r\n                    this.active = false;\r\n                    this.interval = 0;\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.setBonesToValue(Util.clamp(this.interval / this.time, 0.001, 0.999));\r\n        }\r\n    }\r\n}\r\n\r\nexport type AnimatorAttributes = {\r\n    bones: Record<string, Bone>,\r\n};\r\n\r\nexport class Animator {\r\n    private animations: Record<string, Animation> = {};\r\n    public bones: Record<string, Bone> = {};\r\n\r\n    public constructor(attr: AnimatorAttributes) {\r\n        this.bones = attr.bones || {};\r\n    }\r\n\r\n    public add(key: string, time: number, data: aniData, attr: { loop?: boolean, once?: boolean, dynamic?: boolean; ease?: EaseKeys, bounce?: boolean; } = {}) {\r\n\r\n        this.animations[key] = new Animation({\r\n            bones: this.bones,\r\n            loop: attr.loop || false,\r\n            once: attr.once || false,\r\n            bounce: attr.bounce || false,\r\n            dynamic: attr.dynamic || false,\r\n            defaultEase: attr.ease || 'linear',\r\n            time, data,\r\n        });\r\n        return this.get(key);\r\n    }\r\n\r\n    public get(key: string) {\r\n        return this.animations[key];\r\n    }\r\n\r\n    public stop() {\r\n        Object.values(this.animations).forEach((a) => {\r\n            a.active = false;\r\n        });\r\n    }\r\n\r\n    public play(key: string) {\r\n        Object.entries(this.animations).forEach(([k, a]) => {\r\n            a.active = (k === key);\r\n        });\r\n    }\r\n\r\n    public setToInterval(key: string, n:number) {\r\n        const an = this.get(key);\r\n        if (an){\r\n            an.setBonesToValue(n * an.time);\r\n        }\r\n    }\r\n\r\n    public replay(key: string) {\r\n        this.stop();\r\n        Object.entries(this.animations).find((k) => k[0] === key)[1].active = true;\r\n    }\r\n\r\n    public tick(interval: number) {\r\n        Object.values(this.animations).forEach(a => a.tick(interval));\r\n    }\r\n}\r\n", "import { GlElementAttributes } from '../elementBase';\r\nimport { GLGroup } from '../group';\r\nimport { Bone } from './skeleton_bone';\r\nimport { Animator } from './animation';\r\nimport { TickerReturnData } from '../ticker';\r\n\r\nexport type HumanSkeletonLimbsSizes = 'hipsWidth' | 'shoulderWidth' | 'head' | 'torso' | 'armUpper' | 'armLower' | 'hand' | 'legUpper' | 'legLower' | 'foot' | 'hips';\r\nexport type HumanSkeletonLimbs =\r\n    'head' | 'torso' | 'hips' |\r\n    'lArmUpper' | 'lArmLower' | 'lHand' |\r\n    'lLegUpper' | 'lLegLower' | 'lFoot' |\r\n    'rArmUpper' | 'rArmLower' | 'rHand' |\r\n    'rLegUpper' | 'rLegLower' | 'rFoot';\r\n\r\nexport type SkeletonAttributes = GlElementAttributes & {\r\n    bones?: [string, Bone, string?][];\r\n};\r\n\r\nexport abstract class Skeleton extends GLGroup {\r\n\r\n    public bones: Record<string, Bone> = {};\r\n    public parentage: Record<string, string> = {};\r\n    public animator: Animator;\r\n\r\n    constructor(attr: SkeletonAttributes = {}) {\r\n        super(attr);\r\n        attr.bones.forEach((o) => {\r\n            this.addBone(o);\r\n        });\r\n    }\r\n    addBone(o: [string, Bone, string?]) {\r\n\r\n        this.bones[o[0]] = o[1];\r\n        if (o[2]) {\r\n            this.parentage[o[0]] = o[2];\r\n        }\r\n        if (this.readyState) {\r\n            if (this.parentage[o[0]]) {\r\n                this.bones[this.parentage[o[0]]].addChild(o[1]);\r\n            } else {\r\n                this.addChild(o[1]);\r\n            }\r\n            this.animator.bones = this.bones;\r\n        }\r\n    }\r\n\r\n    public build(): void {\r\n        super.build();\r\n        Object.entries(this.bones).forEach(([key, b]) => {\r\n            if (this.parentage[key]) {\r\n                this.bones[this.parentage[key]].addChild(b);\r\n            } else {\r\n                this.addChild(b);\r\n            }\r\n        });\r\n        this.animator = new Animator({ bones: this.bones });\r\n    }\r\n\r\n    public tick(obj: TickerReturnData): void {\r\n        super.tick(obj);\r\n        this.animator.tick(obj.intervalS10);\r\n    }\r\n}\r\n", "import { GLCuboid } from '../objects/cuboid';\r\nimport { Vector3, v3 } from '../math/vector3';\r\nimport { GlElementAttributes } from '../elementBase';\r\nimport { TickerReturnData } from '../ticker';\r\nimport { GLGroup } from '../group';\r\nimport { Color } from '../util/colors';\r\nimport { Vector2, v2 } from '../math/vector2';\r\n\r\n\r\nexport type BoneAttributes = GlElementAttributes & {\r\n    profile?: Vector2;\r\n    length?: number;\r\n    mesh?: boolean;\r\n    speed?: number;\r\n    baseRotation?: Vector3;\r\n};\r\n\r\nexport class Bone extends GLGroup {\r\n    private length: number;\r\n    private profile: Vector2;\r\n    private mesh: boolean;\r\n    public speed: number;\r\n    public baseRotation: Vector3;\r\n    public basePosition: Vector3;\r\n\r\n    private target: Vector3;\r\n    constructor(attr: BoneAttributes = {}) {\r\n        super(attr);\r\n        this.mesh = attr.mesh === undefined ? false : attr.mesh;\r\n        this.length = attr.length === undefined ? 10 : attr.length;\r\n        this.profile = attr.profile || v2(0);\r\n        this.speed = attr.speed === undefined ? 0.02 : attr.speed;\r\n        this.baseRotation = attr.baseRotation || v3(0);\r\n        this.basePosition = this.position || v3(0);\r\n        this.size = v3(this.profile.x, this.length, this.profile.y);\r\n\r\n        if (!attr.anchorPoint) {\r\n            this.anchorPoint = v3(\r\n                this.profile.x / 2,\r\n                this.length,\r\n                this.profile.y / 2\r\n            );\r\n        }\r\n        this.rotation = this.baseRotation;\r\n    }\r\n    public setRotation(r: Vector3, dynamically: boolean = false) {\r\n        this.target = this.baseRotation.add(r.clone());\r\n        if (!dynamically){\r\n            this.rotation = this.target.clone();\r\n        }\r\n    }\r\n    public setPosition(r: Vector3, dynamically: boolean = false) {\r\n        this.position = this.basePosition.add(r.clone());\r\n    }\r\n    public tick(obj: TickerReturnData): void {\r\n        super.tick(obj);\r\n\r\n        if (!this.target) return;\r\n\r\n        const dif = this.rotation.subtract(this.target);\r\n\r\n        if (dif.magnitude() === 0) return;\r\n\r\n        const movement = v3(\r\n            this.target.x > this.rotation.x ? Math.abs(dif.x) : -Math.abs(dif.x),\r\n            this.target.y > this.rotation.y ? Math.abs(dif.y) : -Math.abs(dif.y),\r\n            this.target.z > this.rotation.z ? Math.abs(dif.z) : -Math.abs(dif.z)\r\n        ).clamp(\r\n            v3(-this.speed, -this.speed, -this.speed).scale(obj.interval / 6),\r\n            v3(this.speed, this.speed, this.speed).scale(obj.interval / 6)\r\n        );\r\n\r\n        this.rotation = this.rotation.add(movement);\r\n    }\r\n    public build(): void {\r\n        super.build();\r\n        if (this.mesh) {\r\n            this.addChild(new GLCuboid({\r\n                colors: [[0.8, 0.8, 0.8, 1], [0.8, 0.8, 0.8, 1], [0.8, 0.8, 0.8, 1], [0.8, 0.8, 0.8, 1], [0.8, 0.8, 0.8, 1], [0.8, 0.8, 0.8, 1]] as [Color, Color?, Color?, Color?, Color?, Color?],\r\n                size: this.size,\r\n            }));\r\n        }\r\n    }\r\n}", "import { Skeleton } from '../../../classes/animation/skeleton';\r\nimport { Bone } from '../../../classes/animation/skeleton_bone';\r\nimport { GlElementAttributes, GlElement } from '../../../classes/elementBase';\r\nimport { GLGroup } from '../../../classes/group';\r\nimport { v2 } from '../../../classes/math/vector2';\r\nimport { Vector3, v3 } from '../../../classes/math/vector3';\r\nimport { GLobj } from '../../../classes/objects/obj';\r\nimport { GlElementType } from '../../../classes/rendering/glRenderer';\r\nimport { Player } from './player_actor';\r\n\r\n\r\nexport type BowAttributes = GlElementAttributes & {\r\n    parentBone: Bone;\r\n    offsetP?: Vector3;\r\n    offsetR?: Vector3;\r\n};\r\n\r\nexport class BowActor extends GLGroup {\r\n    public parent: Player;\r\n\r\n    private _holding: boolean;\r\n    public get holding(): boolean {\r\n        return this._holding;\r\n    }\r\n    public set holding(value: boolean) {\r\n        this._holding = value;\r\n        this.backBow.active = !value;\r\n        this.backBow.visible = !value;\r\n        this.handBow.active = value;\r\n        this.handBow.visible = value;\r\n        this.backBow.tension = 0.999;\r\n        this.handBow.tension = 0.999;\r\n        \r\n    }\r\n\r\n    public handBow: Bow;\r\n    public backBow: Bow;\r\n\r\n    public build(): void {\r\n        super.build();\r\n\r\n        this.handBow = new Bow({ parentBone: this.parent.skeleton.bones['lHand'], offsetR: v3(0, 0, 0.2) });\r\n        this.addChild(this.handBow);\r\n\r\n        this.backBow = new Bow({\r\n            parentBone: this.parent.skeleton.bones['torso'], offsetP: v3(0, 6, -3), offsetR: v3(\r\n                Math.PI / 2,\r\n                0.5,\r\n                Math.PI / 2 + 0.9\r\n            )\r\n        });\r\n        this.addChild(this.backBow);\r\n\r\n        this.holding = false;\r\n    }\r\n}\r\n\r\nexport class Bow extends GlElement {\r\n    public type: GlElementType;\r\n    public stat: Record<string, boolean> = {};\r\n    public parent: BowActor;\r\n    public parentBone: Bone;\r\n    public bowRig: BowSkeleton;\r\n\r\n    public get visible(): boolean {\r\n        return super.visible;\r\n    }\r\n    public set visible(value: boolean) {\r\n        super.visible = value;\r\n        this.bowRig.visible = value;\r\n    }\r\n\r\n    public set tension(v: number) {\r\n        this.bowRig.animator.setToInterval('tension', v);\r\n    }\r\n\r\n    constructor(attr: BowAttributes) {\r\n        super(attr);\r\n        this.parentBone = attr.parentBone;\r\n        this.bowRig = new BowSkeleton(attr.offsetP, attr.offsetR);\r\n    }\r\n    public build(): void {\r\n        super.build();\r\n        this.parentBone.addChild(this.bowRig);\r\n        this.tension = 0.999;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class BowSkeleton extends Skeleton {\r\n\r\n    public get visible(): boolean {\r\n        return super.visible;\r\n    }\r\n    public set visible(value: boolean) {\r\n        super.visible = value;\r\n        this.bones['bow'].visible = value;\r\n    }\r\n\r\n    constructor(public offsetP: Vector3 = v3(0), public offsetR: Vector3 = v3(0)) {\r\n        super({\r\n            bones: [\r\n                ['bow', new Bone({ profile: v2(1, 28), length: 6, position: v3(0, 0, 0), mesh: false }), ''],\r\n                ['bowS1', new Bone({ profile: v2(1, 13), length: 1, position: v3(0, 5, -12), mesh: false }), 'bow'],\r\n                ['bowS2', new Bone({ profile: v2(1, 13), length: 1, position: v3(0, 5, 1), mesh: false }), 'bow'],\r\n            ]\r\n        });\r\n        this.rotation = offsetR;\r\n        this.position = offsetP;\r\n    }\r\n    public build(): void {\r\n        super.build();\r\n        this.bones['bow'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-2-LongBow.obj', size: v3(10, 10, 10), rotation: v3(0, Math.PI, 0), position: v3(0.5, 2.5, 1) }));\r\n        this.bones['bowS1'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-0-BowRope.obj', size: v3(10, 10, 10), rotation: v3(0, Math.PI, 0), position: v3(0.5, 0.5, 6.5) }));\r\n        this.bones['bowS2'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-1-BowRope-1.obj', size: v3(10, 10, 10), rotation: v3(0, Math.PI, 0), position: v3(0.5, 0.5, 6.5) }));\r\n\r\n        this.animator.add('tension', 100, {\r\n            bow: [[0, [0, 0, 0]], [1, [1, 1, 0]]],\r\n            bowS1: [[0, [0, 0, 0]], [1, [1, 1, 1]]],\r\n            bowS2: [[0, [0, 0, 0]], [1, [1, 1, 1]]],\r\n        }, { loop: false, bounce: false, once: false, dynamic: false });\r\n    }\r\n}\r\n", "import { Character } from '../../../classes/character';\r\nimport { GlController, GlControllerOrder } from '../../../classes/controller';\r\nimport { Vector3, v3 } from '../../../classes/math/vector3';\r\nimport { GlElementType } from '../../../classes/rendering/glRenderer';\r\nimport { TickerReturnData } from '../../../classes/ticker';\r\nimport { Util } from '../../../classes/util/utils';\r\nimport { glob } from '../../../game';\r\nimport { Player } from './player_actor';\r\n\r\n\r\nexport class FreeCamera extends GlController {\r\n    public type: GlElementType = 'controller';\r\n    public order: GlControllerOrder = 'after';\r\n    public lagList: Vector3[] = [];\r\n    private lagCount: number = 1;\r\n    public parent: Player;\r\n    zoom: number = 0;\r\n    public get active(): boolean {\r\n        return super.active;\r\n    }\r\n    public set active(value: boolean) {\r\n        super.active = value;\r\n        if (value) {\r\n            this.camera.offset = v3(0, -15, this.zoom);\r\n            this.camera.rotation = v3(0.3, Math.PI / 8, 0);\r\n            this.camera.fov = 60;\r\n        }\r\n    }\r\n\r\n    constructor(public target: Character) {\r\n        super({ autoReady: false });\r\n        this.camera.offset = v3(0, -15, this.zoom);\r\n        this.camera.rotation = v3(0.3, Math.PI / 8, 0);\r\n        this.camera.fov = 60;\r\n    }\r\n\r\n    public tick(o: TickerReturnData) {\r\n        super.tick(o);\r\n\r\n        if (glob.device.locked) {\r\n            //camera rotation\r\n            const r = this.axis('camera').scale(0.005);\r\n            this.camera.rotation = v3(\r\n                Util.clamp(this.camera.rotation.x + r.y, -1, Math.PI / 2),\r\n                this.camera.rotation.y + r.x,\r\n                this.camera.rotation.z\r\n            );\r\n\r\n            //zoom\r\n            this.zoom = Util.clamp(this.zoom + (this.button('zoom') * 0.1), 30, 300);\r\n\r\n            //aim\r\n            this.camera.offset = this.button('aim') ? v3(-15, -10, 30) : v3(0, -15, this.zoom);\r\n\r\n            //follow player\r\n            const nP = this.target.position.add(this.target.size.multiply(0.5, 0.3, 0.5));\r\n            this.camera.target = nP;\r\n\r\n        }\r\n\r\n    }\r\n}", "import { Collider } from '../../../classes/collider';\r\nimport { GlController } from '../../../classes/controller';\r\nimport { v2 } from '../../../classes/math/vector2';\r\nimport { Vector3, v3 } from '../../../classes/math/vector3';\r\nimport { TickerReturnData } from '../../../classes/ticker';\r\nimport { Util } from '../../../classes/util/utils';\r\nimport { Player } from './player_actor';\r\n\r\n\r\nexport class PlayerController extends GlController {\r\n    private intr: Record<string, number> = { fall: 0, jump: 0, landDelay: 0 };\r\n    private stat: Record<string, boolean> = { jumping: false, falling: false, running: false };\r\n    private cnst = { runTime: 250, runSlowDownFactor: 0.7, runSpeed: 0.5, minJumpTime: 200, jumpTime: 300, jumpSpeed: 0.6 } as const;\r\n    private velocity: Vector3 = Vector3.f(0);\r\n    private newPosition: Vector3;\r\n    public parent: Player;\r\n    public get aiming (){\r\n        return this.button('aim')\r\n    };\r\n\r\n    public setMovementVelocity(interval: number) {\r\n        const setter = (key: string, cond: boolean, interval: number) => {\r\n            this.intr[key] = Util.clamp((this.intr[key] || 0) + (cond ? interval : -(interval * this.cnst.runSlowDownFactor)), 0, this.cnst.runTime);\r\n        };\r\n\r\n        setter('right', this.axis('movement').x === 1, interval);\r\n        setter('left', this.axis('movement').x === -1, interval);\r\n        setter('up', this.axis('movement').y === 1, interval);\r\n        setter('down', this.axis('movement').y === -1, interval);\r\n\r\n        if (!this.aiming) {\r\n\r\n            const plane = v2(\r\n                (this.intr.right - this.intr.left) / this.cnst.runTime,\r\n                (this.intr.up - this.intr.down) / this.cnst.runTime,\r\n            ).clampMagnitude(1).scale(this.cnst.runSpeed);\r\n\r\n            this.velocity = v3(\r\n                plane.x,\r\n                0,\r\n                plane.y\r\n            );\r\n        } else {\r\n            this.velocity = v3(0);\r\n        }\r\n\r\n    }\r\n\r\n    private determineStates(interval: number) {\r\n\r\n        if (this.parent.stat.falling) {\r\n            this.parent.stat.jumping = false;\r\n        } else {\r\n            if (this.parent.stat.jumping) {\r\n\r\n                if (this.intr.jump < this.cnst.minJumpTime) {\r\n                    this.parent.stat.jumping = true;\r\n                    this.parent.stat.falling = false;\r\n                } else if (this.intr.jump < this.cnst.jumpTime) {\r\n                    this.parent.stat.jumping = Boolean(this.button('jump'));\r\n                } else {\r\n                    this.parent.stat.jumping = false;\r\n                    this.parent.stat.falling = true;\r\n                    this.intr.jump = this.cnst.jumpTime;\r\n                }\r\n            } else {\r\n                this.parent.stat.jumping = Boolean(this.button('jump'));\r\n            }\r\n        }\r\n    }\r\n\r\n    public setJumpVelocity(interval: number) {\r\n        this.determineStates(interval);\r\n\r\n        if (this.parent.stat.jumping) {\r\n            this.intr.jump = Math.min(this.intr.jump + interval, this.cnst.jumpTime);\r\n            this.intr.fall = -this.intr.jump;\r\n        } else if (this.parent.stat.falling) {\r\n            this.intr.jump = this.cnst.jumpTime;\r\n            this.intr.fall += interval;\r\n        } else {\r\n            this.velocity.y = 0;\r\n            return;\r\n        }\r\n\r\n        const y = (this.cnst.jumpTime - this.intr.jump - this.intr.fall) / (this.cnst.jumpTime) * this.cnst.jumpSpeed;\r\n\r\n        this.velocity.y = y;\r\n    }\r\n\r\n    public setVelocity(obj: TickerReturnData) {\r\n        this.setMovementVelocity(obj.intervalS10);\r\n        this.setJumpVelocity(obj.intervalS10);\r\n\r\n        const sc = this.velocity.scale(obj.intervalS10 / 6);\r\n        if (sc.xz.magnitude() > 0) {\r\n            const [x, z] = sc.xz.rotate(-this.camera.rotation.y).array;\r\n            this.newPosition = this.parent.position.add(v3(x, sc.y, z));\r\n            if (!this.axis('movement').isZero()) {\r\n                this.parent.rotation = this.camera.rotation.multiply(0, 1, 0).add(v3(0, Math.PI / 2, 0)).add(v3(0, -sc.xz.angle(), 0));\r\n            }\r\n            this.parent.stat.running = true;\r\n        } else {\r\n            this.newPosition = this.parent.position.add(v3(0, sc.y, 0));\r\n            this.parent.stat.running = false;\r\n        }\r\n\r\n        if (this.aiming) {\r\n            this.parent.rotation = this.camera.rotation.multiply(0, 1, 0);\r\n        }\r\n    }\r\n\r\n\r\n    public collide(obj: TickerReturnData) {\r\n        this.parent.stat.ground = false;\r\n        const collisions = (this.parent.zones[0] as Collider).calculateCollision();\r\n        collisions.forEach((v: Vector3)=>{\r\n            if (v.y >= 0){\r\n                this.intr.fall = 0;\r\n                this.intr.jump = 0;\r\n                this.parent.stat.falling = false;\r\n                this.parent.stat.ground = true;\r\n            } else {\r\n                this.parent.stat.falling = true;\r\n                this.parent.stat.ground = false;\r\n            } \r\n            this.velocity.subtract(v);\r\n            this.parent.position = this.newPosition.clone();\r\n            this.newPosition = this.newPosition.add(v);\r\n        })\r\n\r\n        if (!this.parent.stat.jumping) {\r\n            this.parent.stat.falling = !this.parent.stat.ground;\r\n        }\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        this.setVelocity(obj);\r\n        this.collide(obj);\r\n\r\n        this.parent.position = this.newPosition.clone();\r\n        // this.parent.rotation = this.parent.rotation.rotateXZ(0.004)\r\n    }\r\n}", "import { GlElementAttributes } from '../elementBase';\r\nimport { v2 } from '../math/vector2';\r\nimport { Bone } from './skeleton_bone';\r\nimport { Skeleton } from './skeleton';\r\nimport { v3 } from '../math/vector3';\r\n\r\nexport type HumanAttributes = GlElementAttributes & {\r\n    'head': number,\r\n    'armUpper': number,\r\n    'armLower': number,\r\n    'hand': number,\r\n    'legUpper': number,\r\n    'legLower': number,\r\n    'foot': number,\r\n    'torso': number,\r\n    'hips': number,\r\n    'hipsWidth': number,\r\n    'shoulderWidth': number,\r\n};\r\n\r\nexport class HumanSkeleton extends Skeleton {\r\n    sizes: HumanAttributes;\r\n    constructor(attr: HumanAttributes) {\r\n        super({\r\n            bones: [\r\n                ['hips', new Bone({ profile: v2(attr.hipsWidth, 1), length: attr.hips, position: v3(0, attr.legUpper + attr.legLower + attr.foot, 2), }), ''],\r\n                ['torso', new Bone({ anchorPoint: v3(attr.shoulderWidth / 2, 0, 0), baseRotation: v3(0, 0, 0), profile: v2(attr.shoulderWidth, 1), length: attr.torso, position: v3(-(attr.shoulderWidth - attr.hipsWidth) / 2, attr.hips, 0), }), 'hips'],\r\n                ['head', new Bone({ profile: v2(4, 3), length: attr.head, anchorPoint: v3(2, 0, 1), position: v3((attr.shoulderWidth - 4) / 2, attr.torso + 1, -1), }), 'torso'],\r\n                ['lArmUpper', new Bone({ profile: v2(1), baseRotation: v3(-0.1, 0, 0.4), length: attr.armUpper, position: v3(0, attr.torso - attr.armUpper, 0), }), 'torso'],\r\n                ['rArmUpper', new Bone({ profile: v2(1), baseRotation: v3(-0.1, 0, -0.4), length: attr.armUpper, position: v3(attr.shoulderWidth - 1, attr.torso - attr.armUpper, 0), }), 'torso'],\r\n                ['lArmLower', new Bone({ baseRotation: v3(0.2, 0, -0.3), profile: v2(1), length: attr.armLower, position: v3(0, -attr.armLower, 0), }), 'lArmUpper'],\r\n                ['rArmLower', new Bone({ baseRotation: v3(0.2, 0, 0.3), profile: v2(1), length: attr.armLower, position: v3(0, -attr.armLower, 0), }), 'rArmUpper'],\r\n                ['lHand', new Bone({ profile: v2(1), length: attr.hand, position: v3(0, -attr.hand, 0) }), 'lArmLower'],\r\n                ['rHand', new Bone({ profile: v2(1), length: attr.hand, position: v3(0, -attr.hand, 0) }), 'rArmLower'],\r\n                ['lLegUpper', new Bone({ profile: v2(1), length: attr.legUpper, position: v3(0, -attr.legUpper, 0), }), 'hips'],\r\n                ['rLegUpper', new Bone({ profile: v2(1), length: attr.legUpper, position: v3(attr.hipsWidth - 1, -attr.legUpper, 0), }), 'hips'],\r\n                ['lLegLower', new Bone({ profile: v2(1), length: attr.legLower, position: v3(0, -attr.legLower, 0) }), 'lLegUpper'],\r\n                ['rLegLower', new Bone({ profile: v2(1), length: attr.legLower, position: v3(0, -attr.legLower, 0) }), 'rLegUpper'],\r\n                ['lFoot', new Bone({ profile: v2(1, 3), length: attr.foot, position: v3(-0, -attr.foot, -0) }), 'lLegLower'],\r\n                ['rFoot', new Bone({ profile: v2(1, 3), length: attr.foot, position: v3(-0, -attr.foot, -0) }), 'rLegLower'],\r\n            ]\r\n        });\r\n\r\n        this.sizes = attr;\r\n    }\r\n}\r\n", "import { HumanSkeleton } from '../../../classes/animation/skeleton_human';\r\nimport { v3 } from '../../../classes/math/vector3';\r\nimport { GLobj } from '../../../classes/objects/obj';\r\nimport { TickerReturnData } from '../../../classes/ticker';\r\nimport { Player } from './player_actor';\r\n\r\n\r\nexport class PlayerSkel extends HumanSkeleton {\r\n\r\n    public parent: Player;\r\n\r\n    constructor() {\r\n        super({\r\n            'head': 6,\r\n            'armUpper': 6,\r\n            'armLower': 6,\r\n            'hand': 0,\r\n            'legUpper': 4,\r\n            'legLower': 7,\r\n            'foot': 1,\r\n            'torso': 9,\r\n            'hips': 3,\r\n            'hipsWidth': 6,\r\n            'shoulderWidth': 6,\r\n        });\r\n    }\r\n\r\n\r\n    public build(): void {\r\n        super.build();\r\n\r\n        this.bones['head'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-15-Head-7.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(2, 3, 2) }));\r\n        this.bones['torso'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-3-Spine3-2.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(this.sizes.shoulderWidth / 2, 5, 0) }));\r\n        this.bones['torso'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-2-Spine2-4.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(this.sizes.shoulderWidth / 2-1, 2, 1) }));\r\n        this.bones['hips'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-8-Spine1-3.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(3, 2, 0) }));\r\n        this.bones['lLegUpper'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-14-L_Thigh-3.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(1, 3, 0) }));\r\n        this.bones['rLegUpper'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-11-R_Thigh-2.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(0, 3, 0) }));\r\n        this.bones['lLegLower'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-13-L_Calf-3.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(1,3,-0.5) }));\r\n        this.bones['rLegLower'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-10-R_Calf-3.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(0,3,-0.5) }));\r\n        this.bones['lLegLower'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-12-L_Foot-3.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(1,-0.5,0.5) }));\r\n        this.bones['rLegLower'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-9-R_Foot-2.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, 0), position: v3(0,-0.5,0.5) }));\r\n        this.bones['lArmUpper'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-7-L_Arm-3.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, Math.PI / 2), position: v3(0, 3, 1) }));\r\n        this.bones['rArmUpper'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-1-R_Arm.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, Math.PI / 2), position: v3(1, 3, 1) }));\r\n        this.bones['lArmLower'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-6-L_ForeArm-3.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, Math.PI / 2), position: v3(0, 4, 1) }));\r\n        this.bones['rArmLower'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-0-R_ForeArm.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, -Math.PI / 2), position: v3(1, 4, 1) }));\r\n        this.bones['lArmLower'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-4-L_Hand-3.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, Math.PI / 2), position: v3(-0.5, 0.5, 1) }));\r\n        this.bones['rArmLower'].addChild(new GLobj({ colorIntensity: 1.3, url: 'RPGCharacters_Source-5-R_Hand-3.obj', size: v3(10,10,10), rotation: v3(0, Math.PI, -Math.PI / 2), position: v3(1.5, 0.5, 1) }));\r\n\r\n\r\n        this.animator.add('running', 1000, {\r\n            torso: [[0, [-0.3, -0.3, 0]], [1, [-0.3, 0.3, 0]]], \r\n            hips: [[0,[0,0,0,0,2,0]], [.5,[0,0,0,0,0,0]],[1,[0,0,0,0,2,0]]],\r\n            head: [[0, [0.2, 0.2, 0]], [1, [0.2, -0.2, 0]]],\r\n            lArmUpper: [[0, [-0.8, 0, 0.1]], [1, [1.2, 0, 0.1]]],\r\n            lArmLower: [[0, [0.3, 0, 0]], [1, [1.2, 0, -1.2]]], \r\n            lHand: [],\r\n            rArmUpper: [[0, [1.2, 0, -0.1]], [1, [-0.8, 0, -0.1]]],\r\n            rArmLower: [[0, [1.2, 0, 1.2]], [1, [0.3, 0, 0]]], \r\n            rHand: [],\r\n            lLegUpper: [[0, [1.2, 0, 0]], [1, [-.6, 0, 0]]],\r\n            lLegLower: [[0, [-0.3, 0, 0]], [1, [-2, 0, 0]]],\r\n            lFoot: [[0, [-0.2, 0, 0]]],\r\n            rLegUpper: [[0,[-.6, 0, 0]], [1, [1.2, 0, 0]]],\r\n            rLegLower: [[0, [-2, 0, 0]], [1, [-0.3, 0, 0]]],\r\n            rFoot: [[0, [-0.2, 0, 0]]],\r\n        }, { loop: true, ease: 'easeInOutSine', bounce: true });\r\n\r\n        this.animator.add('jumping', 500, {\r\n            torso: [[0], [1]],\r\n            hips: [[0], [1, [-0.1, -0.1, -0.15]]],\r\n            head: [[0], [1, [0.3, 0, 0]]],\r\n            lArmUpper: [[0], [1, [-0.2, 0, 0.1]]],\r\n            lArmLower: [[0], [1, [0, 0, 0.2]]],\r\n            lHand: [[0], [1]],\r\n            rArmUpper: [[0], [1, [3, 0, 0.3]]],\r\n            rArmLower: [[0], [1, [0, 0, 0.2]]],\r\n            rHand: [[0], [1]],\r\n            lLegUpper: [[0], [1, [2, 0, 0]]],\r\n            lLegLower: [[0], [1, [-2.4, 0, 0]]],\r\n            lFoot: [[0], [1]],\r\n            rLegUpper: [[0], [1, [-0.2, 0, 0]]],\r\n            rLegLower: [[0], [1, [-0.3, 0, 0]]],\r\n            rFoot: [[0], [1, [-0.6, 0, 0]]],\r\n        }, { once: true, ease: 'easeInOutSine' });\r\n\r\n        this.animator.add('idle', 15000, {\r\n            torso: [],\r\n            hips: [],\r\n            head: [[0.4, [0, 0.5]], [0.5, [0, -0.5]], [0.9, [0, -0.5]], [1, [0, 0.5]]],\r\n            lArmUpper: [],\r\n            lArmLower: [],\r\n            lHand: [],\r\n            rArmUpper: [],\r\n            rArmLower: [],\r\n            rHand: [],\r\n            lLegUpper: [],\r\n            lLegLower: [],\r\n            lFoot: [],\r\n            rLegUpper: [],\r\n            rLegLower: [],\r\n            rFoot: [],\r\n        }, { loop: true, dynamic: true, ease: 'easeInOutSine' });\r\n\r\n        this.animator.add('aim', 1000, {\r\n            torso: [],\r\n            hips: [[0], [1, [0, Math.PI / 2, 0]]],\r\n            head: [[0], [1, [0, -1.1, 0]]],\r\n            lArmUpper: [[0], [1, [Math.PI / 2, 0, Math.PI / 2 - 0.1]]],\r\n            lArmLower: [[0], [1, [0, 0, -0.2]]],\r\n            lHand: [],\r\n            rArmUpper: [[0], [1, [1.5, 0, -0.8]]],\r\n            rArmLower: [[0], [1, [-0.3, 0, 2.2]]],\r\n            rHand: [],\r\n            lLegUpper: [[0], [1, [0, 0, 0.15]]],\r\n            lLegLower: [],\r\n            lFoot: [],\r\n            rLegUpper: [[0], [1, [0, 0, -0.15]]],\r\n            rLegLower: [],\r\n            rFoot: [],\r\n        }, { once: true, ease: 'easeInOutSine' });\r\n\r\n        this.animator.play('aim');\r\n    }\r\n\r\n\r\n    public tick(obj: TickerReturnData): void {\r\n        super.tick(obj);\r\n\r\n        if (!this.parent.stat.ground) {\r\n            this.animator.play('jumping');\r\n        } else {\r\n            if (this.parent.stat.running) {\r\n                this.animator.play('running');\r\n            } else {\r\n                if (this.parent.aiming) {\r\n                    this.animator.play('aim');\r\n                } else {\r\n                    this.animator.play('idle');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}", "import { HumanSkeleton } from '../../../classes/animation/skeleton_human';\r\nimport { Character } from '../../../classes/character';\r\nimport { Collider } from '../../../classes/collider';\r\nimport { GlElement } from '../../../classes/elementBase';\r\nimport { Vector3, v3 } from '../../../classes/math/vector3';\r\nimport { GLCuboid } from '../../../classes/objects/cuboid';\r\nimport { TickerReturnData } from '../../../classes/ticker';\r\nimport { BowActor } from './bow';\r\nimport { FreeCamera } from './player_camera';\r\nimport { PlayerController } from './player_controller';\r\nimport { PlayerSkel } from './player_skeleton';\r\n\r\nexport class Player extends Character {\r\n    public stat: Record<string, boolean> = { jumping: false, falling: false, running: false, fallAnimation: false };\r\n    public mesh: GLCuboid;\r\n    public skeleton: HumanSkeleton;\r\n    public bow: BowActor;\r\n\r\n    public get aiming() {\r\n        const a = (this.controllers[1] as PlayerController).aiming;\r\n        // this.bow.holding = a;\r\n        return a;\r\n    }\r\n\r\n    constructor({\r\n        position = Vector3.f(0),\r\n        rotation = Vector3.f(0)\r\n    }: {\r\n        position?: Vector3;\r\n        rotation?: Vector3;\r\n    } = {}) {\r\n        super({\r\n            position: position,\r\n            rotation: rotation,\r\n            size: v3(8, 33, 8),\r\n            anchorPoint: v3(4,0,4)\r\n        });\r\n        this.addControllers([\r\n            new Collider({\r\n                size: v3(8,33,8),\r\n                fixed: false,\r\n                position: v3(4,0,4),\r\n                absoluteOffset: v3(-4,0,-4),\r\n            }),\r\n            new PlayerController(this),\r\n            new FreeCamera(this)\r\n        ]);\r\n    }\r\n\r\n    build() {\r\n        GlElement.registerControllers(this);\r\n        // this.addChild(new GLCuboid({size: this.size, colors: [Colors.w], opacity: 0.1}))\r\n        this.skeleton = new PlayerSkel();\r\n        this.addChild(this.skeleton);\r\n        this.skeleton.position = v3(0,0,0)\r\n        this.bow = new BowActor();\r\n        this.addChild(this.bow);\r\n    }\r\n\r\n    public tick(obj: TickerReturnData): void {\r\n        super.tick(obj);\r\n        // (this.level as World).test.position = this.bow.handBow.bowRig.bones['bow'].worldPosition.clone()\r\n    }\r\n}", "import { Vector3, v3 } from '../../../classes/math/vector3';\r\nimport { GLobj } from '../../../classes/objects/obj';\r\n\r\nexport type TreeBaseAttributes = {\r\n    name: string,\r\n    position?: Vector3,\r\n    rotation?: Vector3,\r\n    scale?: number,\r\n};\r\nexport abstract class TreeBase extends GLobj {\r\n    constructor(attr: TreeBaseAttributes) {\r\n        super({\r\n            url: `treeModels/${attr.name}.obj`,\r\n            rotation: attr.rotation || v3(),\r\n            size: v3(70, 70, 70).scale(attr.scale||1) ,\r\n            position: attr.position || v3()\r\n        });\r\n    }\r\n}\r\nexport type TreeAttributes = {\r\n    position?: Vector3,\r\n    rotation?: Vector3,\r\n    scale?: number,\r\n};\r\n", "import { TreeBase, TreeAttributes } from './treeBase';\r\n\r\nexport class Tree1 extends TreeBase {\r\n    constructor(attr: TreeAttributes) {\r\n        super({\r\n            name: 'tree0_1',\r\n            position: attr.position,\r\n            rotation: attr.rotation,\r\n            scale: attr.scale*0.7,\r\n        });\r\n    }\r\n}\r\n", "import { TreeBase, TreeAttributes } from './treeBase';\r\n\r\nexport class Tree2 extends TreeBase {\r\n    constructor(attr: TreeAttributes) {\r\n        super({\r\n            name: 'tree0_2',\r\n            position: attr.position,\r\n            rotation: attr.rotation,\r\n            scale: attr.scale,\r\n        });\r\n    }\r\n}\r\n", "import { TreeBase, TreeAttributes } from './treeBase';\r\n\r\nexport class Tree3 extends TreeBase {\r\n    constructor(attr: TreeAttributes) {\r\n        super({\r\n            name: 'tree0_3',\r\n            position: attr.position,\r\n            rotation: attr.rotation,\r\n            scale: attr.scale,\r\n        });\r\n    }\r\n}\r\n", "import { TreeBase, TreeAttributes } from './treeBase';\r\n\r\nexport class Tree4 extends TreeBase {\r\n    constructor(attr: TreeAttributes) {\r\n        super({\r\n            name: 'tree0_4',\r\n            position: attr.position,\r\n            rotation: attr.rotation,\r\n            scale: attr.scale,\r\n        });\r\n    }\r\n}\r\n", "import { TreeBase, TreeAttributes } from './treeBase';\r\n\r\nexport class Tree5 extends TreeBase {\r\n    constructor(attr: TreeAttributes) {\r\n        super({\r\n            name: 'tree0_5',\r\n            position: attr.position,\r\n            rotation: attr.rotation,\r\n            scale: attr.scale,\r\n        });\r\n    }\r\n}\r\n", "import { TreeBase, TreeAttributes } from './treeBase';\r\n\r\nexport class Tree6 extends TreeBase {\r\n    constructor(attr: TreeAttributes) {\r\n        super({\r\n            name: 'tree0_6',\r\n            position: attr.position,\r\n            rotation: attr.rotation,\r\n            scale: attr.scale,\r\n        });\r\n    }\r\n}\r\n", "import { GLGroup } from '../../../classes/group';\r\nimport { Vector3, v3 } from '../../../classes/math/vector3';\r\nimport { Tree1 } from './tree1';\r\nimport { Tree2 } from './tree2';\r\nimport { Tree3 } from './tree3';\r\nimport { Tree4 } from './tree4';\r\nimport { Tree5 } from './tree5';\r\nimport { Tree6 } from './tree6';\r\n\r\nexport type RandomTreeAttributes = {\r\n    position?: Vector3,\r\n};\r\n\r\nexport class RandomTree extends GLGroup {\r\n    constructor(attr: RandomTreeAttributes) {\r\n        super({\r\n            position: attr.position,\r\n        });\r\n    }\r\n    public build(): void {\r\n        super.build();\r\n        this.addChild(new ([Tree1, Tree2, Tree3, Tree4, Tree5, Tree6, Tree2, Tree3, Tree4, Tree5, Tree6][Math.floor(Math.random() * 11)])({\r\n            rotation: v3(0, Math.random() * Math.PI, 0),\r\n            scale: 0.8 + (0.4 * Math.random())\r\n        }));\r\n    }\r\n}\r\n", "import { GLGroup } from '../../../classes/group';\r\nimport { Vector2 } from '../../../classes/math/vector2';\r\nimport { Vector3, v3 } from '../../../classes/math/vector3';\r\nimport { ObjStorage } from '../../../classes/objStorage';\r\nimport { RandomTree } from './randomTree';\r\n\r\nexport type ForrestAttributes = {\r\n    storage: ObjStorage,\r\n    position?: Vector3,\r\n    area: Vector2,\r\n    density: number,\r\n};\r\n\r\nexport class Forrest extends GLGroup {\r\n    area: Vector2;\r\n    density: number;\r\n    constructor(attr: ForrestAttributes) {\r\n        super({\r\n            position: attr.position,\r\n        });\r\n        this.area = attr.area;\r\n        this.density = attr.density;\r\n    }\r\n    public build(): void {\r\n        super.build();\r\n\r\n        for (let x = 0; x < this.area.x; x += 10) {\r\n            for (let y = 0; y < this.area.y; y += 10) {\r\n                if (Math.random() < this.density) {\r\n                    this.addChild(new RandomTree({\r\n                        position: v3(x, 0, y)\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import { UI } from '../dom/interface';\r\nimport { Vector2, v2 } from '../math/vector2';\r\nimport { InputReader } from './input';\r\n\r\nexport class TouchButtonReader extends InputReader<number> {\r\n    button: HTMLDivElement;\r\n    constructor(public ui: UI, private alignment: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' = 'bottomLeft', private offset: Vector2 = v2(0)) {\r\n        super();\r\n        this.button = document.createElement('div');\r\n        this.button.setAttribute('style', `\r\n            width: 70px;\r\n            height: 70px;\r\n            border-radius: 10px;\r\n            background: #00000024;\r\n            z-index: 99999999999999999999999;\r\n            position: absolute;\r\n            pointer-events: all;\r\n            box-shadow: inset 0px 0px 9px white;\r\n            ${this.alignment.slice(-4) === \"Left\" ? 'left' : 'right'}:${this.offset.x}px;\r\n            ${this.alignment.slice(3) === \"top\" ? 'top' : 'bottom'}:${this.offset.y}px;\r\n        `);\r\n        this.button.addEventListener('touchstart', () => {\r\n            this._state = true;\r\n\r\n        });\r\n        this.button.addEventListener('touchend', () => {\r\n            this._state = false;\r\n        });\r\n        this.ui.dom.appendChild(this.button);\r\n    }\r\n    private _state: boolean = false;\r\n    get value(): number {\r\n        return Number(this._state);\r\n    }\r\n}\r\n\r\nexport class TouchAxisReader extends InputReader<Vector2> {\r\n    shell: HTMLDivElement;\r\n    stick: HTMLDivElement;\r\n    private _dragging: boolean;\r\n    private _touchStart: Vector2;\r\n    constructor(public ui: UI, private alignment: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' = 'bottomLeft', private offset: Vector2 = v2(0), private limit: number = 20, private scale: Vector2 = v2(1)) {\r\n        super();\r\n        this.shell = document.createElement('div');\r\n        this.shell.setAttribute('style', `\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 100%;\r\n            background: #000000;\r\n            z-index: 99999999999999999999999;\r\n            position: absolute;\r\n            pointer-events: all;\r\n            ${this.alignment.slice(-4) === \"Left\" ? 'left' : 'right'}:${this.offset.x + 25}px;\r\n            ${this.alignment.slice(3) === \"top\" ? 'top' : 'bottom'}:${this.offset.y + 25}px;\r\n        `);\r\n\r\n        this.stick = document.createElement('div');\r\n        this.stick.setAttribute('style', `\r\n            width: 70px;\r\n            height: 70px;\r\n            border-radius: 100%;\r\n            background: #00000024;\r\n            z-index: 99999999999999999999999;\r\n            position: absolute;\r\n            pointer-events: all;\r\n            box-shadow: inset 0px 0px 9px white;\r\n            left: -25px;\r\n            top: -25px;\r\n        `);\r\n        // this.stick.addEventListener('touch');\r\n        this.stick.addEventListener('touchstart', (e) => {\r\n            this._dragging = true;\r\n            this._touchStart = v2(e.touches[0].screenX, e.touches[0].screenY);\r\n        });\r\n        this.stick.addEventListener('touchmove', (e) => {\r\n            if (this._dragging) {\r\n                const rel = v2(e.touches[0].screenX, e.touches[0].screenY).subtract(this._touchStart).clampMagnitude(this.limit);\r\n                this.stick.style.transform = `translate(${rel.x}px,${rel.y}px)`;\r\n                this._state = rel.scale(1 / this.limit).multiply(this.scale);\r\n            }\r\n        });\r\n        this.stick.addEventListener('touchend', () => {\r\n            this._dragging = false;\r\n            this._state = v2(0);\r\n            this.stick.style.transform = 'translate(0,0)';\r\n        });\r\n        this.ui.dom.appendChild(this.shell);\r\n        this.shell.appendChild(this.stick);\r\n    }\r\n    private _state: Vector2 = v2(0);\r\n    get value(): Vector2 {\r\n        return this._state;\r\n    }\r\n}\r\n\r\nexport class TouchLiniarAxisReader extends InputReader<Vector2> {\r\n    shell: HTMLDivElement;\r\n    stick: HTMLDivElement;\r\n    private _dragging: boolean;\r\n    private _touchStart: Vector2;\r\n    constructor(public ui: UI, private alignment: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' = 'bottomLeft', private offset: Vector2 = v2(0), private limit: number = 20, private scale: Vector2 = v2(1)) {\r\n        super();\r\n        this.shell = document.createElement('div');\r\n        this.shell.setAttribute('style', `\r\n            width: 20px;\r\n            height: 20px;\r\n            border-radius: 100%;\r\n            background: #000000;\r\n            z-index: 99999999999999999999999;\r\n            position: absolute;\r\n            pointer-events: all;\r\n            ${this.alignment.slice(-4) === \"Left\" ? 'left' : 'right'}:${this.offset.x + 25}px;\r\n            ${this.alignment.slice(3) === \"top\" ? 'top' : 'bottom'}:${this.offset.y + 25}px;\r\n        `);\r\n\r\n        this.stick = document.createElement('div');\r\n        this.stick.setAttribute('style', `\r\n            width: 70px;\r\n            height: 70px;\r\n            border-radius: 100%;\r\n            background: #00000024;\r\n            z-index: 99999999999999999999999;\r\n            position: absolute;\r\n            pointer-events: all;\r\n            box-shadow: inset 0px 0px 9px white;\r\n            left: -25px;\r\n            top: -25px;\r\n        `);\r\n        // this.stick.addEventListener('touch');\r\n        this.stick.addEventListener('touchstart', (e) => {\r\n            this._dragging = true;\r\n            this._touchStart = v2(e.touches[0].screenX, e.touches[0].screenY);\r\n        });\r\n        this.stick.addEventListener('touchmove', (e) => {\r\n            if (this._dragging) {\r\n                let direct = v2(e.touches[0].screenX, e.touches[0].screenY).subtract(this._touchStart).clampMagnitude(this.limit);\r\n                if (direct.magnitude() > this.limit / 4) {\r\n                    let rel = Vector2.right.rotate(Math.round(direct.angle() / Math.PI * 2) * Math.PI / 2);\r\n                    this.stick.style.transform = `translate(${rel.x * this.limit}px,${rel.y * this.limit}px)`;\r\n                    if (direct.magnitude() < this.limit / 2) {\r\n                        this._state = v2(0);\r\n                        this.stick.style.transform = `translate(${rel.x * this.limit / 2}px,${rel.y * this.limit / 2}px)`;\r\n                    } else {\r\n                        this._state = rel.multiply(this.scale).toPrecision(1);\r\n                        console.log(this._state);\r\n\r\n                        this.stick.style.transform = `translate(${rel.x * this.limit}px,${rel.y * this.limit}px)`;\r\n                    }\r\n                } else {\r\n                    this._state = v2(0);\r\n                    this.stick.style.transform = 'translate(0,0)';\r\n                }\r\n            }\r\n        });\r\n        this.stick.addEventListener('touchend', () => {\r\n            this._dragging = false;\r\n            this._state = v2(0);\r\n            this.stick.style.transform = 'translate(0,0)';\r\n        });\r\n        this.ui.dom.appendChild(this.shell);\r\n        this.shell.appendChild(this.stick);\r\n    }\r\n    private _state: Vector2 = v2(0);\r\n    get value(): Vector2 {\r\n        return this._state;\r\n    }\r\n}\r\n\r\n// export class TouchJoyStickReader extends InputReader<Vector2> {\r\n//     constructor(keys: [string, string, string, string]) {\r\n//         super();\r\n//         keys.forEach((k, i) => {\r\n//             glob.device.keyboard.register(\r\n//                 k,\r\n//                 () => { this._state[Math.floor(i / 2)][i % 2] = true; this.setVector(); },\r\n//                 () => { this._state[Math.floor(i / 2)][i % 2] = false; this.setVector(); }\r\n//             );\r\n//         });\r\n//     }\r\n\r\n//     private setVector() {\r\n//         this._vector = v2(\r\n//             -this._state[0][0] + +this._state[0][1],\r\n//             -this._state[1][0] + +this._state[1][1]\r\n//         );\r\n//     }\r\n\r\n//     private _state: [[boolean, boolean], [boolean, boolean]] = [[false, false], [false, false]];\r\n//     private _vector: Vector2 = v2(0);\r\n//     get value(): Vector2 {\r\n//         return this._vector;\r\n//     }\r\n// }\r\n", "import { Collider } from '../../classes/collider';\r\nimport { TestObj } from '../../classes/debug/testObj';\r\nimport { DomText } from '../../classes/dom/domText';\r\nimport { InputMap } from '../../classes/input/input';\r\nimport { MouseMoveReader, MouseScrollReader } from '../../classes/input/mouseReader';\r\nimport { KeyboardJoyStickReader, KeyboardReader } from '../../classes/input/keyboardReader';\r\nimport { Level } from '../../classes/level';\r\nimport { Light } from '../../classes/light';\r\nimport { Vector2, v2 } from '../../classes/math/vector2';\r\nimport { Vector3, v3 } from '../../classes/math/vector3';\r\nimport { ObjStorage } from '../../classes/objStorage';\r\nimport { GLCuboid } from '../../classes/objects/cuboid';\r\nimport { GLobj } from '../../classes/objects/obj';\r\nimport { TickerReturnData } from '../../classes/ticker';\r\nimport { Color } from '../../classes/util/colors';\r\nimport { Driver } from './car/car_actor';\r\nimport { Sky } from './entities/sky';\r\nimport { Player } from './player/player_actor';\r\nimport { Forrest } from './trees/forrest';\r\nimport { TouchAxisReader, TouchLiniarAxisReader } from '../../classes/input/touchReader';\r\n\r\nexport class World extends Level {\r\n    public start = Vector2.zero;\r\n    public background: Color = [1 * 0.07, 1 * 0.07, 1 * 0.1, 1];\r\n    public character: Player;\r\n    public mo: DomText;\r\n    public st: ObjStorage;\r\n    public driving: boolean;\r\n    public car: Driver;\r\n    public player: Player;\r\n    public sky: Sky;\r\n    public test: TestObj;\r\n    public light: Vector3 = v3(0, 400, 500);\r\n    public test2d: DomText;\r\n    public inputMap = new InputMap( \r\n        {\r\n            'camera': [new MouseMoveReader(), new TouchAxisReader(this.interface, 'bottomRight', v2(100,100), 40, v2(4))],\r\n            'movement': [new KeyboardJoyStickReader(['a', 'd', 's', 'w']), new TouchLiniarAxisReader(this.interface, 'bottomLeft', v2(100,100), 40, v2(1, -1))],\r\n        },\r\n        {\r\n            'jump': [new KeyboardReader(' '), ],\r\n            'aim': [new KeyboardReader('e')],\r\n            'zoom': [new MouseScrollReader()],\r\n        }\r\n    );\r\n    // new TouchButtonReader(this.interface)\r\n\r\n    constructor() {\r\n        super();\r\n        this.addControllers([\r\n            new Collider({\r\n                position: v3(-5000, -1000, -2000),\r\n                size: v3(10000, 1000, 4000),\r\n                fixed: true\r\n            }),\r\n            // new Collider({\r\n            //     position: v3(150, -6, 727),\r\n            //     size: v3(100, 20, 168),\r\n            //     fixed: true\r\n            // }),\r\n        ]);\r\n\r\n        this.test2d = new DomText({\r\n            position: v2(100, 100),\r\n            fontSize: 40,\r\n            fontFamily: 'monospace',\r\n            color: 'white',\r\n            text: '0'\r\n        });\r\n        // this.addUi(this.test2d);\r\n    }\r\n\r\n    keyDown(e: KeyboardEvent): void {\r\n        if (e.key === \"Enter\") {\r\n            this.drive();\r\n        }\r\n    }\r\n\r\n    drive(b: boolean = !this.driving) {\r\n        this.driving = b;\r\n        this.player.active = !this.driving;\r\n        this.car.active = this.driving;\r\n        if (this.driving) {\r\n            this.player.position = v3(0, -100, 0);\r\n        } else {\r\n            this.player.position = this.car.position.add(v3(10, 0, 0).rotateXZ(-this.car.rotation.xz.angle())).clone();\r\n        }\r\n    }\r\n\r\n    spawnTile(x: number, y: number) {\r\n        const p = v3(\r\n            200 * x - 2000,\r\n            -3,\r\n            200 * y - 100\r\n        );\r\n        if (Math.random() < 0.5) {\r\n            this.addChild(new GLobj({ url: 'CountrySide-3-GroundTile1.obj', size: v3(20, 20, 20), position: p }));\r\n        } else {\r\n            this.addChild(new GLobj({ url: 'CountrySide-2-GroundTile2.obj', size: v3(20, 20, 20), position: p }));\r\n        }\r\n\r\n        for (let rx = 0; rx < 5; rx++) {\r\n            for (let ry = 0; ry < 5; ry++) {\r\n                if (Math.random() < 0.1) {\r\n                    this.addChild(new GLobj({\r\n                        url: ['CountrySide-6-Vegetation5.obj', 'CountrySide-0-Vegetation3.obj', 'CountrySide-6-Vegetation5.obj', 'CountrySide-8-Rock.obj'][Math.floor(Math.random() * 4)],\r\n                        size: v3(\r\n                            10,\r\n                            10,\r\n                            10,\r\n                        ).scale(Math.ceil(Math.random() * 3)),\r\n                        position: p.add(v3(\r\n                            (40 * rx) + (Math.random() * 6),\r\n                            3,\r\n                            (40 * ry) + (Math.random() * 6) - 80\r\n                        )),\r\n                        rotation: v3(\r\n                            0,\r\n                            Math.floor(Math.random() * 4) * Math.PI,\r\n                            0,\r\n                        )\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    spawnRoad(x: number, y: number) {\r\n        if (Math.random() < 0.5) {\r\n            this.addChild(new GLobj({ url: 'apoc/VoxelNuke-18-RoadTile-1.obj', size: v3(100, 100, 100), position: v3(x * 200 - 2200, -6, y * 200 - 100) }));\r\n        } else {\r\n            this.addChild(new GLobj({ url: 'apoc/VoxelNuke-17-RoadTile-0.obj', size: v3(100, 100, 100), position: v3(x * 200 - 2000, -6, y * 200 - 100) }));\r\n        }\r\n        for (let i = 0; i < 6; i++) {\r\n            if (Math.random() < 0.2) {\r\n                this.addChild(new GLobj({ url: 'apoc/VoxelNuke-0-Overgrowth-0.obj', size: v3(50, 50, 50), position: v3(x * 200 - 2000 + (i * 33), -4, y * 200 - 55) }));\r\n            }\r\n            if (Math.random() < 0.2) {\r\n                this.addChild(new GLobj({ url: 'apoc/VoxelNuke-0-Overgrowth-0.obj', size: v3(50, 50, 50), position: v3(x * 200 - 2000 + (i * 33), -4, (y * 200) - 145), rotation: v3(0, Math.PI, 0) }));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    build() {\r\n        super.build();\r\n\r\n        // this.addChild(new NPC({\r\n        //     size: v3(6, 33, 8),\r\n        //     position: v3(220, 11, 736),\r\n        //     rotation: v3(0, Math.PI, 0)\r\n        // }));\r\n\r\n        this.player = new Player({\r\n            position: v3(0, 0, 650),\r\n            rotation: v3(0, 2.3, 0)\r\n        });\r\n        this.addChild(this.player);\r\n        // this.car = new Driver({\r\n        //     size: v3(36, 26, 93),\r\n        //     position: v3(130, 1, 600),\r\n        //     rotation: v3(0, 2.3, 0)\r\n        // });\r\n        // this.addChild(this.car);\r\n        // this.car.active = false;\r\n\r\n        this.addLight(new Light({\r\n            position: v3(0, 70, 100),\r\n            color: [0.9, 0.9, 0.85, 1],\r\n            specular: [0.3, 0.3, 0.3, 1],\r\n            limit: [10, 10.1],\r\n            range: [600, 1001],\r\n            direction: v3(0, 0, -1),\r\n        }));\r\n        this.addChild(new GLCuboid({ size: v3(10000, 1, 10000), position: v3(-5000, -6, -5000), colors: [[103 / 350, 119 / 350, 107 / 350, 1]] }));\r\n        for (let x = 0; x < 20; x++) {\r\n            for (let y = 0; y < 20; y++) {\r\n                this.spawnTile(x, y);\r\n                // if (y === 3) {\r\n                //     this.spawnRoad(x, y);\r\n                // } else {\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        // this.addChild(new GLobj({ url: 'CountrySide-5-House.obj', size: v3(18, 18, 18), position: v3(200, 43, 800), rotation: v3(0, -Math.PI / 2, 0) }));\r\n        // this.addChild(new GLobj({ url: 'CountrySide-4-Vegetation1.obj', size: v3(20, 20, 20), rotation: v3(0, Math.PI, 0), position: v3(-100 - 20, 5, 670) }));\r\n        // this.addChild(new GLobj({ url: 'CountrySide-4-Vegetation1.obj', size: v3(25, 25, 25), rotation: v3(0, 0, 0), position: v3(-20 - 20, 6, 760) }));\r\n        // this.addChild(new GLobj({ url: 'CountrySide-4-Vegetation1.obj', size: v3(25, 25, 25), rotation: v3(0, Math.PI / 2, 0), position: v3(0 - 20, 3, 670) }));\r\n        // this.addChild(new GLobj({ url: 'Plane01.obj', size: v3(30, 30, 30), position: v3(420, 16, 720), rotation: v3(0, Math.PI / 4 + Math.PI / 2, -0.12) }));\r\n\r\n        // this.addChild(new GLobj({\r\n        //     controllers: [new Collider({\r\n        //         size: v3(97, 200, 98),\r\n        //         position: v3(-144, 0, 143),\r\n        //         fixed: true\r\n        //     }),\r\n        //     new Collider({\r\n        //         size: v3(97-30, 20, 98),\r\n        //         position: v3(-144+15, 0, 122),\r\n        //         fixed: true\r\n        //     })], url: 'Medieval Town - Pack 1-0.obj', size: v3(10, 10, 10), position: v3(0, -1, 500)\r\n        // }));\r\n\r\n        this.addChild(new Forrest({\r\n            storage: this.mode.storage,\r\n            position: v3(-2000, 0, 800),\r\n            area: v2(4000, 2000),\r\n            density: 0.003\r\n        }));\r\n        this.addChild(new Forrest({\r\n            storage: this.mode.storage,\r\n            position: v3(-2000, 0, -1800),\r\n            area: v2(4000, 2000),\r\n            density: 0.003\r\n        }));\r\n        this.addChild(new Forrest({\r\n            storage: this.mode.storage,\r\n            position: v3(-2300, 0, -1800),\r\n            area: v2(2000, 4000),\r\n            density: 0.003\r\n        }));\r\n        this.addChild(new Forrest({\r\n            storage: this.mode.storage,\r\n            position: v3(300, 0, -1800),\r\n            area: v2(2000, 4000),\r\n            density: 0.003\r\n        }));\r\n\r\n        // this.addChild(new GLobj({\r\n        //     controllers: [new Collider({\r\n        //         size: v3(97, 200, 98),\r\n        //         position: v3(-144 + 97, 0, 143),\r\n        //         fixed: true\r\n        //     })], url: 'Medieval Town - Pack 1-1.obj', size: v3(10, 10, 10), position: v3(0, -1, 500)\r\n        // }));\r\n        // this.addChild(new GLobj({\r\n        //     controllers: [new Collider({\r\n        //         size: v3(97, 200, 98),\r\n        //         position: v3(-144 - 97, 0, 143),\r\n        //         fixed: true\r\n        //     })], url: 'Medieval Town - Pack 1-2.obj', size: v3(10, 10, 10), position: v3(0, -1, 500)\r\n        // }));\r\n        // this.addChild(new GLobj({ controllers: [new Collider({\r\n        //     size: v3(190, 200, 150),\r\n        //     position: v3(-90, 0, 153),\r\n        //     fixed: true\r\n        // })], url: 'Nuclear Survival - Pack 6 - m.obj', size: v3(10, 10, 10), position: v3(0, -6, 300), rotation: v3(0, -Math.PI / 2, 0) }));\r\n\r\n        // this.addChild(this.test = new TestObj({ size: v3(1, 1, 1) }));\r\n\r\n\r\n        // this.sky = this.addChild(new Sky()) as Sky;\r\n\r\n        // console.log(glob);\r\n\r\n\r\n    }\r\n\r\n    public tick(obj: TickerReturnData): void {\r\n        super.tick(obj);\r\n        // this.test2d.text = this.player.globalPosition.vec.map((v) => +v.toFixed(0)).join('\\n');\r\n        // console.log(this.inputMap.axis('camera'));\r\n        \r\n    }\r\n\r\n\r\n}", "import { Mode } from '../classes/mode';\r\nimport { World } from './side/level';\r\n\r\nexport class OpenWorldMode extends Mode{\r\n    build(){\r\n        super.build();\r\n        this.addLevel('openWorld', new World());\r\n        this.switchLevel('openWorld');\r\n    }\r\n}", "import { FPS } from './classes/debug/fps';\r\nimport { Loader } from './classes/debug/loader';\r\nimport { Renderer } from './classes/dom/renderer';\r\nimport { PadManager } from './classes/input/gamepadManager';\r\nimport { InputDevices } from './classes/input/inputDevices';\r\nimport { Level } from './classes/level';\r\nimport { Mode } from './classes/mode';\r\nimport { GLRenderer } from './classes/rendering/glRenderer';\r\nimport { Ticker, TickerReturnData } from './classes/ticker';\r\nimport { OpenWorldMode } from './modes/mode';\r\n\r\n\r\nexport var glob = new class{\r\n    public game: Game;\r\n    public get renderer(){\r\n        return this.game.renderer;\r\n    }\r\n    public get mode(){\r\n        return this.game.active.mode;\r\n    }\r\n    public get level(){\r\n        return this.game.active.level;\r\n    }\r\n    public get storage() {\r\n        return this.mode.storage\r\n    }\r\n    public device: InputDevices = new InputDevices();\r\n    public get mobile():boolean {\r\n        return this.device.mobile\r\n    } \r\n}\r\n\r\nexport class Game {\r\n    public ticker: Ticker;\r\n    public renderer: Renderer;\r\n    private fps: FPS;\r\n    public modes: Record<string, Mode> = {};\r\n    public readyToStart: boolean = false;\r\n    private _waitCount: number = 0;\r\n    private started: boolean = false;\r\n    private loader: Loader;\r\n    public total: number = 0;\r\n    public padManager: PadManager = new PadManager();\r\n    public GLR: GLRenderer;\r\n    public active: {\r\n        mode: Mode,\r\n        level: Level,\r\n    } = {\r\n        mode: undefined,\r\n        level: undefined,\r\n    };\r\n    get t(): TickerReturnData {\r\n        return this.renderer.tickerData;\r\n    }\r\n    public get waitCount(): number {\r\n        return this._waitCount;\r\n    }\r\n    public set waitCount(value: number) {\r\n        if (value > this._waitCount) {\r\n            this.total++;\r\n        }\r\n        if (!this.started) {\r\n            if (value === 0 && this.readyToStart) {\r\n                this.start();\r\n            } else {\r\n                this.loader.update(value, this.total);\r\n            }\r\n        }\r\n        this._waitCount = value;\r\n\r\n    }\r\n\r\n    public constructor() {\r\n        glob.game = this;\r\n        this.build();\r\n        glob.device.ready();\r\n    }\r\n    build() {\r\n        this.renderer = new Renderer();\r\n\r\n        this.loader = new Loader();\r\n        this.renderer.addChild(this.loader);\r\n\r\n        this.GLR = new GLRenderer(this);\r\n        this.setupModes();\r\n\r\n        this.ticker = new Ticker();\r\n        this.ticker.add(this.tick.bind(this));\r\n        this.debug();\r\n        this.fps.visible = false;\r\n\r\n        if (this.waitCount === 0) {\r\n            this.start();\r\n        } else {\r\n            this.readyToStart = true;\r\n        }\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        this.renderer.tick(obj);\r\n    }\r\n\r\n    private setupModes() {\r\n        this.addMode('side', new OpenWorldMode());\r\n        this.switchMode('side');\r\n    }\r\n\r\n    private debug() {\r\n        this.fps = new FPS();\r\n        this.renderer.appendChild(this.fps);\r\n        this.ticker.add(this.fps.tick.bind(this.fps));\r\n    }\r\n\r\n    protected addMode(s: string, mode: Mode) {\r\n        this.modes[s] = mode;\r\n        this.renderer.addMode(mode);\r\n    }\r\n\r\n    public switchMode(s: string) {\r\n        document.title = s;\r\n        this.active.mode = this.modes[s];\r\n        Object.entries(this.modes).forEach(([key, mode]) => {\r\n            mode.active = key === s;\r\n        });\r\n    }\r\n\r\n    public get mode(): Mode {\r\n        return this.active.mode;\r\n    }\r\n    public get level(): Level {\r\n        return this.active.level;\r\n    }\r\n    public get gl(): WebGLRenderingContext {\r\n        return this.GLR.gl;\r\n    }\r\n\r\n    public start() {\r\n        this.started = true;\r\n        this.loader.visible = false;\r\n        this.fps.visible = true;\r\n        this.ticker.start();\r\n    }\r\n}\r\n\r\n\r\n", "import { Game } from \"./game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\r\n    const g = new Game();\r\n    document.body.appendChild(g.renderer.dom);\r\n});"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAYO,IAAe,UAAf,MAAuB;AAAA,EAAvB;AAGH,SAAQ,SAA4B,CAAC;AAAA;AAAA,EAErC,IAAI,IAAsB;AACtB,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EAIA,IAAW,OAAa;AACpB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,IAAW,OAAa;AACpB,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAW,QAAe;AACtB,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAW,MAAoB;AAC3B,WAAO,KAAK,KAAK,IAAI;AAAA,EACzB;AAAA,EACA,IAAW,MAAkB;AACzB,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAW,KAA2B;AAClC,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EAEO,QAAe;AAAA,EAEtB;AAAA,EAEA,SAAS,GAAoB;AACzB,SAAK,OAAO,KAAK,CAAC;AAAA,EACtB;AAAA,EAEA,SAAS,IAAY;AACjB,WAAO,KAAK,OAAO,KAAK,CAAC,MAAI,OAAO,EAAE,EAAE;AAAA,EAC5C;AACJ;;;ACtDO,SAAS,GAAG,GAA+B,GAAY;AAC7D,MAAI,OAAO,MAAM,UAAU;AAC1B,WAAO,QAAQ,EAAE,GAAG,CAAC;AAAA,EACtB,WAAW,OAAO,MAAM,aAAa;AACpC,WAAO,QAAQ,EAAE,CAAC;AAAA,EACnB,OAAO;AACN,WAAO,QAAQ,EAAE,GAAG,CAAC;AAAA,EACtB;AACD;AAEO,IAAM,UAAN,MAAM,SAAQ;AAAA,EAIpB,YAAY,GAAW,GAAW;AACjC,SAAK,IAAK,MAAM,SAAa,IAAI;AACjC,SAAK,IAAK,MAAM,SAAa,IAAI;AAAA,EAClC;AAAA,EAEA,OAAO,EAAE,IAAY,GAAG,IAAY,GAAG;AACtC,WAAO,IAAI,SAAQ,GAAG,CAAC;AAAA,EACxB;AAAA,EAEA,SAAkB;AACjB,WAAQ,KAAK,MAAM,KAAK,KAAK,MAAM;AAAA,EACpC;AAAA,EAEA,QAAiB;AAChB,WAAO,IAAI,SAAQ,KAAK,GAAG,KAAK,CAAC;AAAA,EAClC;AAAA,EAEA,IAAI,QAAiB;AACpB,WAAO,IAAI,SAAQ,KAAK,IAAI,OAAO,GAAG,KAAK,IAAI,OAAO,CAAC;AAAA,EACxD;AAAA,EAEA,SAAS,QAAiB;AACzB,WAAO,IAAI,SAAQ,KAAK,IAAI,OAAO,GAAG,KAAK,IAAI,OAAO,CAAC;AAAA,EACxD;AAAA,EAEA,SAAS,QAAiB;AACzB,WAAO,IAAI,SAAQ,KAAK,IAAI,OAAO,GAAG,KAAK,IAAI,OAAO,CAAC;AAAA,EACxD;AAAA,EAEA,MAAM,QAAgB;AACrB,WAAO,IAAI,SAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,MAAM;AAAA,EACpD;AAAA,EAEA,IAAI,QAAiB;AACpB,WAAQ,KAAK,IAAI,OAAO,IAAI,KAAK,IAAI,OAAO;AAAA,EAC7C;AAAA,EAEA,YAAY,QAAiB,GAAW;AACvC,QAAI,KAAK,IAAI,GAAG,CAAC;AACjB,QAAI,OAAO,OAAO,SAAS,IAAI;AAC/B,WAAO,KAAK,IAAI,KAAK,MAAM,CAAC,CAAC;AAAA,EAC9B;AAAA,EAEA,YAAY;AACX,WAAO,KAAK,KAAK,KAAK,aAAa,CAAC;AAAA,EACrC;AAAA,EAEA,eAAe;AACd,WAAQ,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA,EACzC;AAAA,EAEA,eAAgB,MAAa,GAAI;AAChC,WAAO,KAAK,MAAO,IAAG,KAAK,UAAU,KAAK,CAAE,EAAE,MAAO,KAAK,IAAK,KAAK,KAAK,UAAU,CAAE,CAAE;AAAA,EACxF;AAAA,EAEA,SAAS,QAAiB;AACzB,WAAO,KAAK,KAAK,KAAK,YAAY,MAAM,CAAC;AAAA,EAC1C;AAAA,EAEA,YAAY,QAAiB;AAC5B,QAAI,SAAS,KAAK,IAAI,OAAO;AAC7B,QAAI,SAAS,KAAK,IAAI,OAAO;AAC7B,WAAQ,SAAS,SAAS,SAAS;AAAA,EACpC;AAAA,EAEA,YAAY;AACX,QAAI,MAAM,KAAK,UAAU;AACzB,QAAI,SAAS,KAAK,MAAM;AACxB,QAAI,KAAK,IAAI,GAAG,IAAI,MAAM;AACzB,aAAO,IAAI;AACX,aAAO,IAAI;AAAA,IACZ,OAAO;AACN,aAAO,KAAK;AACZ,aAAO,KAAK;AAAA,IACb;AACA,WAAO;AAAA,EACR;AAAA,EAEA,eAAe;AACd,WAAO,KAAK,MAAM,KAAK,MAAI,KAAK;AAAA,EACjC;AAAA,EAEA,QAAQ;AACP,WAAO,KAAK,MAAM,KAAK,GAAG,KAAK,CAAC;AAAA,EACjC;AAAA,EAGA,OAAO,KAAa;AACnB,QAAI,MAAM,KAAK,IAAI,GAAG;AACtB,QAAI,MAAM,KAAK,IAAI,GAAG;AACtB,WAAO,IAAI;AAAA,MACV,KAAK,IAAI,MAAM,KAAK,IAAI;AAAA,MACxB,KAAK,IAAI,MAAM,KAAK,IAAI;AAAA,IACzB;AAAA,EACD;AAAA,EAEA,YAAY,WAAmB;AAC9B,QAAI,SAAS,KAAK,MAAM;AACxB,WAAO,IAAI,CAAC,OAAO,EAAE,QAAQ,SAAS;AACtC,WAAO,IAAI,CAAC,OAAO,EAAE,QAAQ,SAAS;AACtC,WAAO;AAAA,EACR;AAAA,EAEA,WAAW;AACV,QAAI,SAAS,KAAK,YAAY,CAAC;AAC/B,WAAQ,MAAM,OAAO,IAAI,OAAO,OAAO,IAAI;AAAA,EAC5C;AAAA,EAEO,MAAM,KAAa,KAAa;AACtC,WAAO,SAAQ,MAAM,MAAM,KAAK,GAAG;AAAA,EACjC;AAAA,EAEH,OAAc,IAAI,GAAW,GAAW;AACjC,WAAO,IAAI;AAAA,MAChB,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC;AAAA,MACjB,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC;AAAA,IAClB;AAAA,EACE;AAAA,EAEH,OAAc,IAAI,GAAW,GAAW;AACvC,WAAO,IAAI;AAAA,MACV,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC;AAAA,MACjB,KAAK,IAAI,EAAE,GAAG,EAAE,CAAC;AAAA,IAClB;AAAA,EACE;AAAA,EAEH,OAAc,MAAM,OAAe,KAAa,KAAa;AACtD,WAAO,SAAQ,IAAI,SAAQ,IAAI,OAAO,GAAG,GAAG,GAAG;AAAA,EACnD;AAAA,EAEI,eAAe,KAAa;AAClC,WAAO,SAAQ,eAAe,MAAM,GAAG;AAAA,EACrC;AAAA,EAEH,IAAI,QAAQ;AACX,WAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAAA,EACvB;AAAA,EAEA,IAAI,MAAM,GAAqB;AAC9B,KAAC,KAAK,GAAG,KAAK,CAAC,IAAI;AAAA,EACpB;AAAA,EAEA,IAAI,cAAqB;AACxB,WAAO,KAAK,IAAE,KAAK;AAAA,EACpB;AAAA,EAGA,OAAc,eAAe,OAAe,KAAa;AACxD,QAAI,QAAQ,MAAM,UAAU,IAAI;AAChC,WAAO,IAAI,SAAQ,MAAM,IAAI,OAAO,MAAM,IAAI,KAAK;AAAA,EACjD;AAAA,EAEH,WAAW,OAAO;AACjB,WAAO,IAAI,SAAQ,GAAG,CAAC;AAAA,EACxB;AAAA,EACA,WAAW,OAAO;AACjB,WAAO,IAAI,SAAQ,GAAG,EAAE;AAAA,EACzB;AAAA,EACA,WAAW,KAAK;AACf,WAAO,IAAI,SAAQ,GAAG,CAAC;AAAA,EACxB;AAAA,EACA,WAAW,QAAQ;AAClB,WAAO,IAAI,SAAQ,GAAG,CAAC;AAAA,EACxB;AAAA,EACA,WAAW,OAAO;AACjB,WAAO,IAAI,SAAQ,IAAI,CAAC;AAAA,EACzB;AAAA,EACA,WAAW,aAAa;AACvB,WAAO,IAAI,SAAQ,GAAG,CAAC;AAAA,EACxB;AACD;;;AC7KO,IAAM,aAAN,cAAgE,QAAQ;AAAA,EAoE3E,YAAY,MAAS,OAA6B,CAAC,GAAG;AAClD,UAAM;AAnEV,SAAO,WAA8B,CAAC;AACtC,SAAO,eAAe;AACtB,SAAQ,YAAqB,GAAG,CAAC;AASjC,SAAO,OAAgB,GAAG,CAAC;AAyDvB,SAAK,MAAM,SAAS,cAAc,IAAI;AACtC,SAAK,IAAI,MAAM,WAAW;AAC1B,SAAK,IAAI,MAAM,kBAAkB;AACjC,SAAK,IAAI,MAAM,gBAAgB;AAC/B,SAAK,IAAI,MAAM,SAAS;AACxB,SAAK,KAAK,KAAK,MAAM;AACrB,SAAK,aAAa,KAAK,cAAc;AACrC,SAAK,OAAO,KAAK,QAAQ,QAAQ;AACjC,SAAK,WAAW,KAAK,YAAY,QAAQ;AAAA,EAE7C;AAAA,EA3EA,IAAW,WAAoB;AAC3B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,SAAS,OAAgB;AAChC,SAAK,YAAY;AACjB,SAAK,IAAI,MAAM;AACf,SAAK,IAAI,MAAM;AAAA,EACnB;AAAA,EAGA,IAAW,KAAK;AAAE,WAAO,KAAK,IAAI;AAAA,EAAI;AAAA,EAEtC,IAAW,GAAG,OAAe;AACzB,QAAI,OAAO;AACP,WAAK,IAAI,KAAK;AAAA,IAClB;AAAA,EACJ;AAAA,EAEA,IAAW,IAAY;AACnB,WAAO,KAAK,MAAM,OAAO,KAAK,IAAI,MAAM,KAAK,QAAQ,OAAM,EAAE,CAAC,CAAC;AAAA,EACnE;AAAA,EACA,IAAW,EAAE,GAAW;AACpB,QAAI,KAAK,KAAI;AACT,WAAK,IAAI,MAAM,OAAO,GAAG,UAAC;AAAA,IAC9B;AAAA,EACJ;AAAA,EACA,IAAW,IAAY;AACnB,WAAO,KAAK,MAAM,OAAO,KAAK,IAAI,MAAM,OAAO,QAAQ,OAAM,EAAE,CAAC,CAAC;AAAA,EACrE;AAAA,EACA,IAAW,EAAE,GAAW;AACpB,QAAI,KAAK,KAAI;AACT,WAAK,IAAI,MAAM,SAAS,GAAG,UAAC;AAAA,IAChC;AAAA,EACJ;AAAA,EAEA,IAAW,QAAQ,OAAgB;AAC/B,SAAK,MAAK,KAAK,IAAI,MAAM,UAAU,QAAQ,UAAU,SAAQ;AAAA,EACjE;AAAA,EAEA,IAAW,WAAW,GAAW;AAC7B,SAAK,IAAI,MAAM,aAAa;AAAA,EAChC;AAAA,EAEA,IAAW,QAAQ;AACf,WAAO,KAAK,MAAM,OAAO,KAAK,IAAI,MAAM,MAAM,QAAQ,OAAM,EAAE,CAAC,CAAC;AAAA,EACpE;AAAA,EACA,IAAW,MAAM,OAAe;AAC5B,QAAI,KAAK,KAAK;AACV,WAAK,IAAI,MAAM,QAAQ,GAAG,cAAK;AAC/B,WAAK,IAAI,aAAa,SAAS,OAAO,KAAK,CAAC;AAAA,IAChD;AAAA,EACJ;AAAA,EAEA,IAAW,SAAS;AAChB,WAAO,KAAK,MAAM,OAAO,KAAK,IAAI,MAAM,OAAO,QAAQ,OAAM,EAAE,CAAC,CAAC;AAAA,EACrE;AAAA,EACA,IAAW,OAAO,OAAe;AAC7B,QAAI,KAAK,KAAK;AACV,WAAK,IAAI,MAAM,SAAS,GAAG,cAAK;AAChC,WAAK,IAAI,aAAa,UAAU,OAAO,KAAK,CAAC;AAAA,IACjD;AAAA,EACJ;AAAA,EAgBO,QAAQ;AACX,SAAK,MAAM;AAAA,EACf;AAAA,EAEO,KAAK,KAA6B;AACrC,SAAK,SAAS,QAAQ,CAAC,MAAI;AACvB,QAAE,KAAK,GAAG;AAAA,IACd,CAAC;AAAA,EACL;AAAA,EAEO,YAAY,GAAoB;AACnC,SAAK,IAAI,YAAY,EAAE,GAAG;AAAA,EAC9B;AAAA,EAEO,SAAS,OAAwB;AACpC,SAAK,SAAS,KAAK,KAAK;AACxB,SAAK,IAAI,YAAY,MAAM,GAAG;AAAA,EAClC;AAAA,EAGA,iBAAiB,MAAc,UAA8C,SAAmD;AAC5H,SAAK,IAAI,iBAAiB,MAAM,UAAU,OAAO;AAAA,EACrD;AAAA,EAEA,oBAAoB,MAAc,UAA8C,SAAgD;AAC5H,SAAK,IAAI,oBAAoB,MAAM,UAAU,OAAO;AAAA,EACxD;AAIJ;;;ACjHO,IAAM,UAAN,cAAsB,WAAkB;AAAA,EAC3C,IAAI,MAAO,GAAW;AAClB,SAAK,IAAI,MAAM,QAAQ;AAAA,EAC3B;AAAA,EACA,IAAI,SAAU,GAAW;AACrB,SAAK,IAAI,MAAM,WAAW,OAAO,CAAC,IAAE;AAAA,EACxC;AAAA,EACA,IAAI,WAAY,GAAW;AACvB,SAAK,IAAI,MAAM,aAAa,OAAO,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,WAAY,GAAW;AACvB,SAAK,IAAI,MAAM,aAAa;AAAA,EAChC;AAAA,EACA,IAAW,OAAO;AACd,WAAO,KAAK,IAAI;AAAA,EACpB;AAAA,EACA,IAAW,KAAM,GAAW;AACxB,SAAK,IAAI,YAAY,IAAE,IAAE;AAAA,EAC7B;AAAA,EACA,IAAW,QAAS,GAAkC;AAClD,SAAK,IAAI,MAAM,UAAU,EAAE,KAAK,KAAK,IAAE;AAAA,EAC3C;AAAA,EACO,YAAY,OAA0B,CAAC,GAAG;AAC7C,UAAM,OAAO,IAAI;AACjB,SAAK,QAAQ,KAAK;AAClB,SAAK,OAAO,KAAK;AACjB,SAAK,WAAW,KAAK;AACrB,SAAK,aAAa,KAAK;AACvB,SAAK,aAAa,KAAK;AACvB,SAAK,UAAU,KAAK,WAAW,CAAC,GAAE,GAAE,GAAE,CAAC;AAEvC,SAAK,IAAI,MAAM,gBAAgB;AAC/B,SAAK,IAAI,MAAM,aAAa;AAC5B,SAAK,IAAI,MAAM,SAAS;AACxB,SAAK,IAAI,MAAM,aAAa;AAAA,EAChC;AACJ;;;ACzCO,IAAM,MAAN,MAAM,aAAY,QAAQ;AAAA,EAGtB,cAAe;AAClB,UAAM;AAAA,MACF,MAAM,KAAI,UAAU,EAAE;AAAA,MACtB,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,UAAU,IAAI,QAAQ,GAAE,CAAC;AAAA,MACzB,MAAM,IAAI,QAAQ,KAAK,EAAE;AAAA,MACzB,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,SAAS,CAAC,GAAE,IAAG,GAAE,EAAE;AAAA,IACvB,CAAC;AAbL,SAAQ,SAAiB;AACzB,SAAQ,SAAiB;AAAA,EAazB;AAAA,EAEO,KAAK,EAAC,WAAW,MAAK,GAAoB;AAC7C,QAAI,QAAQ,QAAQ,GAAE;AAClB,WAAK,OAAO,KAAI,UAAU,UAAU,QAAQ,CAAC,CAAC;AAAA,IAClD;AAAA,EACJ;AAAA,EAEA,OAAc,UAAU,GAAU;AAC9B,WAAO,GAAG,cAAO,CAAC,GAAC;AAAA,EACvB;AACJ;;;AC1BO,IAAM,SAAN,cAAqB,WAAkB;AAAA,EAInC,cAAe;AAClB,UAAM,OAAM;AAAA,MACR,UAAU,IAAI,QAAQ,GAAG,CAAC;AAAA,MAC1B,MAAM,IAAI,QAAQ,KAAK,EAAE;AAAA,MACzB,YAAY;AAAA,IAChB,CAAC;AAED,SAAK,MAAM,IAAI,WAAW,OAAO;AAAA,MAC7B,MAAM,IAAI,QAAQ,KAAK,EAAE;AAAA,MACzB,YAAY;AAAA,IAChB,CAAC;AACD,SAAK,IAAI,YAAY,KAAK,IAAI,GAAG;AAEjC,SAAK,OAAO,IAAI,QAAQ;AAAA,MACpB,MAAM;AAAA,MACN,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,MAAM,IAAI,QAAQ,KAAK,EAAE;AAAA,MACzB,UAAU,IAAI,QAAQ,IAAI,GAAG;AAAA,MAC7B,YAAY;AAAA,IAChB,CAAC;AACD,SAAK,IAAI,YAAY,KAAK,KAAK,GAAG;AAAA,EACtC;AAAA,EAEO,OAAO,OAAe,OAAc;AACvC,SAAK,KAAK,OAAO,UAAU,eAAQ,OAAK,YAAW,cAAK;AACxD,SAAK,IAAI,QAAQ,OAAO,QAAQ,SAAS;AAAA,EAC7C;AACJ;;;ACrCO,IAAM,SAAN,MAAgB;AAAA,EAGnB,YAAY,IAAY;AADxB,SAAQ,cAAgD,CAAC;AAErD,SAAK,KAAK;AAAA,EACd;AAAA,EAEO,UAAU,KAAa,MAAwB;AAClD,SAAK,YAAY,GAAG,IAAI;AAAA,EAC5B;AAAA,EAEO,MAAM,GAAM;AACf,WAAO,OAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,MAAM;AAC3C,QAAE,CAAC;AAAA,IACP,CAAC;AAAA,EACL;AACJ;;;ACHO,IAAM,WAAN,cAAuB,WAAqB;AAAA,EAG/C,cAAc;AACV,UAAM,QAAQ;AACd,SAAK,IAAI,MAAM,WAAW;AAC1B,SAAK,IAAI,MAAM,gBAAgB;AAC/B,SAAK,IAAI,MAAM,SAAS;AACxB,SAAK,IAAI,MAAM,cAAc;AAC7B,SAAK,IAAI,WAAW;AAEpB,WAAO,iBAAiB,UAAU,MAAM;AACpC,WAAK,OAAO;AAAA,IAChB,CAAC;AAED,SAAK,SAAS,IAAI,OAAO,QAAQ,CAAC;AAClC,SAAK,OAAO;AAAA,EAChB;AAAA,EAEA,SAAS;AACL,SAAK,OAAO,GAAG,SAAS,KAAK,aAAa,SAAS,KAAK,YAAY;AACpE,SAAK,IAAI,MAAM,QAAQ,GAAG,YAAK,KAAK,GAAC;AACrC,SAAK,IAAI,aAAa,SAAS,OAAO,KAAK,KAAK,CAAC,CAAC;AAElD,SAAK,IAAI,MAAM,SAAS,GAAG,YAAK,KAAK,GAAC;AACtC,SAAK,IAAI,aAAa,UAAU,OAAO,KAAK,KAAK,CAAC,CAAC;AAEnD,SAAK,SAAS,QAAQ,EAAE,MAAM,KAAK,IAAI;AAAA,EAE3C;AAAA,EAEA,IAAW,QAAQ;AACf,WAAO,KAAK,MAAM,OAAO,KAAK,IAAI,MAAM,MAAM,QAAQ,OAAO,EAAE,CAAC,CAAC;AAAA,EACrE;AAAA,EACA,IAAW,MAAM,OAAe;AAC5B,SAAK,IAAI,MAAM,QAAQ,GAAG,cAAK;AAC/B,SAAK,IAAI,aAAa,SAAS,OAAO,KAAK,CAAC;AAAA,EAChD;AAAA,EAEA,IAAW,SAAS;AAChB,WAAO,KAAK,MAAM,OAAO,KAAK,IAAI,MAAM,OAAO,QAAQ,OAAO,EAAE,CAAC,CAAC;AAAA,EACtE;AAAA,EACA,IAAW,OAAO,OAAe;AAC7B,SAAK,IAAI,MAAM,SAAS,GAAG,cAAK;AAChC,SAAK,IAAI,aAAa,UAAU,OAAO,KAAK,CAAC;AAAA,EACjD;AAAA,EAEO,QAAQ,OAAa;AACxB,UAAM,MAAM;AAAA,EAChB;AAAA,EAGA,IAAW,UAAuB;AAC9B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,QAAQ,OAAoB;AACnC,SAAK,WAAW;AAAA,EACpB;AAAA,EAEO,KAAK,KAAuB;AAC/B,UAAM,KAAK,GAAG;AACd,SAAK,aAAa;AAClB,SAAK,KAAK,IAAI,KAAK;AACnB,SAAK,KAAK,KAAK,KAAK,GAAG;AAAA,EAC3B;AACJ;;;AC/EO,IAAM,MAAN,MAAU;AAAA,EAEb,YAAmB,SAAiB;AAAjB;AAAA,EAEnB;AAAA,EAEA,OAAO;AACH,SAAK,YAAY,UAAU,YAAY,EAAE,KAAK,CAAC,MAAI,EAAE,OAAO,KAAK,QAAQ,EAAE;AAAA,EAG/E;AACJ;;;ACTO,IAAM,aAAN,MAAiB;AAAA,EAEpB,cAAc;AADd,SAAQ,OAA4B,CAAC;AAEjC,WAAO,iBAAiB,oBAAoB,KAAK,QAAQ,KAAK,IAAI,CAAC;AACnE,WAAO,iBAAiB,uBAAuB,KAAK,WAAW,KAAK,IAAI,CAAC;AAAA,EAC7E;AAAA,EACA,QAAQ,GAAiB;AACrB,SAAK,KAAK,EAAE,QAAQ,EAAE,IAAI,IAAI,IAAI,EAAE,OAAO;AAAA,EAC/C;AAAA,EACA,WAAW,GAAiB;AACxB,WAAO,KAAK,KAAK,EAAE,QAAQ,EAAE;AAAA,EACjC;AAAA,EACA,OAAO;AAGH,WAAO,OAAO,KAAK,IAAI,EAAE,QAAQ,CAAC,QAAM;AACpC,UAAI,KAAK;AAAA,IACb,CAAC;AAAA,EACL;AACJ;;;AClBO,IAAM,WAAN,MAAe;AAAA,EAAf;AAEH,SAAQ,UAAwC,CAAC;AACjD,SAAQ,QAAsC,CAAC;AAAA;AAAA,EAE/C,QAAQ;AACJ,SAAK,SAAS,IAAI,iBAAiB,WAAW,CAAC,MAAM;AAT7D;AAUY,YAAM,IAAI,EAAE,IAAI,YAAY;AAC5B,iBAAK,QAAQ,CAAC,MAAd,mBAAiB,QAAQ,CAAC,MAAM;AAC5B,UAAE;AAAA,MACN;AAAA,IACJ,CAAC;AACD,SAAK,SAAS,IAAI,iBAAiB,SAAS,CAAC,MAAM;AAf3D;AAgBY,YAAM,IAAI,EAAE,IAAI,YAAY;AAC5B,iBAAK,MAAM,CAAC,MAAZ,mBAAe,QAAQ,CAAC,MAAM;AAC1B,UAAE;AAAA,MACN;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEA,SAAS,KAAa,MAAkB,IAAgB;AACpD,UAAM,IAAI,IAAI,YAAY;AAE1B,QAAI,KAAK,QAAQ,CAAC;AAAG,WAAK,QAAQ,CAAC,EAAE,KAAK,IAAI;AAAA;AACzC,WAAK,QAAQ,CAAC,IAAI,CAAC,IAAI;AAE5B,QAAI,KAAK,MAAM,CAAC;AAAG,WAAK,MAAM,CAAC,EAAE,KAAK,EAAE;AAAA;AACnC,WAAK,MAAM,CAAC,IAAI,CAAC,EAAE;AAAA,EAC5B;AACJ;AAEO,IAAM,eAAN,MAAmB;AAAA,EAYtB,cAAc;AAXd,SAAO,WAAqB,IAAI,SAAS;AAYrC,SAAK,UAAU,IAAI,QAAQ;AAAA,MACvB,MAAM;AAAA,IACV,CAAC;AACD,SAAK,QAAQ,IAAI;AAAA,MAAa;AAAA,MAAS;AAAA,IAkBvC;AAAA,EACJ;AAAA,EA9BA,IAAW,SAAkB;AACzB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,OAAO,OAAgB;AAC9B,SAAK,UAAU;AACf,SAAK,QAAQ,IAAI,MAAM,UAAU,CAAC,QAAQ,UAAU;AAAA,EACxD;AAAA,EA0BA,QAAQ;AACJ,WAAO,iBAAiB,eAAe,CAAC,MAAM,EAAE,eAAe,CAAC;AAEhE,SAAK,SAAS,iEAAiE,KAAK,UAAU,SAAS;AACvG,QAAI,KAAK,QAAQ;AAEb,WAAK,SAAS;AAAA,IAElB,OAAO;AACH,WAAK,SAAS,IAAI,iBAAiB,SAAS,CAAC,MAAM;AAC/C,YAAI,CAAC,KAAK,QAAQ;AACd,eAAK,SAAS,IAAI,mBAAmB;AAAA,QACzC;AAAA,MACJ,CAAC;AAED,eAAS,iBAAiB,qBAAqB,MAAM;AACjD,aAAK,SAAU,SAAS,uBAAuB,KAAK,SAAS;AAAA,MACjE,CAAC;AACD,eAAS,KAAK,YAAY,KAAK,QAAQ,GAAG;AAAA,IAE9C;AACA,SAAK,SAAS,MAAM;AAAA,EACxB;AACJ;;;AC9FA,IAAO,0BAAQ;;;ACAf,IAAO,4BAAQ;;;ACGf,SAAS,WAAW,IAA2B,MAAc,QAAgB;AACzE,QAAM,SAAS,GAAG,aAAa,IAAI;AAEnC,KAAG,aAAa,QAAQ,MAAM;AAC9B,KAAG,cAAc,MAAM;AAEvB,MAAI,CAAC,GAAG,mBAAmB,QAAQ,GAAG,cAAc,GAAG;AACnD,YAAQ,MAAM,4CAA4C,UAAG,iBAAiB,MAAM,EAAG;AACvF,OAAG,aAAa,MAAM;AACtB,WAAO;AAAA,EACX;AAEA,SAAO;AACX;AAWO,SAAS,kBAAkB,IAAiE;AAE/F,QAAM,eAAe,WAAW,IAAI,GAAG,eAAe,uBAAE;AACxD,QAAM,iBAAiB,WAAW,IAAI,GAAG,iBAAiB,yBAAE;AAE5D,QAAM,gBAAgB,GAAG,cAAc;AACvC,KAAG,aAAa,eAAe,YAAY;AAC3C,KAAG,aAAa,eAAe,cAAc;AAC7C,KAAG,YAAY,aAAa;AAE5B,MAAI,CAAC,GAAG,oBAAoB,eAAe,GAAG,WAAW,GAAG;AACxD;AAAA,MACI,4CAA4C,UAAG;AAAA,QAC3C;AAAA,MACJ;AAAA,IACJ;AACA;AAAA,EACJ;AAEA,SAAO;AAAA,IACH;AAAA,IACA;AAAA,MACI,qBAAoB;AAAA,QAChB,SAAS,GAAG,mBAAmB,eAAe,mBAAmB;AAAA,QACjE,MAAM;AAAA,MACV;AAAA,MACA,oBAAmB;AAAA,QACf,SAAS,GAAG,mBAAmB,eAAe,kBAAkB;AAAA,QAChE,MAAM;AAAA,MACV;AAAA,MACA,iBAAgB;AAAA,QACZ,SAAS,GAAG,mBAAmB,eAAe,eAAe;AAAA,QAC7D,MAAM;AAAA,MACV;AAAA,MACA,YAAW;AAAA,QACP,SAAS,GAAG,mBAAmB,eAAe,UAAU;AAAA,QACxD,MAAM;AAAA,MACV;AAAA,MACA,cAAa;AAAA,QACT,SAAS,GAAG,mBAAmB,eAAe,YAAY;AAAA,QAC1D,MAAM;AAAA,MACV;AAAA,MACA,YAAW;AAAA,QACP,SAAS,GAAG,mBAAmB,eAAe,UAAU;AAAA,QACxD,MAAM;AAAA,MACV;AAAA,MACA,2BAA0B;AAAA,QACtB,SAAS,GAAG,mBAAmB,eAAe,yBAAyB;AAAA,QACvE,MAAM;AAAA,MACV;AAAA,MACA,6BAA4B;AAAA,QACxB,SAAS,GAAG,mBAAmB,eAAe,2BAA2B;AAAA,QACzE,MAAM;AAAA,MACV;AAAA,MACA,kBAAiB;AAAA,QACb,SAAS,GAAG,mBAAmB,eAAe,gBAAgB;AAAA,QAC9D,MAAM;AAAA,MACV;AAAA,MACA,qBAAoB;AAAA,QAChB,SAAS,GAAG,mBAAmB,eAAe,mBAAmB;AAAA,QACjE,MAAM;AAAA,MACV;AAAA,MACA,iBAAgB;AAAA,QACZ,SAAS,GAAG,mBAAmB,eAAe,eAAe;AAAA,QAC7D,MAAM;AAAA,MACV;AAAA,MACA,0BAAyB;AAAA,QACrB,SAAS,GAAG,mBAAmB,eAAe,wBAAwB;AAAA,QACtE,MAAM;AAAA,MACV;AAAA,MACA,yBAAwB;AAAA,QACpB,SAAS,GAAG,mBAAmB,eAAe,uBAAuB;AAAA,QACrE,MAAM;AAAA,MACV;AAAA,MACA,aAAY;AAAA,QACR,SAAS,GAAG,mBAAmB,eAAe,WAAW;AAAA,QACzD,MAAM;AAAA,MACV;AAAA,MACA,sBAAqB;AAAA,QACjB,SAAS,GAAG,mBAAmB,eAAe,oBAAoB;AAAA,QAClE,MAAM;AAAA,MACV;AAAA,MACA,kBAAiB;AAAA,QACb,SAAS,GAAG,mBAAmB,eAAe,gBAAgB;AAAA,QAC9D,MAAM;AAAA,MACV;AAAA,MACA,kBAAiB;AAAA,QACb,SAAS,GAAG,mBAAmB,eAAe,gBAAgB;AAAA,QAC9D,MAAM;AAAA,MACV;AAAA,MACA,kBAAiB;AAAA,QACb,SAAS,GAAG,mBAAmB,eAAe,gBAAgB;AAAA,QAC9D,MAAM;AAAA,MACV;AAAA,MACA,kBAAiB;AAAA,QACb,SAAS,GAAG,mBAAmB,eAAe,gBAAgB;AAAA,QAC9D,MAAM;AAAA,MACV;AAAA,MACA,sBAAqB;AAAA,QACjB,SAAS,GAAG,mBAAmB,eAAe,oBAAoB;AAAA,QAClE,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IACA;AAAA,MACI,mBAAkB;AAAA,QACd,SAAS,GAAG,kBAAkB,eAAe,iBAAiB;AAAA,QAC9D,OAAO;AAAA,MACX;AAAA,MACA,iBAAgB;AAAA,QACZ,SAAS,GAAG,kBAAkB,eAAe,eAAe;AAAA,QAC5D,OAAO;AAAA,MACX;AAAA,MACA,iBAAgB;AAAA,QACZ,SAAS,GAAG,kBAAkB,eAAe,eAAe;AAAA,QAC5D,OAAO;AAAA,MACX;AAAA,MACA,gBAAe;AAAA,QACX,SAAS,GAAG,kBAAkB,eAAe,cAAc;AAAA,QAC3D,OAAO;AAAA,MACX;AAAA,MACA,cAAa;AAAA,QACT,SAAS,GAAG,kBAAkB,eAAe,YAAY;AAAA,QACzD,OAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AACJ;;;ACpJO,IAAM,eAAN,MAAmB;AAAA,EAOtB,YAAmB,MAAmB,KAAiB;AAApC;AAAmB;AAClC,SAAK,KAAK,KAAK,IAAI;AACnB,KAAC,KAAK,SAAS,KAAK,UAAU,KAAK,UAAU,IAAI,kBAAkB,KAAK,EAAE;AAAA,EAC9E;AAAA,EAEO,aAAa,MAAgB,OAA2B,UAAU,WAAmD,cAAc;AACtI,UAAM,SAAS,KAAK,GAAG,aAAa;AACpC,SAAK,GAAG,WAAW,SAAS,YAAU,KAAK,GAAG,uBAAqB,KAAK,GAAG,cAAc,MAAM;AAC/F,SAAK,GAAG;AAAA,MACJ,SAAS,YAAU,KAAK,GAAG,uBAAqB,KAAK,GAAG;AAAA,MACxD,IAAI,SAAS,IAAI;AAAA,MACjB,KAAK,GAAG;AAAA,IACZ;AACA,WAAO;AAAA,EACX;AAAA,EAEO,cAAc,SAAiB,QAAqB;AACvD,UAAM,KAAK,KAAK,WAAW,OAAO;AAClC,QAAI,IAAG;AACH,WAAK,WAAW,MAAM;AACtB,WAAK,GAAG;AAAA,QACJ,GAAG;AAAA,QACH,GAAG;AAAA,QACH,KAAK,GAAG;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AACA,WAAK,GAAG,wBAAwB,GAAG,OAAO;AAAA,IAE9C,OAAO;AACH,YAAM,IAAI,MAAM,GAAG,gBAAO,0BAAyB;AAAA,IACvD;AAAA,EAEJ;AAAA,EAEO,YAAY,SAA6B;AAC5C,SAAK,GAAG,cAAc,KAAK,GAAG,QAAQ;AACtC,SAAK,GAAG,YAAY,KAAK,GAAG,YAAY,OAAO;AAC/C,SAAK,GAAG,YAAY,KAAK,GAAG,qBAAqB,IAAI;AAAA,EACzD;AAAA,EAEO,WAAW,QAAqB,OAA2B,UAAgB;AAC9E,SAAK,GAAG,WAAW,SAAS,YAAU,KAAK,GAAG,uBAAqB,KAAK,GAAG,cAAc,MAAM;AAAA,EACnG;AAAA,EACO,YAAY,SAAiB,MAAqB;AACrD,UAAM,KAAK,KAAK,SAAS,OAAO;AAChC,QAAI,IAAG;AACH,UAAI,GAAG,SAAS;AAAW,aAAK,SAAS,GAAG,SAAS,IAAY;AACjE,UAAI,GAAG,SAAS;AAAS,aAAK,UAAU,GAAG,SAAS,IAAc;AAClE,UAAI,GAAG,SAAS;AAAO,aAAK,QAAQ,GAAG,SAAS,IAAc;AAC9D,UAAI,GAAG,SAAS;AAAW,aAAK,YAAY,GAAG,SAAS,IAAY;AACpE,UAAI,GAAG,SAAS;AAAW,aAAK,YAAY,GAAG,SAAS,IAAY;AACpE,UAAI,GAAG,SAAS;AAAW,aAAK,YAAY,GAAG,SAAS,IAAY;AAAA,IACxE,OAAO;AACH,YAAM,IAAI,MAAM,qBAAqB;AAAA,IACzC;AAAA,EACJ;AAAA,EAEO,aAAa,GAAW;AAC3B,SAAK,GAAG;AAAA,MACJ,KAAK,GAAG;AAAA,MACR;AAAA,MACA,KAAK,GAAG;AAAA,MACR;AAAA,IACJ;AAAA,EACJ;AAAA,EAEQ,SAAS,SAA+B,MAAY;AACxD,SAAK,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACQ,UAAU,SAA+B,MAAc;AAC3D,SAAK,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACQ,QAAQ,SAA+B,MAAc;AACzD,SAAK,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACQ,YAAY,SAA+B,MAAY;AAC3D,SAAK,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACQ,YAAY,SAA+B,MAAY;AAC3D,SAAK,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACQ,YAAY,SAA+B,MAAY;AAC3D,SAAK,GAAG;AAAA,MACJ;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AACJ;;;AChHO,IAAI,UAAU;AACd,IAAI,aAAa,OAAO,iBAAiB,cAAc,eAAe;AAW7E,IAAI,SAAS,KAAK,KAAK;AAuBvB,IAAI,CAAC,KAAK;AAAO,OAAK,QAAQ,WAAY;AACxC,QAAI,IAAI,GACJ,IAAI,UAAU;AAElB,WAAO,KAAK;AACV,WAAK,UAAU,CAAC,IAAI,UAAU,CAAC;AAAA,IACjC;AAEA,WAAO,KAAK,KAAK,CAAC;AAAA,EACpB;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYO,SAAS,SAAS;AACvB,MAAI,MAAM,IAAa,WAAW,EAAE;AAEpC,MAAa,cAAc,cAAc;AACvC,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,IAAI;AAAA,EACZ;AAEA,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAQO,SAAS,MAAM,GAAG;AACvB,MAAI,MAAM,IAAa,WAAW,EAAE;AACpC,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,SAAO;AACT;AASO,SAAS,KAAK,KAAK,GAAG;AAC3B,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,SAAO;AACT;AAuBO,SAAS,WAAW,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AACzG,MAAI,MAAM,IAAa,WAAW,EAAE;AACpC,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAwBO,SAAS,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AACvG,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAQO,SAAS,SAAS,KAAK;AAC5B,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AASO,SAAS,UAAU,KAAK,GAAG;AAEhC,MAAI,QAAQ,GAAG;AACb,QAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,QAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,QAAI,MAAM,EAAE,EAAE;AACd,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,EAAE;AACb,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,EAAE;AACb,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,IAAI;AAAA,EACZ,OAAO;AACL,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,EAAE;AACb,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,EAAE;AACb,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,CAAC;AACb,QAAI,EAAE,IAAI,EAAE,CAAC;AACb,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AAAA,EAChB;AAEA,SAAO;AACT;AASO,SAAS,OAAO,KAAK,GAAG;AAC7B,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAE5B,MAAI,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM;AAE5E,MAAI,CAAC,KAAK;AACR,WAAO;AAAA,EACT;AAEA,QAAM,IAAM;AACZ,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAC/C,MAAI,EAAE,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAChD,MAAI,EAAE,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAChD,MAAI,EAAE,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAChD,MAAI,EAAE,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAChD,MAAI,EAAE,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAChD,MAAI,EAAE,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO;AAChD,SAAO;AACT;AASO,SAAS,QAAQ,KAAK,GAAG;AAC9B,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,CAAC,IAAI,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AAClG,MAAI,CAAC,IAAI,EAAE,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACpG,MAAI,CAAC,IAAI,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AAClG,MAAI,CAAC,IAAI,EAAE,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACpG,MAAI,CAAC,IAAI,EAAE,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACpG,MAAI,CAAC,IAAI,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AAClG,MAAI,CAAC,IAAI,EAAE,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACpG,MAAI,CAAC,IAAI,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AAClG,MAAI,CAAC,IAAI,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AAClG,MAAI,CAAC,IAAI,EAAE,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACpG,MAAI,EAAE,IAAI,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACnG,MAAI,EAAE,IAAI,EAAE,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACrG,MAAI,EAAE,IAAI,EAAE,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACrG,MAAI,EAAE,IAAI,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACnG,MAAI,EAAE,IAAI,EAAE,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACrG,MAAI,EAAE,IAAI,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM;AACnG,SAAO;AACT;AAQO,SAAS,YAAY,GAAG;AAC7B,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAC5B,MAAI,MAAM,MAAM,MAAM,MAAM;AAE5B,SAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM;AAC3E;AAUO,SAAS,SAAS,KAAK,GAAG,GAAG;AAClC,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,CAAC,GACT,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AAEd,MAAI,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,OAAK,EAAE,CAAC;AACR,OAAK,EAAE,CAAC;AACR,OAAK,EAAE,CAAC;AACR,OAAK,EAAE,CAAC;AACR,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,OAAK,EAAE,CAAC;AACR,OAAK,EAAE,CAAC;AACR,OAAK,EAAE,EAAE;AACT,OAAK,EAAE,EAAE;AACT,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAC/C,MAAI,EAAE,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,MAAI,EAAE,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,OAAK,EAAE,EAAE;AACT,OAAK,EAAE,EAAE;AACT,OAAK,EAAE,EAAE;AACT,OAAK,EAAE,EAAE;AACT,MAAI,EAAE,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,MAAI,EAAE,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,MAAI,EAAE,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,MAAI,EAAE,IAAI,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK;AAChD,SAAO;AACT;AAUO,SAAS,UAAU,KAAK,GAAG,GAAG;AACnC,MAAI,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC;AACX,MAAI,KAAK,KAAK,KAAK;AACnB,MAAI,KAAK,KAAK,KAAK;AACnB,MAAI,KAAK,KAAK,KAAK;AAEnB,MAAI,MAAM,KAAK;AACb,QAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE;AAC/C,QAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE;AAC/C,QAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE;AAChD,QAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE;AAAA,EAClD,OAAO;AACL,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,CAAC;AACT,UAAM,EAAE,EAAE;AACV,UAAM,EAAE,EAAE;AACV,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,CAAC,IAAI;AACT,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,EAAE,EAAE;AAC5C,QAAI,EAAE,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,EAAE,EAAE;AAC5C,QAAI,EAAE,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,EAAE,EAAE;AAC5C,QAAI,EAAE,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,EAAE,EAAE;AAAA,EAC9C;AAEA,SAAO;AACT;AAUO,SAAS,MAAM,KAAK,GAAG,GAAG;AAC/B,MAAI,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC;AACX,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI;AAClB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI;AAClB,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,MAAI,EAAE,IAAI,EAAE,EAAE;AACd,SAAO;AACT;AAWO,SAAS,OAAO,KAAK,GAAG,KAAK,MAAM;AACxC,MAAI,IAAI,KAAK,CAAC,GACV,IAAI,KAAK,CAAC,GACV,IAAI,KAAK,CAAC;AACd,MAAI,MAAM,KAAK,MAAM,GAAG,GAAG,CAAC;AAC5B,MAAI,GAAG,GAAG;AACV,MAAI,KAAK,KAAK,KAAK;AACnB,MAAI,KAAK,KAAK,KAAK;AACnB,MAAI,KAAK,KAAK,KAAK;AACnB,MAAI,KAAK,KAAK;AACd,MAAI,KAAK,KAAK;AACd,MAAI,KAAK,KAAK;AAEd,MAAI,MAAe,SAAS;AAC1B,WAAO;AAAA,EACT;AAEA,QAAM,IAAI;AACV,OAAK;AACL,OAAK;AACL,OAAK;AACL,MAAI,KAAK,IAAI,GAAG;AAChB,MAAI,KAAK,IAAI,GAAG;AAChB,MAAI,IAAI;AACR,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,CAAC;AACT,QAAM,EAAE,EAAE;AACV,QAAM,EAAE,EAAE;AAEV,QAAM,IAAI,IAAI,IAAI;AAClB,QAAM,IAAI,IAAI,IAAI,IAAI;AACtB,QAAM,IAAI,IAAI,IAAI,IAAI;AACtB,QAAM,IAAI,IAAI,IAAI,IAAI;AACtB,QAAM,IAAI,IAAI,IAAI;AAClB,QAAM,IAAI,IAAI,IAAI,IAAI;AACtB,QAAM,IAAI,IAAI,IAAI,IAAI;AACtB,QAAM,IAAI,IAAI,IAAI,IAAI;AACtB,QAAM,IAAI,IAAI,IAAI;AAElB,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,CAAC,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACvC,MAAI,EAAE,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AACxC,MAAI,EAAE,IAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAExC,MAAI,MAAM,KAAK;AAEb,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AAAA,EAChB;AAEA,SAAO;AACT;AAUO,SAAS,QAAQ,KAAK,GAAG,KAAK;AACnC,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,EAAE,EAAE;AAEd,MAAI,MAAM,KAAK;AAEb,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AAAA,EAChB;AAGA,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,EAAE,IAAI,MAAM,IAAI,MAAM;AAC1B,MAAI,EAAE,IAAI,MAAM,IAAI,MAAM;AAC1B,SAAO;AACT;AAUO,SAAS,QAAQ,KAAK,GAAG,KAAK;AACnC,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,EAAE,EAAE;AAEd,MAAI,MAAM,KAAK;AAEb,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AAAA,EAChB;AAGA,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,EAAE,IAAI,MAAM,IAAI,MAAM;AAC1B,MAAI,EAAE,IAAI,MAAM,IAAI,MAAM;AAC1B,SAAO;AACT;AAUO,SAAS,QAAQ,KAAK,GAAG,KAAK;AACnC,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AACb,MAAI,MAAM,EAAE,CAAC;AAEb,MAAI,MAAM,KAAK;AAEb,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AACd,QAAI,EAAE,IAAI,EAAE,EAAE;AAAA,EAChB;AAGA,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,MAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AACzB,SAAO;AACT;AAaO,SAAS,gBAAgB,KAAK,GAAG;AACtC,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAaO,SAAS,YAAY,KAAK,GAAG;AAClC,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,EAAE,CAAC;AACZ,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAcO,SAAS,aAAa,KAAK,KAAK,MAAM;AAC3C,MAAI,IAAI,KAAK,CAAC,GACV,IAAI,KAAK,CAAC,GACV,IAAI,KAAK,CAAC;AACd,MAAI,MAAM,KAAK,MAAM,GAAG,GAAG,CAAC;AAC5B,MAAI,GAAG,GAAG;AAEV,MAAI,MAAe,SAAS;AAC1B,WAAO;AAAA,EACT;AAEA,QAAM,IAAI;AACV,OAAK;AACL,OAAK;AACL,OAAK;AACL,MAAI,KAAK,IAAI,GAAG;AAChB,MAAI,KAAK,IAAI,GAAG;AAChB,MAAI,IAAI;AAER,MAAI,CAAC,IAAI,IAAI,IAAI,IAAI;AACrB,MAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI;AACzB,MAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI;AACzB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI;AACzB,MAAI,CAAC,IAAI,IAAI,IAAI,IAAI;AACrB,MAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI;AACzB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI;AACzB,MAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI;AACzB,MAAI,EAAE,IAAI,IAAI,IAAI,IAAI;AACtB,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAaO,SAAS,cAAc,KAAK,KAAK;AACtC,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,IAAI,KAAK,IAAI,GAAG;AAEpB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,CAAC;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAaO,SAAS,cAAc,KAAK,KAAK;AACtC,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,IAAI,KAAK,IAAI,GAAG;AAEpB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,CAAC;AACV,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAaO,SAAS,cAAc,KAAK,KAAK;AACtC,MAAI,IAAI,KAAK,IAAI,GAAG;AACpB,MAAI,IAAI,KAAK,IAAI,GAAG;AAEpB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,CAAC;AACV,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAiBO,SAAS,wBAAwB,KAAK,GAAG,GAAG;AAEjD,MAAI,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC;AACX,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,CAAC,IAAI,KAAK,KAAK;AACnB,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI,KAAK,KAAK;AACnB,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,EAAE,IAAI,KAAK,KAAK;AACpB,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AASO,SAAS,UAAU,KAAK,GAAG;AAChC,MAAI,cAAc,IAAa,WAAW,CAAC;AAC3C,MAAI,KAAK,CAAC,EAAE,CAAC,GACT,KAAK,CAAC,EAAE,CAAC,GACT,KAAK,CAAC,EAAE,CAAC,GACT,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACZ,MAAI,YAAY,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAEnD,MAAI,YAAY,GAAG;AACjB,gBAAY,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,IAAI;AAC/D,gBAAY,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,IAAI;AAC/D,gBAAY,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,IAAI;AAAA,EACjE,OAAO;AACL,gBAAY,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM;AAC3D,gBAAY,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM;AAC3D,gBAAY,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM;AAAA,EAC7D;AAEA,0BAAwB,KAAK,GAAG,WAAW;AAC3C,SAAO;AACT;AAWO,SAAS,eAAe,KAAK,KAAK;AACvC,MAAI,CAAC,IAAI,IAAI,EAAE;AACf,MAAI,CAAC,IAAI,IAAI,EAAE;AACf,MAAI,CAAC,IAAI,IAAI,EAAE;AACf,SAAO;AACT;AAYO,SAAS,WAAW,KAAK,KAAK;AACnC,MAAI,MAAM,IAAI,CAAC;AACf,MAAI,MAAM,IAAI,CAAC;AACf,MAAI,MAAM,IAAI,CAAC;AACf,MAAI,MAAM,IAAI,CAAC;AACf,MAAI,MAAM,IAAI,CAAC;AACf,MAAI,MAAM,IAAI,CAAC;AACf,MAAI,MAAM,IAAI,CAAC;AACf,MAAI,MAAM,IAAI,CAAC;AACf,MAAI,MAAM,IAAI,EAAE;AAChB,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,KAAK,GAAG;AACjC,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,KAAK,GAAG;AACjC,MAAI,CAAC,IAAI,KAAK,MAAM,KAAK,KAAK,GAAG;AACjC,SAAO;AACT;AAWO,SAAS,YAAY,KAAK,KAAK;AACpC,MAAI,UAAU,IAAa,WAAW,CAAC;AACvC,aAAW,SAAS,GAAG;AACvB,MAAI,MAAM,IAAI,QAAQ,CAAC;AACvB,MAAI,MAAM,IAAI,QAAQ,CAAC;AACvB,MAAI,MAAM,IAAI,QAAQ,CAAC;AACvB,MAAI,OAAO,IAAI,CAAC,IAAI;AACpB,MAAI,OAAO,IAAI,CAAC,IAAI;AACpB,MAAI,OAAO,IAAI,CAAC,IAAI;AACpB,MAAI,OAAO,IAAI,CAAC,IAAI;AACpB,MAAI,OAAO,IAAI,CAAC,IAAI;AACpB,MAAI,OAAO,IAAI,CAAC,IAAI;AACpB,MAAI,OAAO,IAAI,CAAC,IAAI;AACpB,MAAI,OAAO,IAAI,CAAC,IAAI;AACpB,MAAI,OAAO,IAAI,EAAE,IAAI;AACrB,MAAI,QAAQ,OAAO,OAAO;AAC1B,MAAI,IAAI;AAER,MAAI,QAAQ,GAAG;AACb,QAAI,KAAK,KAAK,QAAQ,CAAG,IAAI;AAC7B,QAAI,CAAC,IAAI,OAAO;AAChB,QAAI,CAAC,KAAK,OAAO,QAAQ;AACzB,QAAI,CAAC,KAAK,OAAO,QAAQ;AACzB,QAAI,CAAC,KAAK,OAAO,QAAQ;AAAA,EAC3B,WAAW,OAAO,QAAQ,OAAO,MAAM;AACrC,QAAI,KAAK,KAAK,IAAM,OAAO,OAAO,IAAI,IAAI;AAC1C,QAAI,CAAC,KAAK,OAAO,QAAQ;AACzB,QAAI,CAAC,IAAI,OAAO;AAChB,QAAI,CAAC,KAAK,OAAO,QAAQ;AACzB,QAAI,CAAC,KAAK,OAAO,QAAQ;AAAA,EAC3B,WAAW,OAAO,MAAM;AACtB,QAAI,KAAK,KAAK,IAAM,OAAO,OAAO,IAAI,IAAI;AAC1C,QAAI,CAAC,KAAK,OAAO,QAAQ;AACzB,QAAI,CAAC,KAAK,OAAO,QAAQ;AACzB,QAAI,CAAC,IAAI,OAAO;AAChB,QAAI,CAAC,KAAK,OAAO,QAAQ;AAAA,EAC3B,OAAO;AACL,QAAI,KAAK,KAAK,IAAM,OAAO,OAAO,IAAI,IAAI;AAC1C,QAAI,CAAC,KAAK,OAAO,QAAQ;AACzB,QAAI,CAAC,KAAK,OAAO,QAAQ;AACzB,QAAI,CAAC,KAAK,OAAO,QAAQ;AACzB,QAAI,CAAC,IAAI,OAAO;AAAA,EAClB;AAEA,SAAO;AACT;AAmBO,SAAS,6BAA6B,KAAK,GAAG,GAAG,GAAG;AAEzD,MAAI,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC;AACX,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC;AACZ,MAAI,CAAC,KAAK,KAAK,KAAK,OAAO;AAC3B,MAAI,CAAC,KAAK,KAAK,MAAM;AACrB,MAAI,CAAC,KAAK,KAAK,MAAM;AACrB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,KAAK,KAAK,MAAM;AACrB,MAAI,CAAC,KAAK,KAAK,KAAK,OAAO;AAC3B,MAAI,CAAC,KAAK,KAAK,MAAM;AACrB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,KAAK,KAAK,MAAM;AACrB,MAAI,CAAC,KAAK,KAAK,MAAM;AACrB,MAAI,EAAE,KAAK,KAAK,KAAK,OAAO;AAC5B,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI,EAAE,CAAC;AACb,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAsBO,SAAS,mCAAmC,KAAK,GAAG,GAAG,GAAG,GAAG;AAElE,MAAI,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC;AACX,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC;AACZ,MAAI,QAAQ,KAAK,KAAK,OAAO;AAC7B,MAAI,QAAQ,KAAK,MAAM;AACvB,MAAI,QAAQ,KAAK,MAAM;AACvB,MAAI,QAAQ,KAAK,MAAM;AACvB,MAAI,QAAQ,KAAK,KAAK,OAAO;AAC7B,MAAI,QAAQ,KAAK,MAAM;AACvB,MAAI,QAAQ,KAAK,MAAM;AACvB,MAAI,QAAQ,KAAK,MAAM;AACvB,MAAI,SAAS,KAAK,KAAK,OAAO;AAC9B,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI,EAAE,CAAC,IAAI,MAAM,OAAO,KAAK,OAAO,KAAK,OAAO;AACtD,MAAI,EAAE,IAAI,EAAE,CAAC,IAAI,MAAM,OAAO,KAAK,OAAO,KAAK,OAAO;AACtD,MAAI,EAAE,IAAI,EAAE,CAAC,IAAI,MAAM,OAAO,KAAK,OAAO,KAAK,QAAQ;AACvD,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAUO,SAAS,SAAS,KAAK,GAAG;AAC/B,MAAI,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC,GACP,IAAI,EAAE,CAAC;AACX,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,MAAI,CAAC,IAAI,IAAI,KAAK;AAClB,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI,IAAI,KAAK;AAClB,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,EAAE,IAAI,IAAI,KAAK;AACnB,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAcO,SAAS,QAAQ,KAAK,MAAM,OAAO,QAAQ,KAAK,MAAM,KAAK;AAChE,MAAI,KAAK,KAAK,QAAQ;AACtB,MAAI,KAAK,KAAK,MAAM;AACpB,MAAI,KAAK,KAAK,OAAO;AACrB,MAAI,CAAC,IAAI,OAAO,IAAI;AACpB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,OAAO,IAAI;AACpB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,KAAK,QAAQ,QAAQ;AAC1B,MAAI,CAAC,KAAK,MAAM,UAAU;AAC1B,MAAI,EAAE,KAAK,MAAM,QAAQ;AACzB,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI,MAAM,OAAO,IAAI;AAC3B,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAeO,SAAS,cAAc,KAAK,MAAM,QAAQ,MAAM,KAAK;AAC1D,MAAI,IAAI,IAAM,KAAK,IAAI,OAAO,CAAC,GAC3B;AACJ,MAAI,CAAC,IAAI,IAAI;AACb,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AAEV,MAAI,OAAO,QAAQ,QAAQ,UAAU;AACnC,SAAK,KAAK,OAAO;AACjB,QAAI,EAAE,KAAK,MAAM,QAAQ;AACzB,QAAI,EAAE,IAAI,IAAI,MAAM,OAAO;AAAA,EAC7B,OAAO;AACL,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,IAAI,KAAK;AAAA,EACjB;AAEA,SAAO;AACT;AAMO,IAAI,cAAc;AAelB,SAAS,cAAc,KAAK,MAAM,QAAQ,MAAM,KAAK;AAC1D,MAAI,IAAI,IAAM,KAAK,IAAI,OAAO,CAAC,GAC3B;AACJ,MAAI,CAAC,IAAI,IAAI;AACb,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AAEV,MAAI,OAAO,QAAQ,QAAQ,UAAU;AACnC,SAAK,KAAK,OAAO;AACjB,QAAI,EAAE,IAAI,MAAM;AAChB,QAAI,EAAE,IAAI,MAAM,OAAO;AAAA,EACzB,OAAO;AACL,QAAI,EAAE,IAAI;AACV,QAAI,EAAE,IAAI,CAAC;AAAA,EACb;AAEA,SAAO;AACT;AAaO,SAAS,2BAA2B,KAAK,KAAK,MAAM,KAAK;AAC9D,MAAI,QAAQ,KAAK,IAAI,IAAI,YAAY,KAAK,KAAK,GAAK;AACpD,MAAI,UAAU,KAAK,IAAI,IAAI,cAAc,KAAK,KAAK,GAAK;AACxD,MAAI,UAAU,KAAK,IAAI,IAAI,cAAc,KAAK,KAAK,GAAK;AACxD,MAAI,WAAW,KAAK,IAAI,IAAI,eAAe,KAAK,KAAK,GAAK;AAC1D,MAAI,SAAS,KAAO,UAAU;AAC9B,MAAI,SAAS,KAAO,QAAQ;AAC5B,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,GAAG,UAAU,YAAY,SAAS;AAC3C,MAAI,CAAC,KAAK,QAAQ,WAAW,SAAS;AACtC,MAAI,EAAE,IAAI,OAAO,OAAO;AACxB,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI,MAAM,QAAQ,OAAO;AAC/B,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAgBO,SAAS,QAAQ,KAAK,MAAM,OAAO,QAAQ,KAAK,MAAM,KAAK;AAChE,MAAI,KAAK,KAAK,OAAO;AACrB,MAAI,KAAK,KAAK,SAAS;AACvB,MAAI,KAAK,KAAK,OAAO;AACrB,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI,IAAI;AACd,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,KAAK,OAAO,SAAS;AAC3B,MAAI,EAAE,KAAK,MAAM,UAAU;AAC3B,MAAI,EAAE,KAAK,MAAM,QAAQ;AACzB,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAMO,IAAI,QAAQ;AAgBZ,SAAS,QAAQ,KAAK,MAAM,OAAO,QAAQ,KAAK,MAAM,KAAK;AAChE,MAAI,KAAK,KAAK,OAAO;AACrB,MAAI,KAAK,KAAK,SAAS;AACvB,MAAI,KAAK,KAAK,OAAO;AACrB,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,KAAK;AACd,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,KAAK,OAAO,SAAS;AAC3B,MAAI,EAAE,KAAK,MAAM,UAAU;AAC3B,MAAI,EAAE,IAAI,OAAO;AACjB,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAYO,SAAS,OAAO,KAAK,KAAK,QAAQ,IAAI;AAC3C,MAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,MAAI,OAAO,IAAI,CAAC;AAChB,MAAI,OAAO,IAAI,CAAC;AAChB,MAAI,OAAO,IAAI,CAAC;AAChB,MAAI,MAAM,GAAG,CAAC;AACd,MAAI,MAAM,GAAG,CAAC;AACd,MAAI,MAAM,GAAG,CAAC;AACd,MAAI,UAAU,OAAO,CAAC;AACtB,MAAI,UAAU,OAAO,CAAC;AACtB,MAAI,UAAU,OAAO,CAAC;AAEtB,MAAI,KAAK,IAAI,OAAO,OAAO,IAAa,WAAW,KAAK,IAAI,OAAO,OAAO,IAAa,WAAW,KAAK,IAAI,OAAO,OAAO,IAAa,SAAS;AAC7I,WAAO,SAAS,GAAG;AAAA,EACrB;AAEA,OAAK,OAAO;AACZ,OAAK,OAAO;AACZ,OAAK,OAAO;AACZ,QAAM,IAAI,KAAK,MAAM,IAAI,IAAI,EAAE;AAC/B,QAAM;AACN,QAAM;AACN,QAAM;AACN,OAAK,MAAM,KAAK,MAAM;AACtB,OAAK,MAAM,KAAK,MAAM;AACtB,OAAK,MAAM,KAAK,MAAM;AACtB,QAAM,KAAK,MAAM,IAAI,IAAI,EAAE;AAE3B,MAAI,CAAC,KAAK;AACR,SAAK;AACL,SAAK;AACL,SAAK;AAAA,EACP,OAAO;AACL,UAAM,IAAI;AACV,UAAM;AACN,UAAM;AACN,UAAM;AAAA,EACR;AAEA,OAAK,KAAK,KAAK,KAAK;AACpB,OAAK,KAAK,KAAK,KAAK;AACpB,OAAK,KAAK,KAAK,KAAK;AACpB,QAAM,KAAK,MAAM,IAAI,IAAI,EAAE;AAE3B,MAAI,CAAC,KAAK;AACR,SAAK;AACL,SAAK;AACL,SAAK;AAAA,EACP,OAAO;AACL,UAAM,IAAI;AACV,UAAM;AACN,UAAM;AACN,UAAM;AAAA,EACR;AAEA,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI,EAAE,KAAK,OAAO,KAAK,OAAO,KAAK;AACzC,MAAI,EAAE,IAAI,EAAE,KAAK,OAAO,KAAK,OAAO,KAAK;AACzC,MAAI,EAAE,IAAI,EAAE,KAAK,OAAO,KAAK,OAAO,KAAK;AACzC,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAWO,SAAS,SAAS,KAAK,KAAK,QAAQ,IAAI;AAC7C,MAAI,OAAO,IAAI,CAAC,GACZ,OAAO,IAAI,CAAC,GACZ,OAAO,IAAI,CAAC,GACZ,MAAM,GAAG,CAAC,GACV,MAAM,GAAG,CAAC,GACV,MAAM,GAAG,CAAC;AACd,MAAI,KAAK,OAAO,OAAO,CAAC,GACpB,KAAK,OAAO,OAAO,CAAC,GACpB,KAAK,OAAO,OAAO,CAAC;AACxB,MAAI,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK;AAEnC,MAAI,MAAM,GAAG;AACX,UAAM,IAAI,KAAK,KAAK,GAAG;AACvB,UAAM;AACN,UAAM;AACN,UAAM;AAAA,EACR;AAEA,MAAI,KAAK,MAAM,KAAK,MAAM,IACtB,KAAK,MAAM,KAAK,MAAM,IACtB,KAAK,MAAM,KAAK,MAAM;AAC1B,QAAM,KAAK,KAAK,KAAK,KAAK,KAAK;AAE/B,MAAI,MAAM,GAAG;AACX,UAAM,IAAI,KAAK,KAAK,GAAG;AACvB,UAAM;AACN,UAAM;AACN,UAAM;AAAA,EACR;AAEA,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI,KAAK,KAAK,KAAK;AACxB,MAAI,CAAC,IAAI,KAAK,KAAK,KAAK;AACxB,MAAI,CAAC,IAAI,KAAK,KAAK,KAAK;AACxB,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,CAAC,IAAI;AACT,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;AACV,SAAO;AACT;AAQO,SAAS,IAAI,GAAG;AACrB,SAAO,UAAU,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI,OAAO,EAAE,EAAE,IAAI;AAClP;AAQO,SAAS,KAAK,GAAG;AACtB,SAAO,KAAK,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;AACxH;AAUO,SAAS,IAAI,KAAK,GAAG,GAAG;AAC7B,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,SAAO;AACT;AAUO,SAAS,SAAS,KAAK,GAAG,GAAG;AAClC,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACnB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACtB,SAAO;AACT;AAUO,SAAS,eAAe,KAAK,GAAG,GAAG;AACxC,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI;AAChB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI;AAClB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI;AAClB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI;AAClB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI;AAClB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI;AAClB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI;AAClB,SAAO;AACT;AAWO,SAAS,qBAAqB,KAAK,GAAG,GAAGA,QAAO;AACrD,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA;AACvB,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAIA;AAC1B,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAIA;AAC1B,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAIA;AAC1B,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAIA;AAC1B,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAIA;AAC1B,MAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAIA;AAC1B,SAAO;AACT;AASO,SAAS,YAAY,GAAG,GAAG;AAChC,SAAO,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE;AAChS;AASO,SAAS,OAAO,GAAG,GAAG;AAC3B,MAAI,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC;AACZ,MAAI,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,MAAI,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE,GACV,MAAM,EAAE,EAAE;AACd,SAAO,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC;AAC52C;AAMO,IAAI,MAAM;AAMV,IAAI,MAAM;;;ACn3DV,IAAe,OAAf,MAAoB;AAAA,EACvB,OAAc,MAAM,OAAe,KAAa,KAAa;AACzD,WAAO,KAAK,IAAI,KAAK,IAAI,OAAO,GAAG,GAAG,GAAG;AAAA,EAC7C;AAAA,EACA,OAAc,IAAI,OAAe,YAAoB,KAAK;AACtD,WAAO,KAAK,IAAI,KAAK,IAAI,YAAY,IAAI;AAAA,EAC7C;AAAA,EAEA,OAAc,SAAS,IAAW,GAAQ,KAAa;AACnD,WAAO,GAAG,OAAO,MAAM,KAAK,MAAM,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,GAAG;AAAA,EACjE;AAAA,EAEA,OAAc,UAAU,IAAc,IAAc;AAChD,WAAO,GAAG,IAAI,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC;AAAA,EACrC;AAAA,EAEA,OAAc,eAAe,IAAc,IAAc;AACrD,WAAO,GAAG,IAAI,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC;AAAA,EACrC;AAAA,EAEA,OAAc,eAAe,IAAc,IAAc;AACrD,WAAO,GAAG,IAAI,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,CAAC;AAAA,EACrC;AAAA,EAEA,OAAc,YAAY,IAAc,GAAW;AAC/C,WAAO,GAAG,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC;AAAA,EACjC;AAAA,EAEA,OAAc,SAAS,GAAW;AAC9B,WAAO,IAAI,MAAM,KAAK;AAAA,EAC1B;AAAA,EAEA,OAAc,SAAS,GAAW;AAC9B,WAAO,IAAI,KAAK,KAAK;AAAA,EACzB;AAAA,EAEA,OAAc,uBAAuB,SAAoB,QAAyB;AAC9E,QAAI;AACJ,YAAQ,QAAQ,CAAC,MAAM;AACnB,UAAI,YAAY,UAAa,KAAK,IAAI,EAAE,UAAU,CAAC,IAAI,KAAK,IAAI,QAAQ,UAAU,CAAC;AAAG,kBAAU;AAAA,WAC3F;AAAA,MAEL;AAAA,IAEJ,CAAC;AACD,WAAO;AAAA,EACX;AAGJ;;;AC5CO,SAAS,GAAG,GAA0C,GAAY,GAAqB;AAC7F,MAAI,OAAO,MAAM,UAAU;AAC1B,WAAO,QAAQ,EAAE,GAAG,GAAG,CAAC;AAAA,EACzB,WAAW,OAAO,MAAM,aAAa;AACpC,WAAO,QAAQ,EAAE,CAAC;AAAA,EACnB,OAAO;AACN,WAAO,QAAQ,EAAE,GAAG,CAAC;AAAA,EACtB;AACD;AAEO,IAAM,UAAN,MAAM,SAAQ;AAAA,EACpB,IAAW,QAAgB;AAAE,WAAO,KAAK;AAAA,EAAG;AAAA,EAC5C,IAAW,MAAM,OAAe;AAAE,SAAK,IAAI;AAAA,EAAO;AAAA,EAElD,IAAW,MAAc;AAAE,WAAO,KAAK;AAAA,EAAG;AAAA,EAC1C,IAAW,IAAI,OAAe;AAAE,SAAK,IAAI;AAAA,EAAO;AAAA,EAEhD,IAAW,OAAe;AAAE,WAAO,KAAK;AAAA,EAAG;AAAA,EAC3C,IAAW,KAAK,OAAe;AAAE,SAAK,IAAI;AAAA,EAAO;AAAA,EAEjD,IAAW,IAAY;AAAE,WAAO,KAAK,IAAI,CAAC;AAAA,EAAG;AAAA,EAC7C,IAAW,EAAE,OAAe;AAAE,SAAK,IAAI,CAAC,IAAI;AAAA,EAAO;AAAA,EAEnD,IAAW,IAAY;AAAE,WAAO,KAAK,IAAI,CAAC;AAAA,EAAG;AAAA,EAC7C,IAAW,EAAE,OAAe;AAAE,SAAK,IAAI,CAAC,IAAI;AAAA,EAAO;AAAA,EAEnD,IAAW,IAAY;AAAE,WAAO,KAAK,IAAI,CAAC;AAAA,EAAG;AAAA,EAC7C,IAAW,EAAE,OAAe;AAAE,SAAK,IAAI,CAAC,IAAI;AAAA,EAAO;AAAA,EAEnD,IAAW,KAAK;AAAE,WAAO,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,EAAG;AAAA,EAC7C,IAAW,GAAG,GAAY;AAAE,SAAK,IAAI,EAAE;AAAG,SAAK,IAAI,EAAE;AAAA,EAAC;AAAA,EAEtD,IAAW,KAAK;AAAE,WAAO,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,EAAG;AAAA,EAC7C,IAAW,GAAG,GAAY;AAAE,SAAK,IAAI,EAAE;AAAG,SAAK,IAAI,EAAE;AAAA,EAAC;AAAA,EAEtD,IAAW,KAAK;AAAE,WAAO,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,EAAG;AAAA,EAC7C,IAAW,GAAG,GAAY;AAAE,SAAK,IAAI,EAAE;AAAG,SAAK,IAAI,EAAE;AAAA,EAAC;AAAA,EAEtD,IAAW,KAAK;AAAE,WAAO,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,EAAG;AAAA,EAC7C,IAAW,GAAG,GAAY;AAAE,SAAK,IAAI,EAAE;AAAG,SAAK,IAAI,EAAE;AAAA,EAAC;AAAA,EAEtD,IAAW,KAAK;AAAE,WAAO,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,EAAG;AAAA,EAC7C,IAAW,GAAG,GAAY;AAAE,SAAK,IAAI,EAAE;AAAG,SAAK,IAAI,EAAE;AAAA,EAAC;AAAA,EAEtD,IAAW,KAAK;AAAE,WAAO,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,EAAG;AAAA,EAC7C,IAAW,GAAG,GAAY;AAAE,SAAK,IAAI,EAAE;AAAG,SAAK,IAAI,EAAE;AAAA,EAAC;AAAA,EAKtD,YAAY,IAAY,GAAG,IAAY,GAAG,IAAY,GAAG;AACxD,SAAK,MAAM,CAAC,GAAG,GAAG,CAAC;AAAA,EACpB;AAAA,EAEA,OAAO,MAAM,QAAiB,IAAY,GAAG;AAC5C,WAAO,IAAI,SAAQ,OAAO,GAAG,OAAO,GAAG,CAAC;AAAA,EACzC;AAAA,EAEA,OAAO,EAAE,IAAY,GAAG,IAAY,GAAG,IAAY,GAAG;AACrD,WAAO,IAAI,SAAQ,GAAG,GAAG,CAAC;AAAA,EAC3B;AAAA,EAEA,WAAW,WAAW;AACrB,WAAO,IAAI,SAAQ,GAAG,GAAG,CAAC;AAAA,EAC3B;AAAA,EACA,WAAW,YAAY;AACtB,WAAO,IAAI,SAAQ,GAAG,GAAG,EAAE;AAAA,EAC5B;AAAA,EACA,WAAW,KAAK;AACf,WAAO,IAAI,SAAQ,GAAG,GAAG,CAAC;AAAA,EAC3B;AAAA,EACA,WAAW,OAAO;AACjB,WAAO,IAAI,SAAQ,GAAG,IAAI,CAAC;AAAA,EAC5B;AAAA,EACA,WAAW,OAAO;AACjB,WAAO,IAAI,SAAQ,IAAI,GAAG,CAAC;AAAA,EAC5B;AAAA,EACA,WAAW,QAAQ;AAClB,WAAO,IAAI,SAAQ,GAAG,GAAG,CAAC;AAAA,EAC3B;AAAA,EACA,WAAW,KAAK;AACf,WAAO,IAAI,SAAQ,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AAAA,EAC7C;AAAA,EACA,WAAW,MAAM;AAChB,WAAO,SAAQ,GAAG,MAAM,GAAG;AAAA,EAC5B;AAAA,EAEA,IAAI,QAAQ;AACX,WAAO,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,EAC/B;AAAA,EAEA,IAAI,MAAM,GAA6B;AACtC,KAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,IAAI;AAAA,EAC5B;AAAA,EAEA,QAAQ,YAA2E;AAClF,SAAK,MAAM,QAAQ,UAAU;AAAA,EAC9B;AAAA,EAEA,IAAI,IAAa;AAChB,WAAO,KAAK,MAAM;AAAA,EACnB;AAAA,EAEA,OAAO,QAA0B;AAChC,WACC,KAAK,MAAM,OAAO,KAClB,KAAK,MAAM,OAAO,KAClB,KAAK,MAAM,OAAO;AAAA,EAEpB;AAAA,EAEA,QAAiB;AAChB,WAAO,IAAI;AAAA,MACV,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AAAA,EACD;AAAA,EAEA,IAAI,QAAiB;AACpB,WAAO,IAAI;AAAA,MACV,KAAK,IAAI,OAAO;AAAA,MAChB,KAAK,IAAI,OAAO;AAAA,MAChB,KAAK,IAAI,OAAO;AAAA,IACjB;AAAA,EACD;AAAA,EAIA,SAAS,GAAqB,GAAY,GAAqB;AAC9D,UAAM,CAAC,GAAG,GAAG,CAAC,IAAK,OAAO,MAAM,WAAY,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE;AAC1D,WAAO,IAAI;AAAA,MACV,KAAK,IAAI;AAAA,MACT,KAAK,IAAI;AAAA,MACT,KAAK,IAAI;AAAA,IACV;AAAA,EACD;AAAA,EAEA,SAAS,QAAiB;AACzB,WAAO,IAAI;AAAA,MACV,KAAK,IAAI,OAAO;AAAA,MAChB,KAAK,IAAI,OAAO;AAAA,MAChB,KAAK,IAAI,OAAO;AAAA,IACjB;AAAA,EACD;AAAA,EAEA,MAAM,QAAgB;AACrB,WAAO,IAAI;AAAA,MACV,KAAK,IAAI;AAAA,MACT,KAAK,IAAI;AAAA,MACT,KAAK,IAAI;AAAA,IACV;AAAA,EACD;AAAA,EAEA,OAAO,QAAiB;AACvB,WAAO,IAAI;AAAA,MACV,KAAK,IAAI,OAAO;AAAA,MAChB,KAAK,IAAI,OAAO;AAAA,MAChB,KAAK,IAAI,OAAO;AAAA,IACjB;AAAA,EACD;AAAA,EAEA,SAAS,KAAa;AACrB,UAAM,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,OAAO,GAAG,EAAE;AAEnC,WAAO,IAAI;AAAA,MACV;AAAA,MACA,KAAK;AAAA,MACL;AAAA,IACD;AAAA,EACD;AAAA,EACA,SAAS,KAAa;AACrB,UAAM,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,OAAO,GAAG,EAAE;AAEnC,WAAO,IAAI;AAAA,MACV;AAAA,MACA;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACD;AAAA,EACA,SAAS,KAAa;AACrB,UAAM,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,OAAO,GAAG,EAAE;AAEnC,WAAO,IAAI;AAAA,MACV,KAAK;AAAA,MACL;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEA,YAAY;AACX,WAAO,KAAK,KAAK,KAAK,aAAa,CAAC;AAAA,EACrC;AAAA,EAEA,eAAe;AACd,WAAQ,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA,EAC3D;AAAA,EAEA,IAAI,KAAc;AACjB,WAAO,IAAI;AAAA,MACV,KAAK,IAAI,IAAI;AAAA,MACb,KAAK,IAAI,IAAI;AAAA,MACb,KAAK,IAAI,IAAI;AAAA,IACd;AAAA,EACD;AAAA,EACA,MAAM,KAAc,KAAc;AACjC,WAAO,IAAI;AAAA,MACV,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,MAC/B,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,MAC/B,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,IAChC;AAAA,EACD;AAAA,EACA,YAAY;AACX,QAAI,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AAC5D,QAAI,MAAM,GAAG;AACZ,YAAM,IAAI,KAAK,KAAK,GAAG;AAAA,IACxB;AACA,WAAO;AAAA,MACN,KAAK,IAAI;AAAA,MACT,KAAK,IAAI;AAAA,MACT,KAAK,IAAI;AAAA,IACV;AAAA,EACD;AACD;;;ACnOO,SAAS,KAAK;AACpB,SAAO,QAAQ,EAAE;AAClB;AAEO,IAAM,UAAN,MAAM,SAAQ;AAAA,EAEV,YAAY,QAAe;AAC9B,SAAK,OAAO,SAAO,aAAK,MAAM,MAAM,IAAE,aAAK,OAAO;AAClD,WAAO;AAAA,EACX;AAAA,EAEA,OAAO,IAAI;AACb,WAAO,IAAI,SAAQ;AAAA,EACpB;AAAA,EAEU,IAAI,KAAc;AACrB,iBAAK;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,IAAI;AAAA,IACR;AACA,WAAO;AAAA,EACX;AAAA,EACO,SAAS,KAAc;AAC1B,iBAAK;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,IAAI;AAAA,IACR;AACA,WAAO;AAAA,EACX;AAAA,EACO,SAAS,KAAc;AAC1B,iBAAK;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,IAAI;AAAA,IACR;AACA,WAAO;AAAA,EACX;AAAA,EACO,UAAU,QAAiB;AAC9B,iBAAK;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,OAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA,EACO,SAAS;AACZ,iBAAK;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,IACT;AACA,WAAO;AAAA,EACX;AAAA,EACO,UAAU,KAAe;AAC5B,iBAAK;AAAA,MACD,KAAK;AAAA,MACL,MAAI,IAAI,OAAK,KAAK;AAAA,IACtB;AACA,WAAO;AAAA,EACX;AAAA,EACO,WAAW,OAAe,MAAa;AAC1C,iBAAK;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,CAAC,CAAC,GAAE,GAAE,CAAC,GAAG,CAAC,GAAE,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,CAAC,CAAC,EAAE,IAAI;AAAA,IACnC;AACA,WAAO;AAAA,EACX;AAAA,EACO,OAAO,UAAmB;AAC7B,aAAS,QAAQ,CAAC,GAAG,MAAM;AACvB,WAAK,WAAW,GAAG,CAAU;AAAA,IACjC,CAAC;AACD,WAAO;AAAA,EACX;AAAA,EACO,YAAY,KAAa,OAAe,GAAG,MAAc,UAAU;AACtE,iBAAK;AAAA,MACD,KAAK;AAAA,MACL;AAAA,MACA,SAAS,KAAK,cAAc,SAAS,KAAK;AAAA,MAC1C;AAAA,MACA;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACO,QAAQ;AACX,WAAO,IAAI,SAAQ,KAAK,IAAI;AAAA,EAChC;AAAA,EAEA,OAAc,OAAO,QAAiB,QAA0B;AAC5D,QAAI,SAAS,GAAG;AAChB,iBAAK;AAAA,MACD,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,GAAG,GAAE,GAAE,CAAC,EAAE;AAAA,IACd;AACA,WAAO;AAAA,EACX;AAAA,EAEA,IAAW,WAAW;AAClB,WAAO,GAAG,KAAK,KAAK,EAAE,GAAG,KAAK,KAAK,EAAE,GAAG,KAAK,KAAK,EAAE,CAAC;AAAA,EACzD;AACJ;;;ACzEO,IAAM,aAAN,MAAiB;AAAA,EASpB,YAAmB,MAAY;AAAZ;AARnB,SAAQ,UAA0B,CAAC;AAS/B,SAAK,KAAK,KAAK,KAAK,SAAS,IAAI,WAAW,OAAO;AACnD,SAAK,GAAG,aAAa,wBAAwB;AAC7C,SAAK,GAAG,OAAO,KAAK,GAAG,KAAK;AAC5B,SAAK,GAAG,UAAU,KAAK,GAAG,WAAW,KAAK,GAAG,mBAAmB;AAEhE,SAAK,MAAM,IAAI,aAAa,KAAK,MAAM,IAAI;AAE3C,SAAK,KAAK,SAAS,SAAS,QAAQ,EAAE,UAAU,OAAO,CAAC,SAAkB;AACtE,WAAK,GAAG,SAAS,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC;AAAA,IACzC,CAAC;AAAA,EAEL;AAAA,EAhBA,IAAI,IAAsB;AACtB,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EAgBA,cAAc,MAAkB;AAC5B,SAAK,QAAQ,KAAK,IAAI;AAAA,EAC1B;AAAA,EAEA,QAAQ;AACJ,SAAK,GAAG,WAAW,GAAG,KAAK,KAAK,MAAM,UAAU;AAChD,SAAK,GAAG,WAAW,CAAG;AACtB,SAAK,GAAG,OAAO,KAAK,GAAG,UAAU;AACjC,SAAK,GAAG,OAAO,KAAK,GAAG,SAAS;AAChC,SAAK,GAAG,UAAU,KAAK,GAAG,MAAM;AAChC,SAAK,GAAG,MAAM,KAAK,GAAG,mBAAmB,KAAK,GAAG,gBAAgB;AAAA,EACrE;AAAA,EAEA,gBAAgB;AACZ,WAAO,IAAI,QAAQ,EACd;AAAA,MACI,KAAK,KAAK,KAAK,OAAO,MAAM,KAAK,KAAM;AAAA,MACxC;AAAA,MACA;AAAA,IACJ,EACC,UAAU,KAAK,KAAK,KAAK,OAAO,OAAO,SAAS,GAAG,GAAG,EAAE,CAAC,EACzD,OAAO,KAAK,KAAK,KAAK,OAAO,QAAQ,EACrC,UAAU,KAAK,KAAK,KAAK,OAAO,OAAO,SAAS,IAAI,IAAI,CAAC,CAAC;AAAA,EACnE;AAAA,EAEA,OAAO;AACH,SAAK,MAAM;AACX,SAAK,GAAG,WAAW,KAAK,IAAI,OAAO;AACnC,UAAM,SAAS,GAAG,EACb,UAAU,KAAK,KAAK,KAAK,OAAO,OAAO,SAAS,GAAG,GAAG,EAAE,CAAC,EACzD,OAAO,KAAK,KAAK,KAAK,OAAO,QAAQ,EACrC,UAAU,KAAK,KAAK,KAAK,OAAO,OAAO,SAAS,IAAI,IAAI,CAAC,CAAC;AAE/D,SAAK,IAAI,YAAY,YAAY,CAAC;AAClC,SAAK,IAAI,YAAY,qBAAqB,KAAK,cAAc,EAAE,IAAI;AACnE,SAAK,IAAI,YAAY,yBAAyB,OAAO,OAAO,EAAE,SAAS,GAAG;AAG1E,UAAM,QAAQ,KAAK,KAAK,MAAM,OAAO,CAAC;AACtC,SAAK,IAAI,YAAY,sBAAsB,MAAM,UAAU,GAAG;AAC9D,SAAK,IAAI,YAAY,kBAAkB,KAAK,IAAI,KAAK,SAAS,MAAM,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9E,SAAK,IAAI,YAAY,kBAAkB,KAAK,IAAI,KAAK,SAAS,MAAM,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9E,SAAK,IAAI,YAAY,kBAAkB,MAAM,MAAM,CAAC,CAAC;AACrD,SAAK,IAAI,YAAY,kBAAkB,MAAM,MAAM,CAAC,CAAC;AACrD,SAAK,IAAI,YAAY,kBAAkB,MAAM,MAAM,MAAM,GAAG,CAAC,CAAC;AAC9D,SAAK,IAAI,YAAY,qBAAqB,MAAM,SAAS,MAAM,GAAG,CAAC,CAAC;AACpE,SAAK,IAAI,YAAY,0BAA0B,MAAM,eAAe,SAAS,GAAE,GAAE,EAAE,EAAE,GAAG;AAGxF,SAAK,aAAa,KAAK,KAAK,KAAK;AAAA,EACrC;AAAA,EAEA,aAAa,SAAoB;AAC7B,YAAQ,SAAS,QAAQ,CAAC,MAAM;AAC5B,WAAK,WAAW,CAAC;AAAA,IACrB,CAAC;AAAA,EACL;AAAA,EAEA,WAAW,MAAiB;AACxB,QAAI,KAAK,SAAS;AACd,UAAK,KAAoB,QAAQ;AAC7B,aAAK,WAAW,MAAoB,KAAK,YAAY;AAAA,MACzD;AACA,WAAK,aAAa,IAAI;AAAA,IAC1B;AAAA,EAEJ;AAAA,EAEA,WAAW,MAAkB,kBAA2B;AACpD,SAAK,IAAI,WAAW,KAAK,OAAO,SAAS,SAAS;AAClD,SAAK,IAAI,cAAc,iBAAiB,KAAK,OAAO,YAAY;AAEhE,SAAK,IAAI,YAAY,oBAAoB,iBAAiB,IAAI;AAE9D,SAAK,IAAI,YAAY,iBAAiB,iBAAiB,OAAO,EAAE,UAAU,EAAE,IAAI;AAChF,SAAK,IAAI,cAAc,iBAAiB,KAAK,OAAO,YAAY;AAChE,SAAK,IAAI,YAAY,KAAK,QAAQ,OAAO;AAEzC,UAAM,mBAAmB,KAAK,cAAc;AAE5C,UAAM,eAAe,GAAG;AACxB,UAAM,aAAa,aAAa,OAAO;AACvC,UAAM,uBAAuB,iBAAiB,SAAS,UAAU;AAEjE,UAAM,4BAA4B,qBAAqB,SAAS,gBAAgB;AAChF,UAAM,qBAAqB,iBAAiB,OAAO;AACnD,UAAM,8BAA8B,mBAAmB,UAAU;AAEjE,SAAK,IAAI,YAAY,2BAA2B,0BAA0B,IAAI;AAC9E,SAAK,IAAI,YAAY,6BAA6B,4BAA4B,IAAI;AAClF,SAAK,IAAI,YAAY,iBAAiB,GAAG;AACzC,SAAK,IAAI,YAAY,sBAAsB,OAAO,KAAK,cAAc,CAAC;AAGtE,SAAK,IAAI,cAAc,gBAAgB,KAAK,OAAO,cAAc;AACjE,SAAK,IAAI,YAAY,aAAa,iBAAiB,IAAI;AAGvD,SAAK,IAAI,aAAa,KAAK,aAAa;AAAA,EAC5C;AACJ;;;AC3JO,IAAM,SAAN,MAAa;AAAA,EAqBhB,cAAc;AApBd,SAAQ,WAAoB;AAC5B,SAAQ,UAAmB;AAC3B,SAAQ,aAAqB;AAC7B,SAAQ,iBAA0B,CAAC;AAwBnC,SAAQ,YAA8B,CAAC;AAUvC,SAAQ,SAAiB;AAhBrB,aAAS,iBAAiB,oBAAoB,MAAM;AAChD,UAAI,KAAK,SAAS;AACd,aAAK,UAAU,CAAC,SAAS;AAAA,MAC7B;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EArBA,IAAW,UAAmB;AAC1B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,QAAQ,OAAgB;AAC/B,SAAK,WAAW;AAEhB,QAAI,OAAO;AACP,WAAK,QAAQ,YAAY,IAAI,IAAI,KAAK;AACtC,WAAK,KAAK,OAAO,sBAAsB,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,IAChE,OAAO;AACH,aAAO,qBAAqB,KAAK,EAAE;AACnC,WAAK,aAAa,YAAY,IAAI,IAAI,KAAK;AAAA,IAE/C;AAAA,EACJ;AAAA,EAUA,IAAW,YAAY;AACnB,WAAO,KAAK;AAAA,EAChB;AAAA,EAQQ,iBAAiB,OAAe,UAAiB;AACrD,UAAM,UAAU,KAAK,eAAe,MAAM,GAAE,KAAK,EAAE,OAAO,CAAC,YAAY,MAAM,aAAa,GAAG,CAAC,IAAI;AAClG,WAAO,KAAK,IAAI,WAAW,OAAO,IAAI,KAAG,WAAU;AAAA,EACvD;AAAA,EAEQ,MAAM,WAAmB;AAE7B,QAAI,KAAK,SAAS;AACd,YAAM,WAAW,YAAY,KAAK;AAClC,WAAK,eAAe,KAAK,QAAQ;AACjC,WAAK,iBAAiB,KAAK,eAAe,MAAM,GAAE,EAAE;AACpD,aAAM,KAAK,eAAe,SAAO,IAAG;AAChC,aAAK,eAAe,KAAK,KAAK,eAAe,CAAC,CAAC;AAAA,MACnD;AAEA,WAAK,QAAQ;AACb,WAAK;AAEL,YAAM,IAAI;AAAA,QACN;AAAA,QACA,OAAO,KAAK;AAAA,QACZ,WAAW,MAAO;AAAA,QAClB,OAAO,KAAK;AAAA,QACZ,YAAY,KAAK,iBAAiB,GAAG,QAAQ;AAAA,QAC7C,aAAa,KAAK,iBAAiB,GAAG,QAAQ;AAAA,QAC9C,aAAa,KAAK,iBAAiB,IAAI,QAAQ;AAAA,MACnD;AAEA,WAAK,UAAU,QAAQ,CAAC,MAAM;AAC1B,UAAE,CAAC;AAAA,MACP,CAAC;AAED,WAAK,KAAK,OAAO,sBAAsB,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,IAChE;AAAA,EACJ;AAAA,EAEO,QAAQ;AACX,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,QAAQ,YAAY,IAAI;AAC7B,SAAK,QAAQ,YAAY,IAAI;AAC7B,SAAK,KAAK,OAAO,sBAAsB,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,EAChE;AAAA,EAEO,IAAI,UAA0B;AACjC,SAAK,UAAU,KAAK,QAAQ;AAAA,EAChC;AACJ;;;AC/DO,IAAe,YAAf,MAAe,mBAAkB,QAAQ;AAAA,EA0F5C,YAAY,OAA4B,CAAC,GAAG;AApHhD;AAqHQ,UAAM;AAzFV,SAAO,eAAe;AAKtB,SAAO,QAAgB,CAAC;AACxB,SAAQ,YAAqB,GAAG,CAAC;AAQjC,SAAQ,QAAiB,GAAG,CAAC;AAO7B,SAAQ,YAAqB,GAAG,CAAC;AAgCjC,SAAQ,UAAmB;AAC3B,SAAQ,WAAoB;AAO5B,SAAO,aAAsB;AAQ7B,SAAO,WAAwB,CAAC;AAChC,SAAO,cAA8B,CAAC;AACtC,SAAO,mBAA4B,QAAQ;AAmBvC,SAAK,YAAY,KAAK,cAAc,SAAY,KAAK,YAAY;AACjE,SAAK,eAAe,KAAK,eAAe,CAAC,CAAC;AAE1C,SAAK,OAAO,KAAK,UAAQ,UAAK,WAAL,mBAAa,SAAQ,GAAG,CAAC;AAClD,SAAK,WAAW,KAAK,YAAY,GAAG,CAAC;AACrC,SAAK,WAAW,KAAK,YAAY,GAAG,CAAC;AACrC,SAAK,cAAc,KAAK,eAAe,GAAG,CAAC;AAAA,EAC/C;AAAA,EA1FA,IAAW,WAAoB;AAC3B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,SAAS,OAAgB;AAChC,SAAK,YAAY;AAAA,EACrB;AAAA,EAGA,IAAW,OAAgB;AACvB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,KAAK,OAAgB;AAC5B,SAAK,QAAQ;AAAA,EACjB;AAAA,EAEA,IAAW,WAAoB;AAC3B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,SAAS,OAAgB;AAChC,SAAK,YAAY;AAAA,EACrB;AAAA,EAEA,IAAW,cAAc;AACrB,WAAO,IAAI,QAAQ,EACd,WAAW,KAAK,YAAY,GAAG,CAAC,GAAG,SAAS,IAAI,QAAQ,GAAG,GAAG,EAAE,CAAC,CAAC,EAClE,WAAW,KAAK,eAAe,GAAG,CAAC,GAAG,SAAS,GAAG,GAAG,EAAE,CAAC,EACxD,QAAQ,KAAK,YAAY,GAAG,CAAC,GAAG,SAAS,IAAI,QAAQ,GAAG,IAAI,EAAE,CAAC,CAAC,EAChE,WAAW,KAAK,eAAe,GAAG,CAAC,GAAG,SAAS,IAAI,IAAI,CAAC,CAAC;AAAA,EAClE;AAAA,EAEA,IAAW,eAAwB;AAjEvC;AAkEQ,cAAQ,UAAK,WAAL,mBAAa,iBAAgB,IAAI,QAAQ,GAAG,SAAS,KAAK,WAAW;AAAA,EACjF;AAAA,EAEA,IAAW,iBAA0B;AACjC,WAAO,KAAK,aAAa,SAAS,SAAS,GAAG,GAAG,GAAG,EAAE,CAAC;AAAA,EAC3D;AAAA,EAEA,IAAW,gBAAyB;AAzExC;AA0EQ,cAAQ,UAAK,WAAL,mBAAa,kBAAiB,GAAG,GAAG,IAAI,KAAK,QAAQ;AAAA,EACjE;AAAA,EAEA,IAAW,iBAA0B;AACjC,WAAO,GAAG,CAAC;AAAA,EACf;AAAA,EAIA,IAAW,UAAmB;AAC1B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,QAAQ,OAAgB;AAC/B,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,IAAW,SAAkB;AACzB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,OAAO,OAAgB;AAC9B,SAAK,UAAU;AAAA,EACnB;AAAA,EAMA,IAAW,SAAkC;AACzC,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAW,OAAO,GAA4B;AAC1C,SAAK,KAAK,SAAS;AAAA,EACvB;AAAA,EAEA,IAAW,OAA+B;AACtC,WAAO,KAAK,MAAM,SAAS,KAAK,KAAK,KAAK,MAAM,QAAQ;AAAA,EAC5D;AAAA,EAEA,IAAW,SAAgC;AACvC,WAAO,KAAK,MAAM,SAAS,OAAO,KAAK,KAAK,MAAM,QAAQ;AAAA,EAC9D;AAAA,EAcO,QAAQ;AACX,SAAK,MAAM;AAAA,EAEf;AAAA,EAEO,SAAS,OAAgC;AArIpD;AAsIQ,gBAAM,WAAN,kBAAM,SAAW;AAEjB,SAAK,SAAS,KAAK,KAAK;AACxB,QAAI,MAAM,WAAW;AACjB,YAAM,MAAM;AAAA,IAChB;AACA,eAAU,oBAAoB,KAAK;AACnC,UAAM,aAAa;AACnB,WAAO;AAAA,EACX;AAAA,EAEO,YAAY,OAAkB;AACjC,QAAI,KAAK,SAAS,SAAS,KAAK,GAAG;AAC/B,WAAK,SAAS,OAAO,KAAK,SAAS,QAAQ,KAAK,GAAG,CAAC;AAAA,IACxD;AAAA,EACJ;AAAA,EAEO,eAAe,GAAmB;AACrC,QAAI,EAAE,SAAS,GAAG;AACd,WAAK,YAAY,KAAK,GAAG,CAAC;AAAA,IAC9B;AAAA,EACJ;AAAA,EAEA,OAAc,oBAAoB,OAAkB;AAChD,UAAM,YAAY,QAAQ,CAAC,eAAe;AA9JlD;AA+JY,UAAI,WAAW,WAAW,QAAW;AACjC,yBAAW,WAAX,uBAAW,SAAW;AACtB,mBAAW,MAAM;AAEjB,YAAI,WAAW,SAAS,cAAc,WAAW,OAAO;AACpD,gBAAM,MAAM,QAAQ,UAAkB;AACtC,gBAAM,MAAM,KAAK,UAAkB;AAAA,QACvC;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEO,KAAK,KAAuB;AAE/B,SAAK,YAAY,OAAO,CAAC,UAAU,MAAM,UAAU,MAAM,UAAU,QAAQ,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC;AACvG,SAAK,SAAS,OAAO,CAAC,UAAU,MAAM,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC;AACxE,SAAK,SAAS,OAAO,CAAC,UAAU,MAAM,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,UAAU,GAAG,CAAC;AAAA,EACjF;AAAA,EAEO,UAAU,KAAuB;AACpC,SAAK,YAAY,OAAO,CAAC,UAAU,MAAM,UAAU,MAAM,UAAU,OAAO,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC;AAAA,EAC1G;AACJ;;;ACjLO,IAAM,UAAN,cAAsB,UAAU;AAAA,EAAhC;AAAA;AACH,SAAO,OAAsB;AAAA;AAAA,EAE7B,IAAW,MAAK;AACZ,WAAO,KAAK,SAAS;AAAA,EACzB;AACJ;;;ACRO,IAAM,aAAN,MAAgB;AAAA,EAAhB;AACH,SAAQ,aAIH,CAAC;AAAA;AAAA,EAEC,MAAM,KAAa;AACtB,UAAM,OAAO,OAAO,QAAQ,KAAK,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,MAAI,MAAI,GAAG;AAChE,WAAO,OAAK,KAAK,CAAC,IAAE;AAAA,EACxB;AAAA,EACO,SAAS,KAAa,MAAa;AACtC,UAAM,IAAI,KAAK,MAAM,GAAG;AACxB,QAAI,GAAE;AACF,QAAE,MAAM,KAAK,IAAI;AACjB,UAAI,EAAE,OAAM;AACR,aAAK,SAAS,MAAM,EAAE,MAAM;AAAA,MAChC;AACA,aAAO;AAAA,IACX,OAAO;AACH,WAAK,WAAW,GAAG,IAAI;AAAA,QACnB,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO,CAAC;AAAA,MACZ;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AAAA,EACO,SAAS,MAAa,QAAe;AACxC,SAAK,SAAS,OAAO,QAAQ,CAAC;AAC9B,QAAI,KAAK,YAAW;AAChB,WAAK,MAAM;AAAA,IACf,OAAO;AACH,WAAK,YAAY;AAAA,IACrB;AAAA,EACJ;AAAA,EACO,OAAO,KAAa;AACvB,UAAM,IAAI,KAAK,MAAM,GAAG;AACxB,QAAG,KAAK,CAAC,EAAE,OAAM;AACb,QAAE,QAAQ;AACV,QAAE,MAAM,QAAQ,CAAC,SAAa,KAAK,SAAS,MAAM,EAAE,MAAM,CAAC;AAAA,IAC/D;AAAA,EACJ;AACJ;;;ACnCO,IAAe,OAAf,cAA4B,QAAQ;AAAA,EAYvC,YAAY,OAAuB,CAAC,GAAG;AACnC,UAAM,IAAI;AAZd,SAAO,SAAgC,CAAC;AAAA,EAaxC;AAAA,EATA,IAAW,SAAmC;AAC1C,WAAO,KAAK,MAAM;AAAA,EACtB;AAAA,EACA,IAAW,OAAO,OAAiC;AAC/C,SAAK,MAAM,SAAS;AAAA,EACxB;AAAA,EAMO,QAAc;AACjB,SAAK,KAAK,OAAO,OAAO;AACxB,SAAK,UAAU,IAAI,WAAW;AAC9B,SAAK,YAAY,OAAO,KAAK,KAAK,MAAM,EAAE,CAAC,CAAC;AAAA,EAChD;AAAA,EAEU,SAAS,GAAW,OAAc;AACxC,SAAK,OAAO,CAAC,IAAI;AACjB,SAAK,SAAS,KAAK;AACnB,aAAS,KAAK,YAAY,MAAM,UAAU,GAAG;AAAA,EACjD;AAAA,EAEO,YAAY,GAAW;AAC1B,WAAO,QAAQ,KAAK,MAAM,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAClD,YAAM,SAAS,QAAQ;AAAA,IAC3B,CAAC;AAAA,EACL;AAAA,EAEO,KAAK,KAAuB;AAC/B,UAAM,KAAK,GAAG;AACd,SAAK,YAAY,OAAO,CAAC,UAAU,MAAM,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC;AAC3E,SAAK,SAAS,OAAO,CAAC,UAAU,MAAM,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC;AAAA,EAC5E;AACJ;;;AC7CO,IAAM,eAAN,cAA2B,UAAU;AAAA,EAArC;AAAA;AACH,SAAO,OAAsB;AAC7B,SAAO,QAA2B;AAAA;AAEtC;;;ACIO,IAAe,OAAf,cAA4B,aAAa;AAAA,EAOrC,YAAY,MAAsB;AACrC,UAAM,IAAI;AAPd,SAAO,OAAsB;AAG7B,SAAO,WAAmB,CAAC;AAKvB,SAAK,QAAQ,QAAQ,KAAK,KAAK;AAC/B,SAAK,iBAAiB,KAAK,kBAAkB,GAAG;AAAA,EACpD;AAAA,EAEA,IAAI,iBAAgB;AAChB,WAAO,MAAM,eAAe,IAAI,KAAK,cAAc;AAAA,EACvD;AAAA,EAEO,oBAAoB;AACvB,SAAK,WAAW,KAAK,MAAM,WAAW,OAAO,KAAK,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC;AAAA,EAC9E;AAAA,EAEO,QAAQ,MAAqB;AAEhC,QAAI,SAAS;AAAM,aAAO;AAG1B,QAAI,KAAK;AAAO,aAAO;AAGvB,QAAI,KAAK,eAAe,IAAI,KAAK,KAAK,IAAI,KAAK,eAAe;AAAG,aAAO;AACxE,QAAI,KAAK,eAAe,IAAI,KAAK,eAAe,IAAI,KAAK,KAAK;AAAG,aAAO;AACxE,QAAI,KAAK,eAAe,IAAI,KAAK,KAAK,IAAI,KAAK,eAAe;AAAG,aAAO;AACxE,QAAI,KAAK,eAAe,IAAI,KAAK,eAAe,IAAI,KAAK,KAAK;AAAG,aAAO;AACxE,QAAI,KAAK,eAAe,IAAI,KAAK,KAAK,IAAI,KAAK,eAAe;AAAG,aAAO;AACxE,QAAI,KAAK,eAAe,IAAI,KAAK,eAAe,IAAI,KAAK,KAAK;AAAG,aAAO;AAExE,WAAO;AAAA,EACX;AACJ;;;AC7CO,IAAM,WAAN,cAAuB,KAAK;AAAA,EAA5B;AAAA;AACH,SAAO,WAAqB;AAAA;AAAA,EAE5B,qBAAgC;AAC5B,SAAK,kBAAkB;AACvB,WAAO,KAAK,SAAS,OAAO,CAAC,MAAI,EAAE,aAAa,UAAU,EAAE,IAAI,KAAK,sBAAsB,KAAK,IAAI,CAAC,KAAK,CAAC;AAAA,EAC/G;AAAA,EAEO,sBAAsB,MAAqB;AAC9C,WAAO,KAAK,uBAAuB;AAAA,MAC/B,GAAG,EAAE,KAAK,eAAe,IAAI,KAAK,KAAK,IAAI,KAAK,eAAe,IAAI,GAAG,CAAC;AAAA;AAAA,MACvE,GAAI,KAAK,eAAe,IAAI,KAAK,KAAK,IAAK,KAAK,eAAe,GAAG,GAAG,CAAC;AAAA;AAAA,MAEtE,GAAG,GAAG,EAAE,KAAK,eAAe,IAAI,KAAK,KAAK,IAAI,KAAK,eAAe,IAAI,CAAC;AAAA;AAAA,MACvE,GAAG,GAAI,KAAK,eAAe,IAAI,KAAK,KAAK,IAAK,KAAK,eAAe,GAAG,CAAC;AAAA;AAAA,MAEtE,GAAG,GAAG,GAAG,EAAE,KAAK,eAAe,IAAI,KAAK,KAAK,IAAI,KAAK,eAAe,EAAE;AAAA;AAAA,MACvE,GAAG,GAAG,GAAI,KAAK,eAAe,IAAI,KAAK,KAAK,IAAK,KAAK,eAAe,CAAC;AAAA;AAAA,IAE1E,GAAG,CAAC;AAAA,EACR;AACJ;;;ACvBO,IAAe,cAAf,MAAuD;AAAA,EAC1D,OAAa;AAAA,EAEb;AAEJ;AAgBO,IAAe,QAAf,MAAiD;AAAA,EACpD,YAAsB,SAA2B;AAA3B;AAAA,EAEtB;AAAA,EAGO,OAAO;AACV,SAAK,QAAQ,QAAQ,CAAC,MAAM;AACxB,QAAE,KAAK;AAAA,IACX,CAAC;AAAA,EACL;AACJ;AAEO,IAAM,WAAN,cAAuB,MAAe;AAAA,EAEzC,IAAI,QAAiB;AACjB,QAAI,QAAQ,GAAG,CAAC;AAChB,SAAK,QAAQ,QAAQ,CAAC,MAAM;AACxB,cAAQ,MAAM,IAAI,EAAE,KAAK;AAAA,IAC7B,CAAC;AACD,WAAO;AAAA,EACX;AACJ;AACO,IAAM,SAAN,cAAqB,MAAc;AAAA,EAEtC,IAAI,QAAgB;AAChB,QAAI,QAAQ;AACZ,SAAK,QAAQ,QAAQ,CAAC,MAAM;AACxB,eAAS,EAAE;AAAA,IACf,CAAC;AACD,WAAO;AAAA,EACX;AACJ;AAEO,IAAM,WAAN,MAAe;AAAA,EAGlB,YACI,YAAoD,CAAC,GACrD,UAAiD,CAAC,GACpD;AALF,qBAAsC,CAAC;AACvC,mBAAkC,CAAC;AAK/B,WAAO,QAAQ,SAAS,EAAE,QAAQ,CAAC,CAAC,KAAK,OAAO,MAAM;AAClD,WAAK,UAAU,GAAG,IAAI,IAAI,SAAS,OAAO;AAAA,IAC9C,CAAC;AACD,WAAO,QAAQ,OAAO,EAAE,QAAQ,CAAC,CAAC,KAAK,OAAO,MAAM;AAChD,WAAK,QAAQ,GAAG,IAAI,IAAI,OAAO,OAAO;AAAA,IAC1C,CAAC;AAAA,EACL;AAAA,EAEO,OAAO;AACV,WAAO,OAAO,KAAK,SAAS,EAAE,QAAQ,CAAC,MAAM;AACzC,QAAE,KAAK;AAAA,IACX,CAAC;AACD,WAAO,OAAO,KAAK,OAAO,EAAE,QAAQ,CAAC,MAAM;AACvC,QAAE,KAAK;AAAA,IACX,CAAC;AAAA,EACL;AAAA,EAEO,KAAK,KAAa;AACrB,WAAO,KAAK,UAAU,GAAG,EAAE;AAAA,EAC/B;AAAA,EAEO,OAAO,KAAa;AACvB,WAAO,KAAK,QAAQ,GAAG,EAAE;AAAA,EAC7B;AACJ;;;ACpFO,IAAM,kBAAN,cAA8B,YAAqB;AAAA,EACtD,cAAc;AACV,UAAM;AAQV,SAAQ,SAAkB,GAAG,CAAC;AAP1B,QAAI,CAAC,KAAK,QAAQ;AACd,WAAK,SAAS,IAAI,iBAAiB,aAAa,CAAC,MAAM;AACnD,aAAK,OAAO,KAAK,EAAE;AACnB,aAAK,OAAO,KAAK,EAAE;AAAA,MACvB,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEA,IAAI,QAAiB;AACjB,WAAO,KAAK;AAAA,EAChB;AAAA,EACO,OAAa;AAChB,SAAK,SAAS,GAAG,CAAC;AAAA,EACtB;AACJ;AAEO,IAAM,oBAAN,cAAgC,YAAoB;AAAA,EACvD,cAAc;AACV,UAAM;AAOV,SAAQ,SAAiB;AANrB,QAAI,CAAC,KAAK,QAAQ;AACd,WAAK,SAAS,IAAI,iBAAiB,SAAS,CAAC,MAAM;AAC/C,aAAK,UAAU,EAAE;AAAA,MACrB,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEA,IAAI,QAAgB;AAChB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,OAAa;AACT,SAAK,SAAS;AAAA,EAClB;AACJ;;;ACpCO,IAAM,iBAAN,cAA6B,YAAoB;AAAA,EAEpD,YAAY,KAAa;AACrB,UAAM;AAOV,SAAQ,SAAkB;AANtB,SAAK,OAAO,SAAS;AAAA,MACjB;AAAA,MACA,MAAM;AAAE,aAAK,SAAS;AAAA,MAAM;AAAA,MAC5B,MAAM;AAAE,aAAK,SAAS;AAAA,MAAO;AAAA,IACjC;AAAA,EACJ;AAAA,EAEA,IAAI,QAAgB;AAChB,WAAO,OAAO,KAAK,MAAM;AAAA,EAC7B;AACJ;AAEO,IAAM,yBAAN,cAAqC,YAAqB;AAAA,EAC7D,YAAY,MAAwC;AAChD,UAAM;AAiBV,SAAQ,SAAmD,CAAC,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO,KAAK,CAAC;AAC1F,SAAQ,UAAmB,GAAG,CAAC;AAjB3B,SAAK,QAAQ,CAAC,GAAG,MAAM;AACnB,WAAK,OAAO,SAAS;AAAA,QACjB;AAAA,QACA,MAAM;AAAE,eAAK,OAAO,KAAK,MAAM,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI;AAAM,eAAK,UAAU;AAAA,QAAG;AAAA,QACxE,MAAM;AAAE,eAAK,OAAO,KAAK,MAAM,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI;AAAO,eAAK,UAAU;AAAA,QAAG;AAAA,MAC7E;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEQ,YAAY;AAChB,SAAK,UAAU;AAAA,MACX,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC;AAAA,MACtC,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC;AAAA,IAC1C;AAAA,EACJ;AAAA,EAIA,IAAI,QAAiB;AACjB,WAAO,KAAK;AAAA,EAChB;AACJ;;;ACvCO,IAAM,KAAN,cAAiB,WAAkB;AAAA,EAC/B,YAAY,OAAqB,CAAC,GAAG;AACxC,UAAM,OAAO,IAAI;AACjB,SAAK,IAAI,MAAM,QAAQ;AACvB,SAAK,IAAI,MAAM,SAAS;AACxB,SAAK,IAAI,MAAM,SAAS;AACxB,SAAK,IAAI,MAAM,gBAAgB;AAAA,EACnC;AACJ;;;ACKO,IAAe,QAAf,cAA6B,UAAU;AAAA,EAmD1C,YAAY,OAAwB,CAAC,GAAG;AACpC,UAAM,IAAI;AAjDd,SAAO,OAAsB;AAC7B,SAAO,aAAqB,CAAC;AAC7B,SAAO,SAAkB,CAAC;AAC1B,SAAQ,iBAA6B,CAAC;AACtC,SAAO,YAAgB,IAAI,GAAG;AAG9B,SAAQ,UAKJ;AAAA,MACI,QAAQ,QAAQ,EAAE,CAAC;AAAA,MACnB,UAAU,QAAQ,EAAE,CAAC;AAAA,MACrB,QAAQ,QAAQ,EAAE,CAAC;AAAA,MACnB,KAAK;AAAA,IACT;AAiCA,SAAK,OAAO,KAAK;AAAA,EACrB;AAAA,EAhCA,MAAM,SAA0B;AAC5B,SAAK,UAAU,YAAY,OAAO;AAAA,EACtC;AAAA,EAEA,QAAQ,GAAS;AACb,SAAK,WAAW,KAAK,CAAC;AAAA,EAU1B;AAAA,EAEA,SAAS,GAAU;AACf,SAAK,OAAO,KAAK,CAAC;AAClB,SAAK,SAAS,CAAC;AAAA,EACnB;AAAA,EAEA,IAAW,SAA8B;AACrC,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,OAAO,OAA4B;AAC1C,SAAK,UAAU;AAAA,EACnB;AAAA,EAOO,QAAc;AACjB,SAAK,KAAK,OAAO,QAAQ;AACzB,SAAK,UAAU,MAAM;AAAA,EACzB;AAAA,EAEO,KAAK,KAA6B;AACrC,UAAM,KAAK,GAAG;AAEd,SAAK,eAAe,QAAQ,CAAC,GAAG,MAAM;AAClC,QAAE,WAAW,KAAK,WAAW,CAAC,EAAE;AAChC,QAAE,OAAO,KAAK,WAAW,CAAC,EAAE,KAAK,MAAM;AAAA,IAC3C,CAAC;AAAA,EAEL;AAAA,EAEO,UAAU,KAA6B;AAC1C,UAAM,UAAU,GAAG;AACnB,SAAK,SAAS,KAAK;AAAA,EACvB;AAEJ;;;AC7FO,IAAM,SAAN,MAAa;AASpB;AATa,OACK,IAAU,CAAC,GAAK,GAAK,GAAK,CAAG;AADlC,OAEK,IAAU,CAAC,GAAK,GAAK,GAAK,CAAG;AAFlC,OAGK,IAAU,CAAC,GAAK,GAAK,GAAK,CAAG;AAHlC,OAIK,IAAU,CAAC,GAAK,GAAK,GAAK,CAAG;AAJlC,OAKK,IAAU,CAAC,GAAK,GAAK,GAAK,CAAG;AALlC,OAMK,IAAU,CAAC,GAAK,GAAK,GAAK,CAAG;AANlC,OAOK,IAAU,CAAC,GAAK,GAAK,GAAK,CAAG;AAPlC,OAQK,IAAU,CAAC,GAAK,GAAK,GAAK,CAAG;;;ACExC,IAAe,aAAf,cAAkC,UAAU;AAAA,EAS/C,YAAY,OAA6B,CAAC,GAAG;AACzC,UAAM,IAAI;AARd,SAAO,iBAAyB;AAChC,SAAO,UAAkB;AACzB,SAAO,SAA6C,CAAC;AAOjD,SAAK,UAAU,KAAK,YAAY,SAAY,KAAK,UAAU;AAC3D,SAAK,iBAAiB,KAAK,mBAAmB,SAAY,KAAK,iBAAiB;AAChF,SAAK,iBAAiB,KAAK,mBAAmB,SAAY,KAAK,iBAAiB;AAAA,EACpF;AAAA,EAEO,QAAQ;AACX,SAAK,SAAS;AAAA,MACV,gBAAgB,KAAK,IAAI,aAAa,KAAK,eAAe,KAAK,IAAI,CAAC;AAAA,MACpE,SAAS,KAAK,IAAI,aAAa,KAAK,YAAY,GAAG,WAAW,WAAW;AAAA,MACzE,cAAc,KAAK,IAAI,aAAa,KAAK,cAAc,KAAK,IAAI,CAAC;AAAA,MACjE,cAAc,KAAK,IAAI,aAAa,KAAK,aAAa,CAAC;AAAA,IAC3D;AACA,SAAK,IAAI,cAAc,IAAI;AAAA,EAC/B;AAAA,EAEO,QAAQ;AACX,SAAK,MAAM;AAAA,EAIf;AAMJ;;;ACvCO,IAAM,YAAN,MAAgB;AAAA,EAYnB,YAAmB,MAAY,MAA2B;AAAvC;AACf,QAAI,KAAK,OAAO;AACZ,WAAK,YAAY,KAAK,KAAK;AAAA,IAC/B,WAAW,KAAK,KAAK;AACjB,WAAK,KAAK;AACV,WAAK,QAAQ,IAAI,MAAM;AACvB,WAAK,MAAM,SAAS,MAAM;AACtB,aAAK,KAAK;AACV,aAAK,YAAY,KAAK,KAAK;AAAA,MAC/B;AACA,WAAK,MAAM,MAAM,GAAG,cAAO,SAAS,MAAI,KAAI,YAAK;AAAA,IACrD,OAAO;AACH,WAAK,UAAU,KAAK,SAAS,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;AAAA,IACrD;AAAA,EACJ;AAAA,EAzBA,OAAO,cAAc,OAAe,OAAyB;AACzD,UAAM,MAAM,IAAI;AAChB,WAAO;AAAA,MACH,QAAQ,MAAO,MAAM;AAAA,MAAI;AAAA,MACzB,QAAQ,MAAO,MAAM;AAAA,MAAI;AAAA,OACxB,QAAQ,KAAK,MAAO,MAAM;AAAA,MAAI;AAAA,IACnC;AAAA,EAEJ;AAAA,EAkBA,UAAU,QAAiB;AAEvB,UAAM,KAAK,SAAS,cAAc,QAAQ;AAC1C,OAAG,QAAQ,OAAO;AAClB,OAAG,SAAS;AACZ,UAAM,QAAQ,GAAG,WAAW,IAAI;AAEhC,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAM,QAAQ,OAAO,CAAC;AACtB,YAAM,YAAY,QAAQ,aAAM,CAAC,IAAI,KAAG,MAAK,aAAM,CAAC,IAAI,KAAG,MAAK,aAAM,CAAC,IAAI,KAAG,MAAK,aAAM,CAAC,GAAC;AAC3F,YAAM;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AACA,SAAK,YAAY,EAAE;AAAA,EAEvB;AAAA,EACA,YAAY,KAA2C;AACnD,UAAM,KAAK,KAAK,KAAK;AACrB,UAAM,UAAU,GAAG,cAAc;AACjC,OAAG,YAAY,GAAG,YAAY,OAAO;AACrC,OAAG;AAAA,MACC,GAAG;AAAA,MACH;AAAA,MACA,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH;AAAA,IACJ;AACA,OAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,OAAO;AAEjE,QAAI,KAAK,WAAW,IAAI,KAAK,KAAK,KAAK,WAAW,IAAI,MAAM,GAAG;AAC3D,SAAG,eAAe,GAAG,UAAU;AAAA,IACnC,OAAO;AACH,SAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,SAAG,cAAc,GAAG,YAAY,GAAG,gBAAgB,GAAG,aAAa;AACnE,SAAG,cAAc,GAAG,YAAY,GAAG,oBAAoB,GAAG,MAAM;AAAA,IACpE;AAEA,SAAK,UAAU;AAAA,EACnB;AAAA,EAEA,WAAW,OAAe;AACtB,YAAQ,QAAS,QAAQ,OAAQ;AAAA,EACrC;AACJ;;;ACjEO,IAAM,WAAN,MAAM,kBAAiB,WAAW;AAAA,EAoBrC,YAAY,MAA0B;AAClC,UAAM,IAAI;AAnBd,SAAO,OAAsB;AAC7B,SAAO,SAA6C,CAAC;AACrD,SAAO,gBAAgB;AACvB,SAAO,aAAa,IAAI,IAAI,IAAI;AAiB5B,SAAK,aAAa,KAAK,KAAK,MAAM,OAAO,CAAC,MAAM,MAAM,CAAC,EAAE;AACzD,QAAI,KAAK,aAAa,GAAG;AACrB;AAAA,IACJ;AACA,SAAK,gBAAgB,KAAK,eAAe,IAAI,KAAK;AAClD,SAAK,YAAY,KAAK,eAAe,IAAI,IAAI;AAC7C,SAAK,aAAa,KAAK;AAEvB,QAAI,KAAK;AAAQ,WAAK,SAAS,KAAK;AAAA;AAC/B,WAAK,SAAS;AAAA,QACf,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,MACX,EAAE,MAAM,GAAG,KAAK,SAAS;AAAA,EAG7B;AAAA,EA/BA,IAAW,OAAgB;AACvB,WAAO,MAAM;AAAA,EACjB;AAAA,EACA,IAAW,KAAK,OAAgB;AAC5B,UAAM,OAAO;AACb,QAAI,KAAK,QAAO;AACZ,WAAK,OAAO,iBAAiB,KAAK,IAAI,aAAa,KAAK,eAAe,KAAK,IAAI,CAAC;AAAA,IACrF;AAAA,EACJ;AAAA,EAyBO,QAAc;AACjB,UAAM,MAAM;AACZ,SAAK,UAAU,IAAI,UAAU,KAAK,MAAM,KAAK,aAAa,EAAE,KAAK,KAAK,WAAW,IAAI,EAAE,OAAO,KAAK,OAAO,CAAC;AAAA,EAC/G;AAAA,EAEU,cAAc;AACpB,QAAI,IAAc,KAAK,cAAc,EAAE,MAAM,MAAM,GAAG,KAAK,YAAY,CAAC;AACxE,WAAO;AAAA,EACX;AAAA,EAEU,eAAe,MAAe;AACpC,WAAO,UAAS;AAAA,MACZ,UAAS;AAAA,QACL,KAAK,cAAc,EAAE;AAAA,QACrB,KAAK;AAAA,QACL;AAAA,MACJ;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EAEU,eAAe;AACrB,WAAO,UAAS;AAAA,MACZ,KAAK,cAAc,EAAE;AAAA,MACrB,KAAK;AAAA,MACL;AAAA,IACJ;AAAA,EACJ;AAAA,EAEU,gBAAgB;AACtB,QAAI,IAAc,CAAC;AACnB,QAAI,KAAK,YAAY;AACjB,aAAO,UAAS;AAAA,QACZ,KAAK,cAAc,EAAE;AAAA,QACrB,KAAK;AAAA,QACL;AAAA,MACJ;AAAA,IACJ,OAAO;AACH,YAAM,MAAM,IAAI,KAAK;AAErB,eAAS,QAAQ,GAAG,QAAQ,KAAK,WAAW,SAAS;AACjD,UAAE;AAAA,UACE,QAAQ,MAAO,MAAM;AAAA,UAAI;AAAA,UACzB,QAAQ,MAAO,MAAM;AAAA,UAAI;AAAA,WACxB,QAAQ,KAAK,MAAO,MAAM;AAAA,UAAI;AAAA,WAC9B,QAAQ,KAAK,MAAO,MAAM;AAAA,UAAI;AAAA,QACnC;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAAA,EAGU,qBAA+B;AACrC,WAAO;AAAA,MACH;AAAA,MAAG;AAAA,MAAG;AAAA,MACN;AAAA,MAAG;AAAA,MAAG;AAAA,MACN;AAAA,MAAG;AAAA,MAAG;AAAA,MACN;AAAA,MAAG;AAAA,MAAG;AAAA,MACN;AAAA,MAAG;AAAA,MAAG;AAAA,MACN;AAAA,MAAG;AAAA,MAAI;AAAA,MACP;AAAA,MAAI;AAAA,MAAI;AAAA,MACR;AAAA,MAAI;AAAA,MAAI;AAAA,MACR;AAAA,MAAI;AAAA,MAAI;AAAA,MACR;AAAA,MAAI;AAAA,MAAI;AAAA,MACR;AAAA,MAAI;AAAA,MAAI;AAAA,MACR;AAAA,MAAI;AAAA,MAAI;AAAA,IACZ;AAAA,EACJ;AAAA,EACU,wBAAkC;AACxC,WAAO;AAAA,MACH;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,MAEV;AAAA,MAAK;AAAA,MAAK;AAAA,MACV;AAAA,MAAK;AAAA,MAAK;AAAA,IACd;AAAA,EACJ;AAAA,EACU,sBAAgC;AACtC,WAAO;AAAA,MACH;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAC1D;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACvD;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACvD;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAC3D;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACvD;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,IAC/D;AAAA,EACJ;AAAA,EACU,uBAAiC;AACvC,WAAO;AAAA,MACH;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACf;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,IACnB;AAAA,EACJ;AAAA,EACU,gBAA4B;AAClC,WAAO;AAAA,MACH,OAAO,KAAK,mBAAmB;AAAA,MAC/B,UAAU,KAAK,sBAAsB;AAAA,MACrC,QAAQ,KAAK,oBAAoB;AAAA,MACjC,SAAS,KAAK,qBAAqB;AAAA,IACvC;AAAA,EACJ;AAAA,EAEA,OAAc,iBAAiB,OAAiB,MAAe,OAAyB;AACpF,UAAM,IAAI,QAAQ;AAClB,QAAI,KAAK,MAAM;AAAG,cAAQ,MAAM,MAAM,GAAG,IAAI,CAAC;AAAA,aACrC,KAAK,MAAM;AAAG,cAAQ,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC;AAAA,aAC9C,KAAK,MAAM;AAAG,cAAQ,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC;AACvD,WAAO;AAAA,EACX;AAAA,EAEA,OAAc,MAAM,OAAiB,MAA0B;AAC3D,WAAO,OAAO,MAAM,IAAI,CAAC,GAAG,MAAM,IAAI,KAAK,MAAO,IAAI,CAAE,CAAC,IAAI;AAAA,EACjE;AAEJ;;;AC3MO,IAAM,QAAN,cAAoB,QAAO;AAAA,EAE9B,IAAW,QAA0B;AACjC,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,MAAM,OAA0B;AACvC,SAAK,SAAS;AAAA,MACV,MAAM,CAAC;AAAA,MACP,MAAM,CAAC,MAAI,UAAa,MAAM,CAAC,KAAG,MAAM,CAAC,IAAE,MAAM,CAAC,IAAE,IAAE,MAAM,CAAC;AAAA,IACjE;AAAA,EACJ;AAAA,EAEA,IAAW,QAA0B;AACjC,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,MAAM,OAAyB;AACtC,SAAK,SAAS;AAAA,MACV,MAAM,CAAC;AAAA,MACP,MAAM,CAAC,MAAI,UAAa,MAAM,CAAC,KAAG,MAAM,CAAC,IAAE,MAAM,CAAC,IAAE,IAAE,MAAM,CAAC;AAAA,IACjE;AAAA,EACJ;AAAA,EAKO,YAAY,MAAuB;AACtC,UAAM,IAAI;AACV,SAAK,QAAQ,KAAK;AAClB,SAAK,QAAQ,KAAK;AAClB,SAAK,QAAQ,KAAK,SAAS,OAAO;AAClC,SAAK,WAAW,KAAK;AACrB,SAAK,YAAY,KAAK,aAAa,QAAQ;AAAA,EAC/C;AAAA,EAEO,QAAc;AACjB,UAAM,MAAM;AACZ,SAAK,SAAS,IAAI,SAAS;AAAA,MACvB,aAAa,GAAG,KAAI,KAAI,CAAC;AAAA,MACzB,UAAU,GAAG,MAAK,MAAK,CAAC;AAAA,MACxB,QAAQ,CAAC,KAAK,OAAO,OAAO,GAAE,OAAO,GAAE,OAAO,GAAE,OAAO,GAAE,OAAO,CAAC;AAAA,MACjE,MAAM,GAAG,GAAE,GAAE,CAAC;AAAA,MACd,UAAU,GAAG,KAAK,UAAU,GAAE,KAAK,UAAU,GAAE,KAAK,UAAU,CAAC,EAAE,MAAM,KAAK,EAAE;AAAA,MAC9E,gBAAgB;AAAA,IACpB,CAAC,CAAC;AAAA,EACN;AACJ;;;AC/BO,IAAM,QAAN,cAAoB,WAAW;AAAA,EAoClC,YAAY,OAAwB,CAAC,GAAG;AACpC,UAAM,kCAAK,OAAS,EAAE,WAAW,MAAM,EAAG;AApC9C,SAAO,OAAsB;AAE7B,SAAO,gBAAwB;AAC/B,SAAQ,aAAuB,CAAC;AAChC,SAAQ,OAAiC,CAAC;AAC1C,SAAQ,WAAoC,CAAC;AAC7C,SAAQ,kBAA4B,CAAC;AACrC,SAAQ,eAAyB,CAAC;AAClC,SAAQ,gBAA0B,CAAC;AACnC,SAAQ,iBAA2B,CAAC;AACpC,SAAQ,yBAAmC,CAAC;AA4BxC,SAAK,UAAU,KAAK,YAAY,SAAY,KAAK,UAAU;AAC3D,SAAK,iBAAiB,KAAK,mBAAmB,SAAY,KAAK,iBAAiB;AAEhF,SAAK,OAAO,KAAK,IAAI,MAAM,GAAG,EAAE,MAAM,GAAG,EAAE,EAAE,KAAK,GAAG,IAAI;AAEzD,QAAI,KAAK,QAAQ,SAAS,KAAK,KAAK,IAAI,GAAG;AACvC,WAAK,SAAS,GAAG,cAAO,SAAS,MAAI,SAAQ,YAAK,IAAK,EAClD,KAAK,KAAK,SAAS,KAAK,IAAI,CAAC,EAC7B,KAAK,KAAK,SAAS,KAAK,IAAI,CAAC,EAC7B,KAAK,MAAM;AACR,aAAK,MAAM;AACX,aAAK,QAAQ,OAAO,KAAK,GAAG;AAAA,MAChC,CAAC;AAAA,IACT;AAAA,EACJ;AAAA,EAvCO,UAA6B;AAChC,WAAO;AAAA,MACH,eAAe,KAAK;AAAA,MACpB,YAAY,KAAK;AAAA,MACjB,UAAU,KAAK;AAAA,MACf,iBAAiB,KAAK;AAAA,MACtB,cAAc,KAAK;AAAA,MACnB,eAAe,KAAK;AAAA,MACpB,wBAAwB,KAAK;AAAA,IACjC;AAAA,EACJ;AAAA,EAEO,SAAS,MAAyB;AACrC,SAAK,gBAAgB,KAAK;AAC1B,SAAK,aAAa,KAAK;AACvB,SAAK,WAAW,KAAK;AACrB,SAAK,kBAAkB,KAAK;AAC5B,SAAK,eAAe,KAAK;AACzB,SAAK,gBAAgB,KAAK;AAC1B,SAAK,yBAAyB,KAAK;AAAA,EACvC;AAAA,EAqBA,MAAc,SAASC,MAAa;AAChC,QAAI,SAAS,KAAKA,IAAG,GAAG;AACpB,YAAM,KAAK,SAAS,GAAG,cAAO,SAAS,MAAI,QAAO,YAAK,MAAO,OAAAA,KAAI,MAAM,QAAQ,EAAE,CAAC,EAAE,MAAM,IAAI,EAAE,CAAC,EAAE,KAAK,EAAG,EACvG,KAAK,CAAC,MAAM;AACT,UAAE,MAAM,SAAS,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,MAAc;AAC/C,gBAAM,QAAQ,EAAE,MAAM,YAAY,EAAE,OAAO,CAAC,MAAM,CAAC;AAEnD,eAAK,SAAS,MAAM,MAAM,CAAC,IAAI,OAAO,YAAY,MAAM,IAAI,CAAC,SAAS;AAClE,kBAAM,IAAI,KAAK,MAAM,GAAG;AACxB,mBAAO,CAAC,EAAE,MAAM,GAAG,CAAC;AAAA,UACxB,CAAC,CAAC;AAAA,QACN,CAAC;AAAA,MACL,CAAC;AAEL,aAAOA;AAAA,IAEX,OAAO;AACH,aAAOA;AAAA,IACX;AAAA,EACJ;AAAA,EAEQ,WAAW,WAAqB,KAAa,QAAwB,SAAyB,SAA0B;AAC5H,UAAM,gBAAgB,UAAU,MAAM,CAAC;AACvC,UAAM,gBAAgB,cAAc,IAAI,MAAM;AAE9C,KAAE;AAAA,MACE,QAAQ,MAAM;AACV,cAAM,cAAc,CAAC;AAAA,MACzB;AAAA,MACA,GAAG,MAAM;AACL,YAAI,cAAc,WAAW,GAAG;AAE5B,eAAK,gBAAgB,KAAK,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AACzD,eAAK,gBAAgB,KAAK,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AACzD,eAAK,gBAAgB,KAAK,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AAAA,QAE7D,WAAW,cAAc,WAAW,GAAG;AAEnC,eAAK,gBAAgB,KAAK,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AACzD,eAAK,gBAAgB,KAAK,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AACzD,eAAK,gBAAgB,KAAK,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AAEzD,eAAK,uBAAuB,KAAK,GAAG,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC;AACjE,eAAK,uBAAuB,KAAK,GAAG,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC;AACjE,eAAK,uBAAuB,KAAK,GAAG,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC;AAAA,QAErE,OAAO;AACH,eAAK,gBAAgB,KAAK,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AACzD,eAAK,gBAAgB,KAAK,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AACzD,eAAK,gBAAgB,KAAK,GAAG,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;AAEzD,eAAK,uBAAuB,KAAK,GAAG,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC;AACjE,eAAK,uBAAuB,KAAK,GAAG,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC;AACjE,eAAK,uBAAuB,KAAK,GAAG,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC;AAEjE,eAAK,cAAc,KAAK,GAAG,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC;AACxD,eAAK,cAAc,KAAK,GAAG,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC;AACxD,eAAK,cAAc,KAAK,GAAG,QAAQ,cAAc,CAAC,IAAI,CAAC,CAAC;AAExD,eAAK,eAAe;AAAA,YAChB,GAAG,UAAU,cAAc,OAAO,KAAK,KAAK,IAAI,EAAE,QAAQ,GAAG,GAAG,OAAO,KAAK,KAAK,IAAI,EAAE,MAAM;AAAA,UACjG;AAAA,QACJ;AAEA,aAAK,aAAa,KAAK,KAAK,aAAa,MAAM;AAC/C,aAAK,aAAa,KAAK,KAAK,aAAa,MAAM;AAC/C,aAAK,aAAa,KAAK,KAAK,aAAa,MAAM;AAC/C,aAAK,WAAW,KAAK,GAAG;AACxB,aAAK,WAAW,KAAK,GAAG;AACxB,aAAK,WAAW,KAAK,GAAG;AAAA,MAC5B;AAAA,IACJ,EAAiC,UAAU,CAAC,CAAC,MAAM,MAAM;AAAA,IAAE,IAAI;AAE/D,WAAO;AAAA,EACX;AAAA,EAEQ,SAASA,MAAa;AAC1B,QAAI,MAAM;AACV,UAAM,QAAQA,KAAI,MAAM,YAAY;AACpC,UAAM,YAAwB,CAAC;AAC/B,UAAM,SAAyB,CAAC;AAChC,UAAM,UAA0B,CAAC;AACjC,UAAM,UAA2B,CAAC;AAElC,UAAM,QAAQ,OAAO,SAAS;AAC1B,YAAM,QAAQ,KAAK,MAAM,UAAU;AACnC,YAAM,UAAU,MAAM,CAAC;AACvB,YAAM,UAAU,MAAM,MAAM,CAAC,EAAE,IAAI,MAAM;AAEzC,UAAI,YAAY,KAAK;AACjB,eAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AAAA,MACpD,WAAW,YAAY,MAAM;AACzB,gBAAQ,KAAK,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AAAA,MACrD,WAAW,YAAY,MAAM;AACzB,gBAAQ,KAAK,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AAAA,MACzC,OAAO;AACH,kBAAU,KAAK,KAAK;AAAA,MACxB;AAAA,IAEJ,CAAC;AAED,cAAU,QAAQ,CAAC,UAAU;AACzB,YAAM,KAAK,WAAW,OAAO,KAAK,QAAQ,SAAS,OAAO;AAAA,IAC9D,CAAC;AAED,SAAK,gBAAgB,KAAK,aAAa;AAAA,EAC3C;AAAA,EAEA,MAAa,SAAS,KAA2B;AAC7C,UAAM,WAAW,MAAM,MAAM,GAAG;AAChC,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,WAAO;AAAA,EACX;AAAA,EAEU,cAAc;AACpB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEU,eAAe,MAAe;AACpC,WAAO,KAAK,gBAAgB,IAAI,CAAC,GAAG,MAAM,IAAI,KAAK,MAAM,IAAI,CAAC,CAAC;AAAA,EACnE;AAAA,EAEU,eAAe;AACrB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEU,cAAc,MAAe;AAEnC,SAAK,UAAU,IAAI,UAAU,KAAK,MAAM,CAAC,CAAC;AAE1C,QAAI,OAAO,OAAO,KAAK,QAAQ,EAAE,QAAQ;AAErC,YAAM,WAAW,OAAO,OAAO,KAAK,QAAQ;AAC5C,YAAM,WAAW,SAAS,KAAK,CAAC,MAAM,EAAE,MAAM;AAE9C,UAAI,UAAU;AACV,aAAK,UAAU,IAAI,UAAU,KAAK,MAAM;AAAA,UACpC,KAAK,OAAO,YAAK,MAAO,gBAAS,OAAO,KAAK,GAAG,EAAE,KAAK;AAAA,QAC3D,CAAC;AAAA,MACL,OAAO;AACH,aAAK,UAAU,IAAI,UAAU,KAAK,MAAM;AAAA,UACpC,OAAO,SAAS,IAAI,CAAC,MAAM;AAAA,YACvB,GAAI,EAAE,KAAK,EAAE,GAAG,IAAI,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC;AAAA,YACtC,EAAE,IAAI,OAAO,EAAE,EAAE,CAAC,CAAC,IAAI;AAAA,UAAC,CAAU;AAAA,QAC1C,CAAC;AAAA,MACL;AAAA,IAEJ;AAEA,WAAO,KAAK;AAAA,EAChB;AACJ;;;ACpOO,IAAe,YAAf,cAAiC,UAAU;AAAA,EAO9C,YAAY,MAA2B;AACnC,UAAM,IAAI;AAPd,SAAO,OAAsB;AAC7B,SAAO,OAAgC,CAAC;AAAA,EAOxC;AAAA,EALA,IAAW,MAAK;AACZ,WAAO,KAAK,SAAS;AAAA,EACzB;AAIJ;;;ACdO,IAAe,OAAf,MAAoB;AAAA,EACvB,OAAO,OAAO,GAAU;AACpB,WAAO;AAAA,EACX;AAAA,EACA,OAAO,WAAW,GAAU;AACxB,WAAO,IAAI;AAAA,EACf;AAAA,EACA,OAAO,YAAY,GAAU;AACzB,WAAO,KAAK,IAAI,MAAM,IAAI;AAAA,EAC9B;AAAA,EACA,OAAO,cAAc,GAAU;AAC3B,WAAO,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI;AAAA,EAC/D;AAAA,EACA,OAAO,YAAY,GAAU;AACzB,WAAO,IAAI,IAAI;AAAA,EACnB;AAAA,EACA,OAAO,aAAa,GAAU;AAC1B,WAAO,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC;AAAA,EAChC;AAAA,EACA,OAAO,eAAe,GAAU;AAC5B,WAAO,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI;AAAA,EACnE;AAAA,EACA,OAAO,YAAY,GAAU;AACzB,WAAO,IAAI,IAAI,IAAI;AAAA,EACvB;AAAA,EACA,OAAO,aAAa,GAAU;AAC1B,WAAO,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC;AAAA,EAChC;AAAA,EACA,OAAO,eAAe,GAAU;AAC5B,WAAO,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI;AAAA,EACvE;AAAA,EACA,OAAO,YAAY,GAAU;AACzB,WAAO,IAAI,IAAI,IAAI,IAAI;AAAA,EAC3B;AAAA,EACA,OAAO,aAAa,GAAU;AAC1B,WAAO,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC;AAAA,EAChC;AAAA,EACA,OAAO,eAAe,GAAU;AAC5B,WAAO,IAAI,MAAM,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI;AAAA,EAC5E;AAAA,EACA,OAAO,WAAW,GAAU;AACxB,WAAO,IAAI,KAAK,IAAK,IAAI,KAAK,KAAM,CAAC;AAAA,EACzC;AAAA,EACA,OAAO,YAAY,GAAU;AACzB,WAAO,KAAK,IAAK,IAAI,KAAK,KAAM,CAAC;AAAA,EACrC;AAAA,EACA,OAAO,cAAc,GAAU;AAC3B,WAAO,EAAE,KAAK,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK;AAAA,EAC1C;AAAA,EACA,OAAO,WAAW,GAAU;AACxB,WAAO,MAAM,IAAI,IAAI,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE;AAAA,EAChD;AAAA,EACA,OAAO,YAAY,GAAU;AACzB,WAAO,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,MAAM,CAAC;AAAA,EAChD;AAAA,EACA,OAAO,cAAc,GAAU;AAC3B,WAAO,MAAM,IACP,IACA,MAAM,IACF,IACA,IAAI,MACA,KAAK,IAAI,GAAG,KAAK,IAAI,EAAE,IAAI,KAC1B,IAAI,KAAK,IAAI,GAAG,MAAM,IAAI,EAAE,KAAK;AAAA,EACpD;AAAA,EACA,OAAO,WAAW,GAAU;AACxB,WAAO,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC;AAAA,EAC3C;AAAA,EACA,OAAO,YAAY,GAAU;AACzB,WAAO,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC;AAAA,EAC3C;AAAA,EACA,OAAO,cAAc,GAAU;AAC3B,WAAO,IAAI,OACJ,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC,KAAK,KACzC,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC,IAAI,KAAK;AAAA,EACzD;AAAA,EACA,OAAO,WAAW,GAAU;AACxB,WAAO,UAAU,IAAI,IAAI,IAAI,UAAU,IAAI;AAAA,EAC/C;AAAA,EACA,OAAO,YAAY,GAAU;AACzB,WAAO,IAAI,UAAU,KAAK,IAAI,IAAI,GAAG,CAAC,IAAI,UAAU,KAAK,IAAI,IAAI,GAAG,CAAC;AAAA,EACzE;AAAA,EACA,OAAO,cAAc,GAAU;AAC3B,WAAO,IAAI,MACJ,KAAK,IAAI,IAAI,GAAG,CAAC,KAAK,UAAU,IAAI,WAAY,KAChD,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,WAAW,IAAI,IAAI,KAAK,WAAW,KAAK;AAAA,EAC7E;AACJ;;;ACpEO,IAAM,YAAN,MAAgB;AAAA,EAwBZ,YAAY,MAA2B;AAvB9C,SAAO,WAAmB;AAM1B,SAAO,YAAoB;AAG3B,SAAQ,OAAgB,CAAC;AAGzB,SAAQ,UAAmB;AAYvB,SAAK,QAAQ,KAAK,SAAS,CAAC;AAC5B,SAAK,OAAO,KAAK,QAAQ;AACzB,SAAK,OAAO,KAAK,QAAQ;AACzB,SAAK,OAAO,KAAK,QAAQ;AACzB,SAAK,UAAU,KAAK,WAAW;AAC/B,SAAK,SAAS,KAAK,UAAU;AAC7B,SAAK,cAAc,KAAK,eAAe;AAEvC,WAAO,QAAQ,KAAK,IAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAM;AAC5C,UAAI,EAAE,WAAW,GAAG;AAChB,YAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAAA,MACjB;AAEA,UAAI,EAAE,CAAC,EAAE,CAAC,MAAM,GAAG;AACf,UAAE,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAgB;AAAA,MAClD;AAEA,UAAI,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,MAAM,GAAG;AAC1B,UAAE,KAAK,CAAC,GAAG,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC,CAAgB;AAAA,MAC1D;AAEA,WAAK,KAAK,GAAG,IAAI;AAAA,IACrB,CAAC;AAAA,EAEL;AAAA,EAnCA,IAAW,SAAkB;AACzB,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,OAAO,OAAgB;AAC9B,SAAK,UAAU;AACf,QAAI,CAAC,OAAO;AACR,WAAK,WAAW;AAAA,IACpB;AAAA,EACJ;AAAA,EA6BO,QAAQ,GAAW;AACtB,UAAM,IAAI,KAAK,WAAW,KAAK;AAC/B,SAAK,OAAO;AACZ,SAAK,WAAW,IAAI;AAAA,EACxB;AAAA,EAEO,iBAAiB,KAAa,WAA6B;AAC9D,UAAM,OAAO,KAAK,MAAM,GAAG;AAE3B,QAAI,MAAM;AACN,WAAK,YAAY,GAAG,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,OAAO;AAC1F,WAAK,YAAY,GAAG,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,OAAO;AAAA,IAC9F;AAAA,EACJ;AAAA,EAGQ,eAAe,KAAa,OAAe;AAG/C,QAAI,KAAK,KAAK,GAAG,GAAG;AAEhB,UAAI,SAAsB,KAAK,KAAK,GAAG,EAAE,CAAC;AAC1C,UAAI,QAAqB,KAAK,KAAK,GAAG,EAAE,KAAK,KAAK,GAAG,EAAE,SAAS,CAAC;AAEjE,WAAK,KAAK,GAAG,EAAE,QAAQ,CAAC,MAAM;AAC1B,YAAI,EAAE,CAAC,KAAK,OAAO,CAAC,KAAK,EAAE,CAAC,KAAK,OAAO;AACpC,mBAAS,CAAC,EAAE,CAAC,GAAG,KAAK,SAAS,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAqB;AAAA,QACvE;AACA,YAAI,EAAE,CAAC,KAAK,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,OAAO;AACnC,kBAAQ,CAAC,EAAE,CAAC,GAAG,KAAK,SAAS,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAqB;AAAA,QACtE;AAAA,MACJ,CAAC;AAED,YAAM,CAAC,CAAC,aAAa,KAAK,GAAG,CAAC,WAAW,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK;AAErE,YAAM,SAAS,KAAK,QAAQ,KAAK,WAAW,GAAG,QAAQ,gBAAgB,YAAY,YAAY;AAC/F,UAAI,QAAQ,SAAQ;AAAA,MAEpB;AAEA,WAAK;AAAA,QACD;AAAA,QACA,KAAK;AAAA,UACD,SAAS,CAAC;AAAA,UACV,KAAK;AAAA,YACD,KAAK,eAAe,OAAO,CAAC,GAAG,SAAS,CAAC,CAAC;AAAA,YAC1C;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EAEJ;AAAA,EAEO,gBAAgB,GAAW;AAC9B,WAAO,KAAK,KAAK,KAAK,EAAE,QAAQ,CAAC,MAAM;AACnC,WAAK,eAAe,GAAG,CAAC;AAAA,IAC5B,CAAC;AAAA,EACL;AAAA,EAEO,OAAO;AAAA,EAId;AAAA,EAEO,KAAK,UAAkB;AAC1B,QAAI,KAAK,QAAQ;AACb,WAAK,WAAW,KAAK,WAAY,WAAW,KAAK;AAGjD,UAAI,KAAK,YAAY,KAAK,MAAM;AAC5B,YAAI,KAAK,QAAQ;AACb,eAAK,WAAW,KAAK,OAAO;AAC5B,eAAK,YAAY;AAAA,QACrB,WAAW,KAAK,MAAM;AAClB,eAAK,WAAW,KAAK,WAAW,KAAK;AAAA,QACzC,WAAW,KAAK,MAAM;AAClB,eAAK,WAAW,KAAK,OAAO;AAAA,QAChC,OAAO;AACH,eAAK,SAAS;AACd,eAAK,WAAW;AAChB;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,KAAK,WAAW,GAAG;AACnB,YAAI,KAAK,MAAM;AACX,eAAK,WAAW;AAChB,eAAK,YAAY;AAAA,QACrB,OAAO;AACH,eAAK,SAAS;AACd,eAAK,WAAW;AAChB;AAAA,QACJ;AAAA,MACJ;AAEA,WAAK,gBAAgB,KAAK,MAAM,KAAK,WAAW,KAAK,MAAM,MAAO,KAAK,CAAC;AAAA,IAC5E;AAAA,EACJ;AACJ;AAMO,IAAM,WAAN,MAAe;AAAA,EAIX,YAAY,MAA0B;AAH7C,SAAQ,aAAwC,CAAC;AACjD,SAAO,QAA8B,CAAC;AAGlC,SAAK,QAAQ,KAAK,SAAS,CAAC;AAAA,EAChC;AAAA,EAEO,IAAI,KAAa,MAAc,MAAe,OAAkG,CAAC,GAAG;AAEvJ,SAAK,WAAW,GAAG,IAAI,IAAI,UAAU;AAAA,MACjC,OAAO,KAAK;AAAA,MACZ,MAAM,KAAK,QAAQ;AAAA,MACnB,MAAM,KAAK,QAAQ;AAAA,MACnB,QAAQ,KAAK,UAAU;AAAA,MACvB,SAAS,KAAK,WAAW;AAAA,MACzB,aAAa,KAAK,QAAQ;AAAA,MAC1B;AAAA,MAAM;AAAA,IACV,CAAC;AACD,WAAO,KAAK,IAAI,GAAG;AAAA,EACvB;AAAA,EAEO,IAAI,KAAa;AACpB,WAAO,KAAK,WAAW,GAAG;AAAA,EAC9B;AAAA,EAEO,OAAO;AACV,WAAO,OAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,MAAM;AAC1C,QAAE,SAAS;AAAA,IACf,CAAC;AAAA,EACL;AAAA,EAEO,KAAK,KAAa;AACrB,WAAO,QAAQ,KAAK,UAAU,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM;AAChD,QAAE,SAAU,MAAM;AAAA,IACtB,CAAC;AAAA,EACL;AAAA,EAEO,cAAc,KAAa,GAAU;AACxC,UAAM,KAAK,KAAK,IAAI,GAAG;AACvB,QAAI,IAAG;AACH,SAAG,gBAAgB,IAAI,GAAG,IAAI;AAAA,IAClC;AAAA,EACJ;AAAA,EAEO,OAAO,KAAa;AACvB,SAAK,KAAK;AACV,WAAO,QAAQ,KAAK,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,SAAS;AAAA,EAC1E;AAAA,EAEO,KAAK,UAAkB;AAC1B,WAAO,OAAO,KAAK,UAAU,EAAE,QAAQ,OAAK,EAAE,KAAK,QAAQ,CAAC;AAAA,EAChE;AACJ;;;ACrNO,IAAe,WAAf,cAAgC,QAAQ;AAAA,EAM3C,YAAY,OAA2B,CAAC,GAAG;AACvC,UAAM,IAAI;AALd,SAAO,QAA8B,CAAC;AACtC,SAAO,YAAoC,CAAC;AAKxC,SAAK,MAAM,QAAQ,CAAC,MAAM;AACtB,WAAK,QAAQ,CAAC;AAAA,IAClB,CAAC;AAAA,EACL;AAAA,EACA,QAAQ,GAA4B;AAEhC,SAAK,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AACtB,QAAI,EAAE,CAAC,GAAG;AACN,WAAK,UAAU,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AAAA,IAC9B;AACA,QAAI,KAAK,YAAY;AACjB,UAAI,KAAK,UAAU,EAAE,CAAC,CAAC,GAAG;AACtB,aAAK,MAAM,KAAK,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;AAAA,MAClD,OAAO;AACH,aAAK,SAAS,EAAE,CAAC,CAAC;AAAA,MACtB;AACA,WAAK,SAAS,QAAQ,KAAK;AAAA,IAC/B;AAAA,EACJ;AAAA,EAEO,QAAc;AACjB,UAAM,MAAM;AACZ,WAAO,QAAQ,KAAK,KAAK,EAAE,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAM;AAC7C,UAAI,KAAK,UAAU,GAAG,GAAG;AACrB,aAAK,MAAM,KAAK,UAAU,GAAG,CAAC,EAAE,SAAS,CAAC;AAAA,MAC9C,OAAO;AACH,aAAK,SAAS,CAAC;AAAA,MACnB;AAAA,IACJ,CAAC;AACD,SAAK,WAAW,IAAI,SAAS,EAAE,OAAO,KAAK,MAAM,CAAC;AAAA,EACtD;AAAA,EAEO,KAAK,KAA6B;AACrC,UAAM,KAAK,GAAG;AACd,SAAK,SAAS,KAAK,IAAI,WAAW;AAAA,EACtC;AACJ;;;AC7CO,IAAM,OAAN,cAAmB,QAAQ;AAAA,EAS9B,YAAY,OAAuB,CAAC,GAAG;AACnC,UAAM,IAAI;AACV,SAAK,OAAO,KAAK,SAAS,SAAY,QAAQ,KAAK;AACnD,SAAK,SAAS,KAAK,WAAW,SAAY,KAAK,KAAK;AACpD,SAAK,UAAU,KAAK,WAAW,GAAG,CAAC;AACnC,SAAK,QAAQ,KAAK,UAAU,SAAY,OAAO,KAAK;AACpD,SAAK,eAAe,KAAK,gBAAgB,GAAG,CAAC;AAC7C,SAAK,eAAe,KAAK,YAAY,GAAG,CAAC;AACzC,SAAK,OAAO,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,KAAK,QAAQ,CAAC;AAE1D,QAAI,CAAC,KAAK,aAAa;AACnB,WAAK,cAAc;AAAA,QACf,KAAK,QAAQ,IAAI;AAAA,QACjB,KAAK;AAAA,QACL,KAAK,QAAQ,IAAI;AAAA,MACrB;AAAA,IACJ;AACA,SAAK,WAAW,KAAK;AAAA,EACzB;AAAA,EACO,YAAY,GAAY,cAAuB,OAAO;AACzD,SAAK,SAAS,KAAK,aAAa,IAAI,EAAE,MAAM,CAAC;AAC7C,QAAI,CAAC,aAAY;AACb,WAAK,WAAW,KAAK,OAAO,MAAM;AAAA,IACtC;AAAA,EACJ;AAAA,EACO,YAAY,GAAY,cAAuB,OAAO;AACzD,SAAK,WAAW,KAAK,aAAa,IAAI,EAAE,MAAM,CAAC;AAAA,EACnD;AAAA,EACO,KAAK,KAA6B;AACrC,UAAM,KAAK,GAAG;AAEd,QAAI,CAAC,KAAK;AAAQ;AAElB,UAAM,MAAM,KAAK,SAAS,SAAS,KAAK,MAAM;AAE9C,QAAI,IAAI,UAAU,MAAM;AAAG;AAE3B,UAAM,WAAW;AAAA,MACb,KAAK,OAAO,IAAI,KAAK,SAAS,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;AAAA,MACnE,KAAK,OAAO,IAAI,KAAK,SAAS,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;AAAA,MACnE,KAAK,OAAO,IAAI,KAAK,SAAS,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;AAAA,IACvE,EAAE;AAAA,MACE,GAAG,CAAC,KAAK,OAAO,CAAC,KAAK,OAAO,CAAC,KAAK,KAAK,EAAE,MAAM,IAAI,WAAW,CAAC;AAAA,MAChE,GAAG,KAAK,OAAO,KAAK,OAAO,KAAK,KAAK,EAAE,MAAM,IAAI,WAAW,CAAC;AAAA,IACjE;AAEA,SAAK,WAAW,KAAK,SAAS,IAAI,QAAQ;AAAA,EAC9C;AAAA,EACO,QAAc;AACjB,UAAM,MAAM;AACZ,QAAI,KAAK,MAAM;AACX,WAAK,SAAS,IAAI,SAAS;AAAA,QACvB,QAAQ,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;AAAA,QAC/H,MAAM,KAAK;AAAA,MACf,CAAC,CAAC;AAAA,IACN;AAAA,EACJ;AACJ;;;AClEO,IAAM,WAAN,cAAuB,QAAQ;AAAA,EAIlC,IAAW,UAAmB;AAC1B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,QAAQ,OAAgB;AAC/B,SAAK,WAAW;AAChB,SAAK,QAAQ,SAAS,CAAC;AACvB,SAAK,QAAQ,UAAU,CAAC;AACxB,SAAK,QAAQ,SAAS;AACtB,SAAK,QAAQ,UAAU;AACvB,SAAK,QAAQ,UAAU;AACvB,SAAK,QAAQ,UAAU;AAAA,EAE3B;AAAA,EAKO,QAAc;AACjB,UAAM,MAAM;AAEZ,SAAK,UAAU,IAAI,IAAI,EAAE,YAAY,KAAK,OAAO,SAAS,MAAM,OAAO,GAAG,SAAS,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;AAClG,SAAK,SAAS,KAAK,OAAO;AAE1B,SAAK,UAAU,IAAI,IAAI;AAAA,MACnB,YAAY,KAAK,OAAO,SAAS,MAAM,OAAO;AAAA,MAAG,SAAS,GAAG,GAAG,GAAG,EAAE;AAAA,MAAG,SAAS;AAAA,QAC7E,KAAK,KAAK;AAAA,QACV;AAAA,QACA,KAAK,KAAK,IAAI;AAAA,MAClB;AAAA,IACJ,CAAC;AACD,SAAK,SAAS,KAAK,OAAO;AAE1B,SAAK,UAAU;AAAA,EACnB;AACJ;AAEO,IAAM,MAAN,cAAkB,UAAU;AAAA,EAmB/B,YAAY,MAAqB;AAC7B,UAAM,IAAI;AAlBd,SAAO,OAAgC,CAAC;AAmBpC,SAAK,aAAa,KAAK;AACvB,SAAK,SAAS,IAAI,YAAY,KAAK,SAAS,KAAK,OAAO;AAAA,EAC5D;AAAA,EAhBA,IAAW,UAAmB;AAC1B,WAAO,MAAM;AAAA,EACjB;AAAA,EACA,IAAW,QAAQ,OAAgB;AAC/B,UAAM,UAAU;AAChB,SAAK,OAAO,UAAU;AAAA,EAC1B;AAAA,EAEA,IAAW,QAAQ,GAAW;AAC1B,SAAK,OAAO,SAAS,cAAc,WAAW,CAAC;AAAA,EACnD;AAAA,EAOO,QAAc;AACjB,UAAM,MAAM;AACZ,SAAK,WAAW,SAAS,KAAK,MAAM;AACpC,SAAK,UAAU;AAAA,EACnB;AACJ;AAIO,IAAM,cAAN,cAA0B,SAAS;AAAA,EAUtC,YAAmB,UAAmB,GAAG,CAAC,GAAU,UAAmB,GAAG,CAAC,GAAG;AAC1E,UAAM;AAAA,MACF,OAAO;AAAA,QACH,CAAC,OAAO,IAAI,KAAK,EAAE,SAAS,GAAG,GAAG,EAAE,GAAG,QAAQ,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,MAAM,CAAC,GAAG,EAAE;AAAA,QAC3F,CAAC,SAAS,IAAI,KAAK,EAAE,SAAS,GAAG,GAAG,EAAE,GAAG,QAAQ,GAAG,UAAU,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,KAAK;AAAA,QAClG,CAAC,SAAS,IAAI,KAAK,EAAE,SAAS,GAAG,GAAG,EAAE,GAAG,QAAQ,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,MAAM,CAAC,GAAG,KAAK;AAAA,MACpG;AAAA,IACJ,CAAC;AAPc;AAAiC;AAQhD,SAAK,WAAW;AAChB,SAAK,WAAW;AAAA,EACpB;AAAA,EAlBA,IAAW,UAAmB;AAC1B,WAAO,MAAM;AAAA,EACjB;AAAA,EACA,IAAW,QAAQ,OAAgB;AAC/B,UAAM,UAAU;AAChB,SAAK,MAAM,KAAK,EAAE,UAAU;AAAA,EAChC;AAAA,EAaO,QAAc;AACjB,UAAM,MAAM;AACZ,SAAK,MAAM,KAAK,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,sCAAsC,MAAM,GAAG,IAAI,IAAI,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC;AACtL,SAAK,MAAM,OAAO,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,sCAAsC,MAAM,GAAG,IAAI,IAAI,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,KAAK,KAAK,GAAG,EAAE,CAAC,CAAC;AAC1L,SAAK,MAAM,OAAO,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,wCAAwC,MAAM,GAAG,IAAI,IAAI,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,KAAK,KAAK,GAAG,EAAE,CAAC,CAAC;AAE5L,SAAK,SAAS,IAAI,WAAW,KAAK;AAAA,MAC9B,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAAA,MACpC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAAA,MACtC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAAA,IAC1C,GAAG,EAAE,MAAM,OAAO,QAAQ,OAAO,MAAM,OAAO,SAAS,MAAM,CAAC;AAAA,EAClE;AACJ;;;ACjHO,IAAM,aAAN,cAAyB,aAAa;AAAA,EAmBzC,YAAmB,QAAmB;AAClC,UAAM,EAAE,WAAW,MAAM,CAAC;AADX;AAlBnB,SAAO,OAAsB;AAC7B,SAAO,QAA2B;AAClC,SAAO,UAAqB,CAAC;AAC7B,SAAQ,WAAmB;AAE3B,gBAAe;AAeX,SAAK,OAAO,SAAS,GAAG,GAAG,KAAK,KAAK,IAAI;AACzC,SAAK,OAAO,WAAW,GAAG,KAAK,KAAK,KAAK,GAAG,CAAC;AAC7C,SAAK,OAAO,MAAM;AAAA,EACtB;AAAA,EAjBA,IAAW,SAAkB;AACzB,WAAO,MAAM;AAAA,EACjB;AAAA,EACA,IAAW,OAAO,OAAgB;AAC9B,UAAM,SAAS;AACf,QAAI,OAAO;AACP,WAAK,OAAO,SAAS,GAAG,GAAG,KAAK,KAAK,IAAI;AACzC,WAAK,OAAO,WAAW,GAAG,KAAK,KAAK,KAAK,GAAG,CAAC;AAC7C,WAAK,OAAO,MAAM;AAAA,IACtB;AAAA,EACJ;AAAA,EASO,KAAK,GAAqB;AAC7B,UAAM,KAAK,CAAC;AAEZ,QAAI,KAAK,OAAO,QAAQ;AAEpB,YAAM,IAAI,KAAK,KAAK,QAAQ,EAAE,MAAM,IAAK;AACzC,WAAK,OAAO,WAAW;AAAA,QACnB,KAAK,MAAM,KAAK,OAAO,SAAS,IAAI,EAAE,GAAG,IAAI,KAAK,KAAK,CAAC;AAAA,QACxD,KAAK,OAAO,SAAS,IAAI,EAAE;AAAA,QAC3B,KAAK,OAAO,SAAS;AAAA,MACzB;AAGA,WAAK,OAAO,KAAK,MAAM,KAAK,OAAQ,KAAK,OAAO,MAAM,IAAI,KAAM,IAAI,GAAG;AAGvE,WAAK,OAAO,SAAS,KAAK,OAAO,KAAK,IAAI,GAAG,KAAK,KAAK,EAAE,IAAI,GAAG,GAAG,KAAK,KAAK,IAAI;AAGjF,YAAM,KAAK,KAAK,OAAO,SAAS,IAAI,KAAK,OAAO,KAAK,SAAS,KAAK,KAAK,GAAG,CAAC;AAC5E,WAAK,OAAO,SAAS;AAAA,IAEzB;AAAA,EAEJ;AACJ;;;ACpDO,IAAM,mBAAN,cAA+B,aAAa;AAAA,EAA5C;AAAA;AACH,SAAQ,OAA+B,EAAE,MAAM,GAAG,MAAM,GAAG,WAAW,EAAE;AACxE,SAAQ,OAAgC,EAAE,SAAS,OAAO,SAAS,OAAO,SAAS,MAAM;AACzF,SAAQ,OAAO,EAAE,SAAS,KAAK,mBAAmB,KAAK,UAAU,KAAK,aAAa,KAAK,UAAU,KAAK,WAAW,IAAI;AACtH,SAAQ,WAAoB,QAAQ,EAAE,CAAC;AAAA;AAAA,EAGvC,IAAW,SAAS;AAChB,WAAO,KAAK,OAAO,KAAK;AAAA,EAC5B;AAAA,EAEO,oBAAoB,UAAkB;AACzC,UAAM,SAAS,CAAC,KAAa,MAAeC,cAAqB;AAC7D,WAAK,KAAK,GAAG,IAAI,KAAK,OAAO,KAAK,KAAK,GAAG,KAAK,MAAM,OAAOA,YAAW,EAAEA,YAAW,KAAK,KAAK,qBAAqB,GAAG,KAAK,KAAK,OAAO;AAAA,IAC3I;AAEA,WAAO,SAAS,KAAK,KAAK,UAAU,EAAE,MAAM,GAAG,QAAQ;AACvD,WAAO,QAAQ,KAAK,KAAK,UAAU,EAAE,MAAM,IAAI,QAAQ;AACvD,WAAO,MAAM,KAAK,KAAK,UAAU,EAAE,MAAM,GAAG,QAAQ;AACpD,WAAO,QAAQ,KAAK,KAAK,UAAU,EAAE,MAAM,IAAI,QAAQ;AAEvD,QAAI,CAAC,KAAK,QAAQ;AAEd,YAAM,QAAQ;AAAA,SACT,KAAK,KAAK,QAAQ,KAAK,KAAK,QAAQ,KAAK,KAAK;AAAA,SAC9C,KAAK,KAAK,KAAK,KAAK,KAAK,QAAQ,KAAK,KAAK;AAAA,MAChD,EAAE,eAAe,CAAC,EAAE,MAAM,KAAK,KAAK,QAAQ;AAE5C,WAAK,WAAW;AAAA,QACZ,MAAM;AAAA,QACN;AAAA,QACA,MAAM;AAAA,MACV;AAAA,IACJ,OAAO;AACH,WAAK,WAAW,GAAG,CAAC;AAAA,IACxB;AAAA,EAEJ;AAAA,EAEQ,gBAAgB,UAAkB;AAEtC,QAAI,KAAK,OAAO,KAAK,SAAS;AAC1B,WAAK,OAAO,KAAK,UAAU;AAAA,IAC/B,OAAO;AACH,UAAI,KAAK,OAAO,KAAK,SAAS;AAE1B,YAAI,KAAK,KAAK,OAAO,KAAK,KAAK,aAAa;AACxC,eAAK,OAAO,KAAK,UAAU;AAC3B,eAAK,OAAO,KAAK,UAAU;AAAA,QAC/B,WAAW,KAAK,KAAK,OAAO,KAAK,KAAK,UAAU;AAC5C,eAAK,OAAO,KAAK,UAAU,QAAQ,KAAK,OAAO,MAAM,CAAC;AAAA,QAC1D,OAAO;AACH,eAAK,OAAO,KAAK,UAAU;AAC3B,eAAK,OAAO,KAAK,UAAU;AAC3B,eAAK,KAAK,OAAO,KAAK,KAAK;AAAA,QAC/B;AAAA,MACJ,OAAO;AACH,aAAK,OAAO,KAAK,UAAU,QAAQ,KAAK,OAAO,MAAM,CAAC;AAAA,MAC1D;AAAA,IACJ;AAAA,EACJ;AAAA,EAEO,gBAAgB,UAAkB;AACrC,SAAK,gBAAgB,QAAQ;AAE7B,QAAI,KAAK,OAAO,KAAK,SAAS;AAC1B,WAAK,KAAK,OAAO,KAAK,IAAI,KAAK,KAAK,OAAO,UAAU,KAAK,KAAK,QAAQ;AACvE,WAAK,KAAK,OAAO,CAAC,KAAK,KAAK;AAAA,IAChC,WAAW,KAAK,OAAO,KAAK,SAAS;AACjC,WAAK,KAAK,OAAO,KAAK,KAAK;AAC3B,WAAK,KAAK,QAAQ;AAAA,IACtB,OAAO;AACH,WAAK,SAAS,IAAI;AAClB;AAAA,IACJ;AAEA,UAAM,KAAK,KAAK,KAAK,WAAW,KAAK,KAAK,OAAO,KAAK,KAAK,QAAS,KAAK,KAAK,WAAY,KAAK,KAAK;AAEpG,SAAK,SAAS,IAAI;AAAA,EACtB;AAAA,EAEO,YAAY,KAAuB;AACtC,SAAK,oBAAoB,IAAI,WAAW;AACxC,SAAK,gBAAgB,IAAI,WAAW;AAEpC,UAAM,KAAK,KAAK,SAAS,MAAM,IAAI,cAAc,CAAC;AAClD,QAAI,GAAG,GAAG,UAAU,IAAI,GAAG;AACvB,YAAM,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,OAAO,SAAS,CAAC,EAAE;AACrD,WAAK,cAAc,KAAK,OAAO,SAAS,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAC1D,UAAI,CAAC,KAAK,KAAK,UAAU,EAAE,OAAO,GAAG;AACjC,aAAK,OAAO,WAAW,KAAK,OAAO,SAAS,SAAS,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,KAAK,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,MAAM,GAAG,CAAC,CAAC;AAAA,MACzH;AACA,WAAK,OAAO,KAAK,UAAU;AAAA,IAC/B,OAAO;AACH,WAAK,cAAc,KAAK,OAAO,SAAS,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAC1D,WAAK,OAAO,KAAK,UAAU;AAAA,IAC/B;AAEA,QAAI,KAAK,QAAQ;AACb,WAAK,OAAO,WAAW,KAAK,OAAO,SAAS,SAAS,GAAG,GAAG,CAAC;AAAA,IAChE;AAAA,EACJ;AAAA,EAGO,QAAQ,KAAuB;AAClC,SAAK,OAAO,KAAK,SAAS;AAC1B,UAAM,aAAc,KAAK,OAAO,MAAM,CAAC,EAAe,mBAAmB;AACzE,eAAW,QAAQ,CAAC,MAAa;AAC7B,UAAI,EAAE,KAAK,GAAE;AACT,aAAK,KAAK,OAAO;AACjB,aAAK,KAAK,OAAO;AACjB,aAAK,OAAO,KAAK,UAAU;AAC3B,aAAK,OAAO,KAAK,SAAS;AAAA,MAC9B,OAAO;AACH,aAAK,OAAO,KAAK,UAAU;AAC3B,aAAK,OAAO,KAAK,SAAS;AAAA,MAC9B;AACA,WAAK,SAAS,SAAS,CAAC;AACxB,WAAK,OAAO,WAAW,KAAK,YAAY,MAAM;AAC9C,WAAK,cAAc,KAAK,YAAY,IAAI,CAAC;AAAA,IAC7C,CAAC;AAED,QAAI,CAAC,KAAK,OAAO,KAAK,SAAS;AAC3B,WAAK,OAAO,KAAK,UAAU,CAAC,KAAK,OAAO,KAAK;AAAA,IACjD;AAAA,EACJ;AAAA,EAEO,KAAK,KAAuB;AAC/B,UAAM,KAAK,GAAG;AACd,SAAK,YAAY,GAAG;AACpB,SAAK,QAAQ,GAAG;AAEhB,SAAK,OAAO,WAAW,KAAK,YAAY,MAAM;AAAA,EAElD;AACJ;;;AC5HO,IAAM,gBAAN,cAA4B,SAAS;AAAA,EAExC,YAAY,MAAuB;AAC/B,UAAM;AAAA,MACF,OAAO;AAAA,QACH,CAAC,QAAQ,IAAI,KAAK,EAAE,SAAS,GAAG,KAAK,WAAW,CAAC,GAAG,QAAQ,KAAK,MAAM,UAAU,GAAG,GAAG,KAAK,WAAW,KAAK,WAAW,KAAK,MAAM,CAAC,EAAG,CAAC,GAAG,EAAE;AAAA,QAC5I,CAAC,SAAS,IAAI,KAAK,EAAE,aAAa,GAAG,KAAK,gBAAgB,GAAG,GAAG,CAAC,GAAG,cAAc,GAAG,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,KAAK,eAAe,CAAC,GAAG,QAAQ,KAAK,OAAO,UAAU,GAAG,EAAE,KAAK,gBAAgB,KAAK,aAAa,GAAG,KAAK,MAAM,CAAC,EAAG,CAAC,GAAG,MAAM;AAAA,QACzO,CAAC,QAAQ,IAAI,KAAK,EAAE,SAAS,GAAG,GAAG,CAAC,GAAG,QAAQ,KAAK,MAAM,aAAa,GAAG,GAAG,GAAG,CAAC,GAAG,UAAU,IAAI,KAAK,gBAAgB,KAAK,GAAG,KAAK,QAAQ,GAAG,EAAE,EAAG,CAAC,GAAG,OAAO;AAAA,QAC/J,CAAC,aAAa,IAAI,KAAK,EAAE,SAAS,GAAG,CAAC,GAAG,cAAc,GAAG,MAAM,GAAG,GAAG,GAAG,QAAQ,KAAK,UAAU,UAAU,GAAG,GAAG,KAAK,QAAQ,KAAK,UAAU,CAAC,EAAG,CAAC,GAAG,OAAO;AAAA,QAC3J,CAAC,aAAa,IAAI,KAAK,EAAE,SAAS,GAAG,CAAC,GAAG,cAAc,GAAG,MAAM,GAAG,IAAI,GAAG,QAAQ,KAAK,UAAU,UAAU,GAAG,KAAK,gBAAgB,GAAG,KAAK,QAAQ,KAAK,UAAU,CAAC,EAAG,CAAC,GAAG,OAAO;AAAA,QACjL,CAAC,aAAa,IAAI,KAAK,EAAE,cAAc,GAAG,KAAK,GAAG,IAAI,GAAG,SAAS,GAAG,CAAC,GAAG,QAAQ,KAAK,UAAU,UAAU,GAAG,GAAG,CAAC,KAAK,UAAU,CAAC,EAAG,CAAC,GAAG,WAAW;AAAA,QACnJ,CAAC,aAAa,IAAI,KAAK,EAAE,cAAc,GAAG,KAAK,GAAG,GAAG,GAAG,SAAS,GAAG,CAAC,GAAG,QAAQ,KAAK,UAAU,UAAU,GAAG,GAAG,CAAC,KAAK,UAAU,CAAC,EAAG,CAAC,GAAG,WAAW;AAAA,QAClJ,CAAC,SAAS,IAAI,KAAK,EAAE,SAAS,GAAG,CAAC,GAAG,QAAQ,KAAK,MAAM,UAAU,GAAG,GAAG,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,GAAG,WAAW;AAAA,QACtG,CAAC,SAAS,IAAI,KAAK,EAAE,SAAS,GAAG,CAAC,GAAG,QAAQ,KAAK,MAAM,UAAU,GAAG,GAAG,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,GAAG,WAAW;AAAA,QACtG,CAAC,aAAa,IAAI,KAAK,EAAE,SAAS,GAAG,CAAC,GAAG,QAAQ,KAAK,UAAU,UAAU,GAAG,GAAG,CAAC,KAAK,UAAU,CAAC,EAAG,CAAC,GAAG,MAAM;AAAA,QAC9G,CAAC,aAAa,IAAI,KAAK,EAAE,SAAS,GAAG,CAAC,GAAG,QAAQ,KAAK,UAAU,UAAU,GAAG,KAAK,YAAY,GAAG,CAAC,KAAK,UAAU,CAAC,EAAG,CAAC,GAAG,MAAM;AAAA,QAC/H,CAAC,aAAa,IAAI,KAAK,EAAE,SAAS,GAAG,CAAC,GAAG,QAAQ,KAAK,UAAU,UAAU,GAAG,GAAG,CAAC,KAAK,UAAU,CAAC,EAAE,CAAC,GAAG,WAAW;AAAA,QAClH,CAAC,aAAa,IAAI,KAAK,EAAE,SAAS,GAAG,CAAC,GAAG,QAAQ,KAAK,UAAU,UAAU,GAAG,GAAG,CAAC,KAAK,UAAU,CAAC,EAAE,CAAC,GAAG,WAAW;AAAA,QAClH,CAAC,SAAS,IAAI,KAAK,EAAE,SAAS,GAAG,GAAG,CAAC,GAAG,QAAQ,KAAK,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,MAAM,EAAE,EAAE,CAAC,GAAG,WAAW;AAAA,QAC3G,CAAC,SAAS,IAAI,KAAK,EAAE,SAAS,GAAG,GAAG,CAAC,GAAG,QAAQ,KAAK,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,MAAM,EAAE,EAAE,CAAC,GAAG,WAAW;AAAA,MAC/G;AAAA,IACJ,CAAC;AAED,SAAK,QAAQ;AAAA,EACjB;AACJ;;;ACtCO,IAAM,aAAN,cAAyB,cAAc;AAAA,EAI1C,cAAc;AACV,UAAM;AAAA,MACF,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,iBAAiB;AAAA,IACrB,CAAC;AAAA,EACL;AAAA,EAGO,QAAc;AACjB,UAAM,MAAM;AAEZ,SAAK,MAAM,MAAM,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,sCAAsC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AACjL,SAAK,MAAM,OAAO,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,uCAAuC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,KAAK,MAAM,gBAAgB,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAC9M,SAAK,MAAM,OAAO,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,uCAAuC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,KAAK,MAAM,gBAAgB,IAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAChN,SAAK,MAAM,MAAM,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,uCAAuC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAClL,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,yCAAyC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AACzL,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,yCAAyC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AACzL,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,wCAAwC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,GAAE,GAAE,IAAI,EAAE,CAAC,CAAC;AACzL,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,wCAAwC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,GAAE,GAAE,IAAI,EAAE,CAAC,CAAC;AACzL,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,wCAAwC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,GAAE,MAAK,GAAG,EAAE,CAAC,CAAC;AAC3L,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,uCAAuC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,GAAE,MAAK,GAAG,EAAE,CAAC,CAAC;AAC1L,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,sCAAsC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAChM,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,oCAAoC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAC9L,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,0CAA0C,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AACpM,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,wCAAwC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AACnM,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,uCAAuC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,UAAU,GAAG,MAAM,KAAK,CAAC,EAAE,CAAC,CAAC;AACtM,SAAK,MAAM,WAAW,EAAE,SAAS,IAAI,MAAM,EAAE,gBAAgB,KAAK,KAAK,uCAAuC,MAAM,GAAG,IAAG,IAAG,EAAE,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,UAAU,GAAG,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC;AAGtM,SAAK,SAAS,IAAI,WAAW,KAAM;AAAA,MAC/B,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;AAAA,MACjD,MAAM,CAAC,CAAC,GAAE,CAAC,GAAE,GAAE,GAAE,GAAE,GAAE,CAAC,CAAC,GAAG,CAAC,KAAG,CAAC,GAAE,GAAE,GAAE,GAAE,GAAE,CAAC,CAAC,GAAE,CAAC,GAAE,CAAC,GAAE,GAAE,GAAE,GAAE,GAAE,CAAC,CAAC,CAAC;AAAA,MAC9D,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;AAAA,MAC9C,WAAW,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AAAA,MACnD,WAAW,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;AAAA,MACjD,OAAO,CAAC;AAAA,MACR,WAAW,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;AAAA,MACrD,WAAW,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAAA,MAChD,OAAO,CAAC;AAAA,MACR,WAAW,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAK,GAAG,CAAC,CAAC,CAAC;AAAA,MAC9C,WAAW,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;AAAA,MAC9C,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,MACzB,WAAW,CAAC,CAAC,GAAE,CAAC,MAAK,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAAA,MAC7C,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,MAC9C,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,IAC7B,GAAG,EAAE,MAAM,MAAM,MAAM,iBAAiB,QAAQ,KAAK,CAAC;AAEtD,SAAK,SAAS,IAAI,WAAW,KAAK;AAAA,MAC9B,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAAA,MAChB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,MAAM,KAAK,CAAC,CAAC;AAAA,MACpC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAAA,MAC5B,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;AAAA,MACpC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,MACjC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAAA,MAChB,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,MACjC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,MACjC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAAA,MAChB,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAAA,MAC/B,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,MAClC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAAA,MAChB,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,MAClC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,MAClC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAAA,IAClC,GAAG,EAAE,MAAM,MAAM,MAAM,gBAAgB,CAAC;AAExC,SAAK,SAAS,IAAI,QAAQ,MAAO;AAAA,MAC7B,OAAO,CAAC;AAAA,MACR,MAAM,CAAC;AAAA,MACP,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAAA,MACzE,WAAW,CAAC;AAAA,MACZ,WAAW,CAAC;AAAA,MACZ,OAAO,CAAC;AAAA,MACR,WAAW,CAAC;AAAA,MACZ,WAAW,CAAC;AAAA,MACZ,OAAO,CAAC;AAAA,MACR,WAAW,CAAC;AAAA,MACZ,WAAW,CAAC;AAAA,MACZ,OAAO,CAAC;AAAA,MACR,WAAW,CAAC;AAAA,MACZ,WAAW,CAAC;AAAA,MACZ,OAAO,CAAC;AAAA,IACZ,GAAG,EAAE,MAAM,MAAM,SAAS,MAAM,MAAM,gBAAgB,CAAC;AAEvD,SAAK,SAAS,IAAI,OAAO,KAAM;AAAA,MAC3B,OAAO,CAAC;AAAA,MACR,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC;AAAA,MACpC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;AAAA,MAC7B,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,GAAG,KAAK,KAAK,IAAI,GAAG,CAAC,CAAC;AAAA,MACzD,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;AAAA,MAClC,OAAO,CAAC;AAAA,MACR,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;AAAA,MACpC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;AAAA,MACpC,OAAO,CAAC;AAAA,MACR,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;AAAA,MAClC,WAAW,CAAC;AAAA,MACZ,OAAO,CAAC;AAAA,MACR,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;AAAA,MACnC,WAAW,CAAC;AAAA,MACZ,OAAO,CAAC;AAAA,IACZ,GAAG,EAAE,MAAM,MAAM,MAAM,gBAAgB,CAAC;AAExC,SAAK,SAAS,KAAK,KAAK;AAAA,EAC5B;AAAA,EAGO,KAAK,KAA6B;AACrC,UAAM,KAAK,GAAG;AAEd,QAAI,CAAC,KAAK,OAAO,KAAK,QAAQ;AAC1B,WAAK,SAAS,KAAK,SAAS;AAAA,IAChC,OAAO;AACH,UAAI,KAAK,OAAO,KAAK,SAAS;AAC1B,aAAK,SAAS,KAAK,SAAS;AAAA,MAChC,OAAO;AACH,YAAI,KAAK,OAAO,QAAQ;AACpB,eAAK,SAAS,KAAK,KAAK;AAAA,QAC5B,OAAO;AACH,eAAK,SAAS,KAAK,MAAM;AAAA,QAC7B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;;;AClIO,IAAM,SAAN,cAAqB,UAAU;AAAA,EAYlC,YAAY;AAAA,IACR,WAAW,QAAQ,EAAE,CAAC;AAAA,IACtB,WAAW,QAAQ,EAAE,CAAC;AAAA,EAC1B,IAGI,CAAC,GAAG;AACJ,UAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA,MAAM,GAAG,GAAG,IAAI,CAAC;AAAA,MACjB,aAAa,GAAG,GAAE,GAAE,CAAC;AAAA,IACzB,CAAC;AAvBL,SAAO,OAAgC,EAAE,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,eAAe,MAAM;AAwB1G,SAAK,eAAe;AAAA,MAChB,IAAI,SAAS;AAAA,QACT,MAAM,GAAG,GAAE,IAAG,CAAC;AAAA,QACf,OAAO;AAAA,QACP,UAAU,GAAG,GAAE,GAAE,CAAC;AAAA,QAClB,gBAAgB,GAAG,IAAG,GAAE,EAAE;AAAA,MAC9B,CAAC;AAAA,MACD,IAAI,iBAAiB,IAAI;AAAA,MACzB,IAAI,WAAW,IAAI;AAAA,IACvB,CAAC;AAAA,EACL;AAAA,EA7BA,IAAW,SAAS;AAChB,UAAM,IAAK,KAAK,YAAY,CAAC,EAAuB;AAEpD,WAAO;AAAA,EACX;AAAA,EA2BA,QAAQ;AACJ,cAAU,oBAAoB,IAAI;AAElC,SAAK,WAAW,IAAI,WAAW;AAC/B,SAAK,SAAS,KAAK,QAAQ;AAC3B,SAAK,SAAS,WAAW,GAAG,GAAE,GAAE,CAAC;AACjC,SAAK,MAAM,IAAI,SAAS;AACxB,SAAK,SAAS,KAAK,GAAG;AAAA,EAC1B;AAAA,EAEO,KAAK,KAA6B;AACrC,UAAM,KAAK,GAAG;AAAA,EAElB;AACJ;;;ACtDO,IAAe,WAAf,cAAgC,MAAM;AAAA,EACzC,YAAY,MAA0B;AAClC,UAAM;AAAA,MACF,KAAK,cAAc,YAAK,MAAI;AAAA,MAC5B,UAAU,KAAK,YAAY,GAAG;AAAA,MAC9B,MAAM,GAAG,IAAI,IAAI,EAAE,EAAE,MAAM,KAAK,SAAO,CAAC;AAAA,MACxC,UAAU,KAAK,YAAY,GAAG;AAAA,IAClC,CAAC;AAAA,EACL;AACJ;;;AChBO,IAAM,QAAN,cAAoB,SAAS;AAAA,EAChC,YAAY,MAAsB;AAC9B,UAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,OAAO,KAAK,QAAM;AAAA,IACtB,CAAC;AAAA,EACL;AACJ;;;ACTO,IAAM,QAAN,cAAoB,SAAS;AAAA,EAChC,YAAY,MAAsB;AAC9B,UAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,OAAO,KAAK;AAAA,IAChB,CAAC;AAAA,EACL;AACJ;;;ACTO,IAAM,QAAN,cAAoB,SAAS;AAAA,EAChC,YAAY,MAAsB;AAC9B,UAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,OAAO,KAAK;AAAA,IAChB,CAAC;AAAA,EACL;AACJ;;;ACTO,IAAM,QAAN,cAAoB,SAAS;AAAA,EAChC,YAAY,MAAsB;AAC9B,UAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,OAAO,KAAK;AAAA,IAChB,CAAC;AAAA,EACL;AACJ;;;ACTO,IAAM,QAAN,cAAoB,SAAS;AAAA,EAChC,YAAY,MAAsB;AAC9B,UAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,OAAO,KAAK;AAAA,IAChB,CAAC;AAAA,EACL;AACJ;;;ACTO,IAAM,QAAN,cAAoB,SAAS;AAAA,EAChC,YAAY,MAAsB;AAC9B,UAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,OAAO,KAAK;AAAA,IAChB,CAAC;AAAA,EACL;AACJ;;;ACEO,IAAM,aAAN,cAAyB,QAAQ;AAAA,EACpC,YAAY,MAA4B;AACpC,UAAM;AAAA,MACF,UAAU,KAAK;AAAA,IACnB,CAAC;AAAA,EACL;AAAA,EACO,QAAc;AACjB,UAAM,MAAM;AACZ,SAAK,SAAS,IAAK,CAAC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK,EAAE,KAAK,MAAM,KAAK,OAAO,IAAI,EAAE,CAAC,EAAG;AAAA,MAC9H,UAAU,GAAG,GAAG,KAAK,OAAO,IAAI,KAAK,IAAI,CAAC;AAAA,MAC1C,OAAO,MAAO,MAAM,KAAK,OAAO;AAAA,IACpC,CAAC,CAAC;AAAA,EACN;AACJ;;;ACbO,IAAM,UAAN,cAAsB,QAAQ;AAAA,EAGjC,YAAY,MAAyB;AACjC,UAAM;AAAA,MACF,UAAU,KAAK;AAAA,IACnB,CAAC;AACD,SAAK,OAAO,KAAK;AACjB,SAAK,UAAU,KAAK;AAAA,EACxB;AAAA,EACO,QAAc;AACjB,UAAM,MAAM;AAEZ,aAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI;AACtC,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI;AACtC,YAAI,KAAK,OAAO,IAAI,KAAK,SAAS;AAC9B,eAAK,SAAS,IAAI,WAAW;AAAA,YACzB,UAAU,GAAG,GAAG,GAAG,CAAC;AAAA,UACxB,CAAC,CAAC;AAAA,QACN;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;;;ACAO,IAAM,kBAAN,cAA8B,YAAqB;AAAA,EAKtD,YAAmB,IAAgB,YAAmE,cAAsB,SAAkB,GAAG,CAAC,GAAW,QAAgB,IAAYC,SAAiB,GAAG,CAAC,GAAG;AAC7M,UAAM;AADS;AAAgB;AAAyF;AAAiC;AAA4B,iBAAAA;AAgDzL,SAAQ,SAAkB,GAAG,CAAC;AA9C1B,SAAK,QAAQ,SAAS,cAAc,KAAK;AACzC,SAAK,MAAM,aAAa,SAAS,4PAQ3B,YAAK,UAAU,MAAM,EAAE,MAAM,SAAS,SAAS,SAAO,KAAI,YAAK,OAAO,IAAI,IAAE,qBAC5E,YAAK,UAAU,MAAM,CAAC,MAAM,QAAQ,QAAQ,UAAQ,KAAI,YAAK,OAAO,IAAI,IAAE,gBAC/E;AAED,SAAK,QAAQ,SAAS,cAAc,KAAK;AACzC,SAAK,MAAM,aAAa,SAAS,8VAWhC;AAED,SAAK,MAAM,iBAAiB,cAAc,CAAC,MAAM;AAC7C,WAAK,YAAY;AACjB,WAAK,cAAc,GAAG,EAAE,QAAQ,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,OAAO;AAAA,IACpE,CAAC;AACD,SAAK,MAAM,iBAAiB,aAAa,CAAC,MAAM;AAC5C,UAAI,KAAK,WAAW;AAChB,cAAM,MAAM,GAAG,EAAE,QAAQ,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,OAAO,EAAE,SAAS,KAAK,WAAW,EAAE,eAAe,KAAK,KAAK;AAC/G,aAAK,MAAM,MAAM,YAAY,aAAa,WAAI,GAAC,OAAM,WAAI,GAAC;AAC1D,aAAK,SAAS,IAAI,MAAM,IAAI,KAAK,KAAK,EAAE,SAAS,KAAK,KAAK;AAAA,MAC/D;AAAA,IACJ,CAAC;AACD,SAAK,MAAM,iBAAiB,YAAY,MAAM;AAC1C,WAAK,YAAY;AACjB,WAAK,SAAS,GAAG,CAAC;AAClB,WAAK,MAAM,MAAM,YAAY;AAAA,IACjC,CAAC;AACD,SAAK,GAAG,IAAI,YAAY,KAAK,KAAK;AAClC,SAAK,MAAM,YAAY,KAAK,KAAK;AAAA,EACrC;AAAA,EAEA,IAAI,QAAiB;AACjB,WAAO,KAAK;AAAA,EAChB;AACJ;AAEO,IAAM,wBAAN,cAAoC,YAAqB;AAAA,EAK5D,YAAmB,IAAgB,YAAmE,cAAsB,SAAkB,GAAG,CAAC,GAAW,QAAgB,IAAYA,SAAiB,GAAG,CAAC,GAAG;AAC7M,UAAM;AADS;AAAgB;AAAyF;AAAiC;AAA4B,iBAAAA;AA8DzL,SAAQ,SAAkB,GAAG,CAAC;AA5D1B,SAAK,QAAQ,SAAS,cAAc,KAAK;AACzC,SAAK,MAAM,aAAa,SAAS,4PAQ3B,YAAK,UAAU,MAAM,EAAE,MAAM,SAAS,SAAS,SAAO,KAAI,YAAK,OAAO,IAAI,IAAE,qBAC5E,YAAK,UAAU,MAAM,CAAC,MAAM,QAAQ,QAAQ,UAAQ,KAAI,YAAK,OAAO,IAAI,IAAE,gBAC/E;AAED,SAAK,QAAQ,SAAS,cAAc,KAAK;AACzC,SAAK,MAAM,aAAa,SAAS,8VAWhC;AAED,SAAK,MAAM,iBAAiB,cAAc,CAAC,MAAM;AAC7C,WAAK,YAAY;AACjB,WAAK,cAAc,GAAG,EAAE,QAAQ,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,OAAO;AAAA,IACpE,CAAC;AACD,SAAK,MAAM,iBAAiB,aAAa,CAAC,MAAM;AAC5C,UAAI,KAAK,WAAW;AAChB,YAAI,SAAS,GAAG,EAAE,QAAQ,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,OAAO,EAAE,SAAS,KAAK,WAAW,EAAE,eAAe,KAAK,KAAK;AAChH,YAAI,OAAO,UAAU,IAAI,KAAK,QAAQ,GAAG;AACrC,cAAI,MAAM,QAAQ,MAAM,OAAO,KAAK,MAAM,OAAO,MAAM,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC;AACrF,eAAK,MAAM,MAAM,YAAY,aAAa,WAAI,IAAI,KAAK,OAAK,OAAM,WAAI,IAAI,KAAK,OAAK;AACpF,cAAI,OAAO,UAAU,IAAI,KAAK,QAAQ,GAAG;AACrC,iBAAK,SAAS,GAAG,CAAC;AAClB,iBAAK,MAAM,MAAM,YAAY,aAAa,WAAI,IAAI,KAAK,QAAQ,GAAC,OAAM,WAAI,IAAI,KAAK,QAAQ,GAAC;AAAA,UAChG,OAAO;AACH,iBAAK,SAAS,IAAI,SAAS,KAAK,KAAK,EAAE,YAAY,CAAC;AACpD,oBAAQ,IAAI,KAAK,MAAM;AAEvB,iBAAK,MAAM,MAAM,YAAY,aAAa,WAAI,IAAI,KAAK,OAAK,OAAM,WAAI,IAAI,KAAK,OAAK;AAAA,UACxF;AAAA,QACJ,OAAO;AACH,eAAK,SAAS,GAAG,CAAC;AAClB,eAAK,MAAM,MAAM,YAAY;AAAA,QACjC;AAAA,MACJ;AAAA,IACJ,CAAC;AACD,SAAK,MAAM,iBAAiB,YAAY,MAAM;AAC1C,WAAK,YAAY;AACjB,WAAK,SAAS,GAAG,CAAC;AAClB,WAAK,MAAM,MAAM,YAAY;AAAA,IACjC,CAAC;AACD,SAAK,GAAG,IAAI,YAAY,KAAK,KAAK;AAClC,SAAK,MAAM,YAAY,KAAK,KAAK;AAAA,EACrC;AAAA,EAEA,IAAI,QAAiB;AACjB,WAAO,KAAK;AAAA,EAChB;AACJ;;;ACjJO,IAAM,QAAN,cAAoB,MAAM;AAAA;AAAA,EA0B7B,cAAc;AACV,UAAM;AA1BV,SAAO,QAAQ,QAAQ;AACvB,SAAO,aAAoB,CAAC,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,CAAC;AAS1D,SAAO,QAAiB,GAAG,GAAG,KAAK,GAAG;AAEtC,SAAO,WAAW,IAAI;AAAA,MAClB;AAAA,QACI,UAAU,CAAC,IAAI,gBAAgB,GAAG,IAAI,gBAAgB,KAAK,WAAW,eAAe,GAAG,KAAI,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;AAAA,QAC5G,YAAY,CAAC,IAAI,uBAAuB,CAAC,KAAK,KAAK,KAAK,GAAG,CAAC,GAAG,IAAI,sBAAsB,KAAK,WAAW,cAAc,GAAG,KAAI,GAAG,GAAG,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC;AAAA,MACtJ;AAAA,MACA;AAAA,QACI,QAAQ,CAAC,IAAI,eAAe,GAAG,CAAG;AAAA,QAClC,OAAO,CAAC,IAAI,eAAe,GAAG,CAAC;AAAA,QAC/B,QAAQ,CAAC,IAAI,kBAAkB,CAAC;AAAA,MACpC;AAAA,IACJ;AAKI,SAAK,eAAe;AAAA,MAChB,IAAI,SAAS;AAAA,QACT,UAAU,GAAG,MAAO,MAAO,IAAK;AAAA,QAChC,MAAM,GAAG,KAAO,KAAM,GAAI;AAAA,QAC1B,OAAO;AAAA,MACX,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAML,CAAC;AAED,SAAK,SAAS,IAAI,QAAQ;AAAA,MACtB,UAAU,GAAG,KAAK,GAAG;AAAA,MACrB,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,MAAM;AAAA,IACV,CAAC;AAAA,EAEL;AAAA,EAEA,QAAQ,GAAwB;AAC5B,QAAI,EAAE,QAAQ,SAAS;AACnB,WAAK,MAAM;AAAA,IACf;AAAA,EACJ;AAAA,EAEA,MAAM,IAAa,CAAC,KAAK,SAAS;AAC9B,SAAK,UAAU;AACf,SAAK,OAAO,SAAS,CAAC,KAAK;AAC3B,SAAK,IAAI,SAAS,KAAK;AACvB,QAAI,KAAK,SAAS;AACd,WAAK,OAAO,WAAW,GAAG,GAAG,MAAM,CAAC;AAAA,IACxC,OAAO;AACH,WAAK,OAAO,WAAW,KAAK,IAAI,SAAS,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE,SAAS,CAAC,KAAK,IAAI,SAAS,GAAG,MAAM,CAAC,CAAC,EAAE,MAAM;AAAA,IAC7G;AAAA,EACJ;AAAA,EAEA,UAAU,GAAW,GAAW;AAC5B,UAAM,IAAI;AAAA,MACN,MAAM,IAAI;AAAA,MACV;AAAA,MACA,MAAM,IAAI;AAAA,IACd;AACA,QAAI,KAAK,OAAO,IAAI,KAAK;AACrB,WAAK,SAAS,IAAI,MAAM,EAAE,KAAK,iCAAiC,MAAM,GAAG,IAAI,IAAI,EAAE,GAAG,UAAU,EAAE,CAAC,CAAC;AAAA,IACxG,OAAO;AACH,WAAK,SAAS,IAAI,MAAM,EAAE,KAAK,iCAAiC,MAAM,GAAG,IAAI,IAAI,EAAE,GAAG,UAAU,EAAE,CAAC,CAAC;AAAA,IACxG;AAEA,aAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC3B,eAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC3B,YAAI,KAAK,OAAO,IAAI,KAAK;AACrB,eAAK,SAAS,IAAI,MAAM;AAAA,YACpB,KAAK,CAAC,iCAAiC,iCAAiC,iCAAiC,wBAAwB,EAAE,KAAK,MAAM,KAAK,OAAO,IAAI,CAAC,CAAC;AAAA,YAChK,MAAM;AAAA,cACF;AAAA,cACA;AAAA,cACA;AAAA,YACJ,EAAE,MAAM,KAAK,KAAK,KAAK,OAAO,IAAI,CAAC,CAAC;AAAA,YACpC,UAAU,EAAE,IAAI;AAAA,cACX,KAAK,KAAO,KAAK,OAAO,IAAI;AAAA,cAC7B;AAAA,cACC,KAAK,KAAO,KAAK,OAAO,IAAI,IAAK;AAAA,YACtC,CAAC;AAAA,YACD,UAAU;AAAA,cACN;AAAA,cACA,KAAK,MAAM,KAAK,OAAO,IAAI,CAAC,IAAI,KAAK;AAAA,cACrC;AAAA,YACJ;AAAA,UACJ,CAAC,CAAC;AAAA,QACN;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,UAAU,GAAW,GAAW;AAC5B,QAAI,KAAK,OAAO,IAAI,KAAK;AACrB,WAAK,SAAS,IAAI,MAAM,EAAE,KAAK,oCAAoC,MAAM,GAAG,KAAK,KAAK,GAAG,GAAG,UAAU,GAAG,IAAI,MAAM,MAAM,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA,IAClJ,OAAO;AACH,WAAK,SAAS,IAAI,MAAM,EAAE,KAAK,oCAAoC,MAAM,GAAG,KAAK,KAAK,GAAG,GAAG,UAAU,GAAG,IAAI,MAAM,KAAM,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA,IAClJ;AACA,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,UAAI,KAAK,OAAO,IAAI,KAAK;AACrB,aAAK,SAAS,IAAI,MAAM,EAAE,KAAK,qCAAqC,MAAM,GAAG,IAAI,IAAI,EAAE,GAAG,UAAU,GAAG,IAAI,MAAM,MAAQ,IAAI,IAAK,IAAI,IAAI,MAAM,EAAE,EAAE,CAAC,CAAC;AAAA,MAC1J;AACA,UAAI,KAAK,OAAO,IAAI,KAAK;AACrB,aAAK,SAAS,IAAI,MAAM,EAAE,KAAK,qCAAqC,MAAM,GAAG,IAAI,IAAI,EAAE,GAAG,UAAU,GAAG,IAAI,MAAM,MAAQ,IAAI,IAAK,IAAK,IAAI,MAAO,GAAG,GAAG,UAAU,GAAG,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;AAAA,MAC1L;AAAA,IACJ;AAAA,EACJ;AAAA,EAGA,QAAQ;AACJ,UAAM,MAAM;AAQZ,SAAK,SAAS,IAAI,OAAO;AAAA,MACrB,UAAU,GAAG,GAAG,GAAG,GAAG;AAAA,MACtB,UAAU,GAAG,GAAG,KAAK,CAAC;AAAA,IAC1B,CAAC;AACD,SAAK,SAAS,KAAK,MAAM;AASzB,SAAK,SAAS,IAAI,MAAM;AAAA,MACpB,UAAU,GAAG,GAAG,IAAI,GAAG;AAAA,MACvB,OAAO,CAAC,KAAK,KAAK,MAAM,CAAC;AAAA,MACzB,UAAU,CAAC,KAAK,KAAK,KAAK,CAAC;AAAA,MAC3B,OAAO,CAAC,IAAI,IAAI;AAAA,MAChB,OAAO,CAAC,KAAK,IAAI;AAAA,MACjB,WAAW,GAAG,GAAG,GAAG,EAAE;AAAA,IAC1B,CAAC,CAAC;AACF,SAAK,SAAS,IAAI,SAAS,EAAE,MAAM,GAAG,KAAO,GAAG,GAAK,GAAG,UAAU,GAAG,MAAO,IAAI,IAAK,GAAG,QAAQ,CAAC,CAAC,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACzI,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,aAAK,UAAU,GAAG,CAAC;AAAA,MAMvB;AAAA,IACJ;AAsBA,SAAK,SAAS,IAAI,QAAQ;AAAA,MACtB,SAAS,KAAK,KAAK;AAAA,MACnB,UAAU,GAAG,MAAO,GAAG,GAAG;AAAA,MAC1B,MAAM,GAAG,KAAM,GAAI;AAAA,MACnB,SAAS;AAAA,IACb,CAAC,CAAC;AACF,SAAK,SAAS,IAAI,QAAQ;AAAA,MACtB,SAAS,KAAK,KAAK;AAAA,MACnB,UAAU,GAAG,MAAO,GAAG,KAAK;AAAA,MAC5B,MAAM,GAAG,KAAM,GAAI;AAAA,MACnB,SAAS;AAAA,IACb,CAAC,CAAC;AACF,SAAK,SAAS,IAAI,QAAQ;AAAA,MACtB,SAAS,KAAK,KAAK;AAAA,MACnB,UAAU,GAAG,OAAO,GAAG,KAAK;AAAA,MAC5B,MAAM,GAAG,KAAM,GAAI;AAAA,MACnB,SAAS;AAAA,IACb,CAAC,CAAC;AACF,SAAK,SAAS,IAAI,QAAQ;AAAA,MACtB,SAAS,KAAK,KAAK;AAAA,MACnB,UAAU,GAAG,KAAK,GAAG,KAAK;AAAA,MAC1B,MAAM,GAAG,KAAM,GAAI;AAAA,MACnB,SAAS;AAAA,IACb,CAAC,CAAC;AAAA,EA8BN;AAAA,EAEO,KAAK,KAA6B;AACrC,UAAM,KAAK,GAAG;AAAA,EAIlB;AAGJ;;;AC1QO,IAAM,gBAAN,cAA4B,KAAI;AAAA,EACnC,QAAO;AACH,UAAM,MAAM;AACZ,SAAK,SAAS,aAAa,IAAI,MAAM,CAAC;AACtC,SAAK,YAAY,WAAW;AAAA,EAChC;AACJ;;;ACGO,IAAI,OAAO,IAAI,MAAK;AAAA,EAAL;AAclB,SAAO,SAAuB,IAAI,aAAa;AAAA;AAAA,EAZ/C,IAAW,WAAU;AACjB,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAW,OAAM;AACb,WAAO,KAAK,KAAK,OAAO;AAAA,EAC5B;AAAA,EACA,IAAW,QAAO;AACd,WAAO,KAAK,KAAK,OAAO;AAAA,EAC5B;AAAA,EACA,IAAW,UAAU;AACjB,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EAEA,IAAW,SAAiB;AACxB,WAAO,KAAK,OAAO;AAAA,EACvB;AACJ;AAEO,IAAMC,QAAN,MAAW;AAAA,EAwCP,cAAc;AApCrB,SAAO,QAA8B,CAAC;AACtC,SAAO,eAAwB;AAC/B,SAAQ,aAAqB;AAC7B,SAAQ,UAAmB;AAE3B,SAAO,QAAgB;AACvB,SAAO,aAAyB,IAAI,WAAW;AAE/C,SAAO,SAGH;AAAA,MACA,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAuBI,SAAK,OAAO;AACZ,SAAK,MAAM;AACX,SAAK,OAAO,MAAM;AAAA,EACtB;AAAA,EAzBA,IAAI,IAAsB;AACtB,WAAO,KAAK,SAAS;AAAA,EACzB;AAAA,EACA,IAAW,YAAoB;AAC3B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAW,UAAU,OAAe;AAChC,QAAI,QAAQ,KAAK,YAAY;AACzB,WAAK;AAAA,IACT;AACA,QAAI,CAAC,KAAK,SAAS;AACf,UAAI,UAAU,KAAK,KAAK,cAAc;AAClC,aAAK,MAAM;AAAA,MACf,OAAO;AACH,aAAK,OAAO,OAAO,OAAO,KAAK,KAAK;AAAA,MACxC;AAAA,IACJ;AACA,SAAK,aAAa;AAAA,EAEtB;AAAA,EAOA,QAAQ;AACJ,SAAK,WAAW,IAAI,SAAS;AAE7B,SAAK,SAAS,IAAI,OAAO;AACzB,SAAK,SAAS,SAAS,KAAK,MAAM;AAElC,SAAK,MAAM,IAAI,WAAW,IAAI;AAC9B,SAAK,WAAW;AAEhB,SAAK,SAAS,IAAI,OAAO;AACzB,SAAK,OAAO,IAAI,KAAK,KAAK,KAAK,IAAI,CAAC;AACpC,SAAK,MAAM;AACX,SAAK,IAAI,UAAU;AAEnB,QAAI,KAAK,cAAc,GAAG;AACtB,WAAK,MAAM;AAAA,IACf,OAAO;AACH,WAAK,eAAe;AAAA,IACxB;AAAA,EACJ;AAAA,EAEO,KAAK,KAAuB;AAC/B,SAAK,SAAS,KAAK,GAAG;AAAA,EAC1B;AAAA,EAEQ,aAAa;AACjB,SAAK,QAAQ,QAAQ,IAAI,cAAc,CAAC;AACxC,SAAK,WAAW,MAAM;AAAA,EAC1B;AAAA,EAEQ,QAAQ;AACZ,SAAK,MAAM,IAAI,IAAI;AACnB,SAAK,SAAS,YAAY,KAAK,GAAG;AAClC,SAAK,OAAO,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,GAAG,CAAC;AAAA,EAChD;AAAA,EAEU,QAAQ,GAAW,MAAY;AACrC,SAAK,MAAM,CAAC,IAAI;AAChB,SAAK,SAAS,QAAQ,IAAI;AAAA,EAC9B;AAAA,EAEO,WAAW,GAAW;AACzB,aAAS,QAAQ;AACjB,SAAK,OAAO,OAAO,KAAK,MAAM,CAAC;AAC/B,WAAO,QAAQ,KAAK,KAAK,EAAE,QAAQ,CAAC,CAAC,KAAK,IAAI,MAAM;AAChD,WAAK,SAAS,QAAQ;AAAA,IAC1B,CAAC;AAAA,EACL;AAAA,EAEA,IAAW,OAAa;AACpB,WAAO,KAAK,OAAO;AAAA,EACvB;AAAA,EACA,IAAW,QAAe;AACtB,WAAO,KAAK,OAAO;AAAA,EACvB;AAAA,EACA,IAAW,KAA4B;AACnC,WAAO,KAAK,IAAI;AAAA,EACpB;AAAA,EAEO,QAAQ;AACX,SAAK,UAAU;AACf,SAAK,OAAO,UAAU;AACtB,SAAK,IAAI,UAAU;AACnB,SAAK,OAAO,MAAM;AAAA,EACtB;AACJ;;;AC5IA,SAAS,iBAAiB,oBAAoB,MAAI;AAC9C,QAAM,IAAI,IAAIC,MAAK;AACnB,WAAS,KAAK,YAAY,EAAE,SAAS,GAAG;AAC5C,CAAC;",
  "names": ["scale", "str", "interval", "scale", "Game", "Game"]
}
