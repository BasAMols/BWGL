{
  "version": 3,
  "sources": ["../ts/utils/vector2.ts", "../ts/utils/elementPosition.ts", "../ts/utils/elementZoom.ts", "../ts/utils/elementSize.ts", "../ts/utils/elementVisible.ts", "../ts/utils/element.ts", "../ts/elements/dom/domElement.ts", "../ts/elements/canvas/canvasElement.ts", "../ts/elements/canvas/canvasWrapper.ts", "../ts/elements/dom/domText.ts", "../ts/utils/debug/fps.ts", "../ts/utils/ticker.ts", "../ts/utils/event.ts", "../ts/utils/input.ts", "../ts/elements/dom/domCanvas.ts", "../ts/utils/debug/loader.ts", "../node_modules/gl-matrix/esm/common.js", "../node_modules/gl-matrix/esm/mat4.js", "../ts/utils/glInit.ts", "../ts/utils/vector3.ts", "../ts/utils/gl.ts", "../ts/utils/mode.ts", "../ts/elements/canvas/canvasColor.ts", "../ts/elements/canvas/canvasSquare.ts", "../ts/elements/canvas/canvasBackground.ts", "../ts/utils/colors.ts", "../ts/elements/gl/glElement.ts", "../ts/elements/gl/glRendable.ts", "../ts/elements/gl/glTexture.ts", "../ts/elements/gl/glMesh.ts", "../ts/elements/gl/glObj.ts", "../ts/utils/level.ts", "../ts/utils/character.ts", "../ts/utils/controller.ts", "../ts/utils/utils.ts", "../ts/modes/side/character/SideController.ts", "../ts/modes/side/character/SideCharacter.ts", "../ts/modes/side/levels/world.ts", "../ts/modes/side/SideMode.ts", "../ts/game.ts", "../ts/index.ts"],
  "sourcesContent": ["export function v2(n: [number, number?] | number, y?: number) {\r\n\tif (typeof n === 'number') {\r\n\t\treturn Vector2.f(n, y);\r\n\t} else if (typeof n === 'undefined') {\r\n\t\treturn Vector2.f(0);\r\n\t} else {\r\n\t\treturn Vector2.f(...n);\r\n\t}\r\n}\r\n\r\nexport class Vector2 {\r\n\tx: number;\r\n\ty: number;\r\n\tstatic Vector2: {};\r\n\tconstructor(x: number, y: number) {\r\n\t\tthis.x = (x === undefined) ? 0 : x;\r\n\t\tthis.y = (y === undefined) ? 0 : y;\r\n\t}\r\n\r\n\tstatic f(x: number = 0, y: number = x) {\r\n\t\treturn new Vector2(x, y);\r\n\t}\r\n\r\n\tclone(): Vector2 {\r\n\t\treturn new Vector2(this.x, this.y);\r\n\t}\r\n\r\n\tadd(vector: Vector2) {\r\n\t\treturn new Vector2(this.x + vector.x, this.y + vector.y);\r\n\t}\r\n\r\n\tmultiply(vector: Vector2) {\r\n\t\treturn new Vector2(this.x * vector.x, this.y * vector.y);\r\n\t}\r\n\r\n\tsubtract(vector: Vector2) {\r\n\t\treturn new Vector2(this.x - vector.x, this.y - vector.y);\r\n\t}\r\n\r\n\tscale(scalar: number) {\r\n\t\treturn new Vector2(this.x * scalar, this.y * scalar);\r\n\t}\r\n\r\n\tdot(vector: Vector2) {\r\n\t\treturn (this.x * vector.x + this.y + vector.y);\r\n\t}\r\n\r\n\tmoveTowards(vector: Vector2, t: number) {\r\n\t\tt = Math.min(t, 1); // still allow negative t\r\n\t\tvar diff = vector.subtract(this);\r\n\t\treturn this.add(diff.scale(t));\r\n\t}\r\n\r\n\tmagnitude() {\r\n\t\treturn Math.sqrt(this.magnitudeSqr());\r\n\t}\r\n\r\n\tmagnitudeSqr() {\r\n\t\treturn (this.x * this.x + this.y * this.y);\r\n\t}\r\n\r\n\tdistance(vector: Vector2) {\r\n\t\treturn Math.sqrt(this.distanceSqr(vector));\r\n\t}\r\n\r\n\tdistanceSqr(vector: Vector2) {\r\n\t\tvar deltaX = this.x - vector.x;\r\n\t\tvar deltaY = this.y - vector.y;\r\n\t\treturn (deltaX * deltaX + deltaY * deltaY);\r\n\t}\r\n\r\n\tnormalize() {\r\n\t\tvar mag = this.magnitude();\r\n\t\tvar vector = this.clone();\r\n\t\tif (Math.abs(mag) < 1e-9) {\r\n\t\t\tvector.x = 0;\r\n\t\t\tvector.y = 0;\r\n\t\t} else {\r\n\t\t\tvector.x /= mag;\r\n\t\t\tvector.y /= mag;\r\n\t\t}\r\n\t\treturn vector;\r\n\t}\r\n\r\n\tangleDegrees() {\r\n\t\treturn this.angle() * (180/Math.PI);\r\n\t}\r\n\r\n\tangle() {\r\n\t\treturn Math.atan2(this.y, this.x);\r\n\t}\r\n\r\n\r\n\trotate(rad: number) {\r\n\t\tvar cos = Math.cos(rad);\r\n\t\tvar sin = Math.sin(rad);\r\n\t\treturn new Vector2(\r\n\t\t\tthis.x * cos - this.y * sin,\r\n\t\t\tthis.x * sin + this.y * cos\r\n\t\t);\r\n\t}\r\n\r\n\ttoPrecision(precision: number) {\r\n\t\tvar vector = this.clone();\r\n\t\tvector.x = +vector.x.toFixed(precision);\r\n\t\tvector.y = +vector.y.toFixed(precision);\r\n\t\treturn vector;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\tvar vector = this.toPrecision(1);\r\n\t\treturn (\"[\" + vector.x + \"; \" + vector.y + \"]\");\r\n\t}\r\n\r\n\tpublic clamp(min:Vector2, max:Vector2) {\r\n\t\treturn Vector2.clamp(this, min, max);\r\n    }\r\n\r\n\tpublic static min(a:Vector2, b:Vector2) {\r\n        return new Vector2(\r\n\t\t\tMath.min(a.x, b.x),\r\n\t\t\tMath.min(a.y, b.y),\r\n\t\t)\r\n    }\r\n\r\n\tpublic static max(a:Vector2, b:Vector2) {\r\n\t\treturn new Vector2(\r\n\t\t\tMath.max(a.x, b.x),\r\n\t\t\tMath.max(a.y, b.y),\r\n\t\t)\r\n    }\r\n\r\n\tpublic static clamp(value:Vector2, min:Vector2, max:Vector2) {\r\n        return Vector2.max(Vector2.min(value, min), max);\r\n    }\r\n\r\n\tpublic clampMagnitute(mag: number) {\r\n\t\treturn Vector2.clampMagnitute(this, mag);\r\n    }\r\n\r\n\tpublic static clampMagnitute(value:Vector2, mag: number) {\r\n\t\tvar ratio = value.magnitude() / mag;\r\n\t\treturn new Vector2(value.x / ratio, value.y / ratio);\r\n    }\r\n\r\n\tstatic get zero() {\r\n\t\treturn new Vector2(0, 0);\r\n\t}\r\n\tstatic get down() {\r\n\t\treturn new Vector2(0, -1);\r\n\t}\r\n\tstatic get up() {\r\n\t\treturn new Vector2(0, 1);\r\n\t}\r\n\tstatic get right() {\r\n\t\treturn new Vector2(1, 0);\r\n\t}\r\n\tstatic get left() {\r\n\t\treturn new Vector2(-1, 0);\r\n\t}\r\n\tstatic get fromDegree() {\r\n\t\treturn new Vector2(0, 0);\r\n\t}\r\n}\r\n", "import { TickerReturnData } from './ticker';\r\nimport { Vector2 } from './vector2';\r\n\r\nexport interface ElementPositionAttributes {\r\n    position?: Vector2,\r\n    relativity?: ElementRelativity,\r\n\r\n}\r\nexport type ElementRelativity = 'absolute' | 'relative' | 'anchor' | 'composite';\r\nexport abstract class ElementPosition {\r\n    public active: boolean = true;\r\n    public relativity: ElementRelativity;\r\n    public lastPosition: Vector2 = Vector2.zero;\r\n    public movedAmount: Vector2 = Vector2.zero;\r\n\r\n    protected _x: number = 0;\r\n    protected _y: number = 0;\r\n\r\n    public get x() {\r\n        return this._x;\r\n    };\r\n    public set x(n) {\r\n        this._x = n;\r\n    }\r\n    public get y() {\r\n        return this._y;\r\n    };\r\n    public set y(n) {\r\n        this._y = n;\r\n    }\r\n\r\n    public get position() {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n    public set position(value: Vector2) {\r\n        this.x = value.x;\r\n        this.y = value.y;\r\n    };\r\n\r\n    constructor(attr: ElementPositionAttributes = {}) {\r\n        this.relativity = attr.relativity || 'relative';\r\n\r\n        if (attr.position) {\r\n            this.position = attr.position;\r\n            this._x = attr.position.x;\r\n            this._y = attr.position.y;\r\n        }\r\n\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        if (this.active) {\r\n            this.movedAmount = this.lastPosition.subtract(this.position);\r\n            this.lastPosition = this.position;\r\n        }\r\n    }\r\n}\r\n", "import { ElementPosition, ElementPositionAttributes } from './elementPosition';\r\nimport { Vector2 } from './vector2';\r\n\r\nexport type ElementZoomAttributes = ElementPositionAttributes & {\r\n    zoom?: Vector2,\r\n};\r\nexport abstract class ElementZoom extends ElementPosition {\r\n\r\n    protected _zoomX: number = 1;\r\n    protected _zoomY: number = 1;\r\n    public get zoomX() {\r\n        return this._zoomX;\r\n    };\r\n    public set zoomX(n) {\r\n        this._zoomX = n;\r\n    };\r\n    public get zoomY() {\r\n        return this._zoomY;\r\n    };\r\n    public set zoomY(n) {\r\n        this._zoomY = n;\r\n    };\r\n\r\n    public get zoom() {\r\n        return new Vector2(this.zoomX, this.zoomY);\r\n    }\r\n    public set zoom(value: Vector2) {\r\n        this.zoomX = value.x;\r\n        this.zoomY = value.y;\r\n    };\r\n\r\n    constructor(attr: ElementZoomAttributes = {}) {\r\n        super(attr);\r\n        if (attr.zoom) {\r\n            this._zoomX = attr.zoom.x;\r\n            this._zoomY = attr.zoom.y;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n", "import { ElementZoom, ElementZoomAttributes } from './elementZoom';\r\nimport { Vector2 } from './vector2';\r\n\r\nexport type ElementSizeAttributes = ElementZoomAttributes & {\r\n    size?: Vector2,\r\n};\r\nexport abstract class ElementSize extends ElementZoom {\r\n\r\n    protected _width: number = 0;\r\n    protected _height: number = 0;\r\n    public get width() {\r\n        return this._width;\r\n    };\r\n    public set width(n) {\r\n        this._width = n;\r\n    };\r\n    public get height() {\r\n        return this._height;\r\n    };\r\n    public set height(n) {\r\n        this._height = n;\r\n    };\r\n\r\n    public get size() {\r\n        return new Vector2(this.width, this.height);\r\n    }\r\n    public set size(value: Vector2) {\r\n        this.width = value.x;\r\n        this.height = value.y;\r\n    };\r\n\r\n    constructor(attr: ElementSizeAttributes = {}) {\r\n        super(attr);\r\n        if (attr.size) {\r\n            this._width = attr.size.x;\r\n            this._height = attr.size.y;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n", "import { ElementSize, ElementSizeAttributes } from './elementSize';\r\n\r\nexport type ElementVisibleAttributes = ElementSizeAttributes & {\r\n    visible?: boolean,\r\n}\r\nexport abstract class ElementVisible extends ElementSize{\r\n    \r\n    protected _visible: boolean = true;\r\n    public get visible () {\r\n        return this._visible;\r\n    };\r\n    public set visible (v: boolean) {\r\n        this._visible = v;\r\n    }\r\n\r\n    constructor(attr: ElementVisibleAttributes = {}) {\r\n        super(attr)\r\n        if (attr.visible !== undefined) {\r\n            this.visible = attr.visible;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n", "import { Game } from '../game';\r\nimport { ElementVisible, ElementVisibleAttributes } from './elementVisible';\r\nimport { Event } from \"./event\";\r\nimport { GLR } from './gl';\r\nimport { Level } from './level';\r\nimport { Mode } from './mode';\r\nimport { TickerReturnData } from './ticker';\r\n\r\nexport type ElementAttributes = ElementVisibleAttributes;\r\n\r\nexport abstract class Element extends ElementVisible {\r\n    public abstract rendererType: 'dom' | 'canvas' | 'gl';\r\n\r\n    private events: Event<unknown>[] = [];\r\n\r\n    get t(): TickerReturnData {\r\n        return this.game.t;\r\n    }\r\n\r\n    public parent!: Element;\r\n    public game!: Game;\r\n    public mode!: Mode;\r\n    public level!: Level;\r\n    public GLR!: GLR;\r\n    public get gl(): WebGLRenderingContext{\r\n        return this.GLR.gl\r\n    };\r\n\r\n    public build(): void  {\r\n        //\r\n    }\r\n\r\n    addEvent(e: Event<unknown>) {\r\n        this.events.push(e);\r\n    }\r\n\r\n    getEvent(id: string) {\r\n        return this.events.find((e)=>id === e.id)\r\n    }\r\n}\r\n", "import { Element, ElementAttributes } from \"../../utils/element\";\r\nimport { TickerReturnData } from '../../utils/ticker';\r\nimport { Vector2 } from \"../../utils/vector2\";\r\n\r\nexport type DomElementAttributes = ElementAttributes & {\r\n    id?: string,\r\n    background?: string,\r\n    position?: Vector2;\r\n};\r\nexport class DomElement<T extends keyof HTMLElementTagNameMap> extends Element {\r\n    public dom: HTMLElementTagNameMap[T];\r\n    public children: DomElement<any>[] = [];\r\n    public rendererType = 'dom' as const;\r\n\r\n    public get id() { return this.dom.id; }\r\n\r\n    public set id(value: string) {\r\n        if (value) {\r\n            this.dom.id = value;\r\n        }\r\n    }\r\n\r\n    public get x(): number {\r\n        return Math.round(Number(this.dom.style.left.replace(/\\D/g,'')));\r\n    }\r\n    public set x(n: number) {\r\n        if (this.dom){\r\n            this.dom.style.left = `${n}px`;\r\n        }\r\n    }\r\n    public get y(): number {\r\n        return Math.round(Number(this.dom.style.bottom.replace(/\\D/g,'')));\r\n    }\r\n    public set y(n: number) {\r\n        if (this.dom){\r\n            this.dom.style.bottom = `${n}px`;\r\n        }\r\n    }\r\n\r\n    public set visible(value: boolean) {\r\n        super.visible = value;\r\n        this.dom? this.dom.style.display = value ? 'block' : 'none': null\r\n    }\r\n\r\n    public set background(v: string) {\r\n        this.dom.style.background = v;\r\n    }\r\n\r\n    public get width() {\r\n        return Math.round(Number(this.dom.style.width.replace(/\\D/g,'')));\r\n    }\r\n    public set width(value: number) {\r\n        if (this.dom) {\r\n            this.dom.style.width = `${value}px`;\r\n            this.dom.setAttribute('width', String(value));\r\n        }\r\n    }\r\n\r\n    public get height() {\r\n        return Math.round(Number(this.dom.style.height.replace(/\\D/g,'')));\r\n    }\r\n    public set height(value: number) {\r\n        if (this.dom) {\r\n            this.dom.style.height = `${value}px`;\r\n            this.dom.setAttribute('height', String(value));\r\n        }\r\n    }\r\n\r\n    constructor(type: T, attr: DomElementAttributes = {}) {\r\n        super(attr);\r\n        this.dom = document.createElement(type);\r\n        this.dom.style.position = 'absolute';\r\n        this.dom.style.transformOrigin = 'bottom left';\r\n        this.dom.style.pointerEvents = 'none';\r\n        this.dom.style.bottom = '0px';\t\r\n        this.id = attr.id || '';\r\n        this.background = attr.background || '';\r\n        this.size = attr.size || Vector2.zero;\r\n        this.position = attr.position || Vector2.zero;\r\n    }\r\n\r\n    public ready() {\r\n        this.build();\r\n    }\r\n\r\n    public tick(obj: TickerReturnData): void {\r\n        super.tick(obj);\r\n    }\r\n\r\n    public appendChild(e: DomElement<any>) {\r\n        this.dom.appendChild(e.dom);\r\n    }\r\n\r\n    public addChild(child: DomElement<any>) {\r\n        this.children.push(child);\r\n        this.dom.appendChild(child.dom);\r\n    }\r\n\r\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\r\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        this.dom.addEventListener(type, listener, options);\r\n    };\r\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\r\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void {\r\n        this.dom.removeEventListener(type, listener, options);\r\n    };\r\n\r\n\r\n\r\n}\r\n", "import { DomElement } from '../dom/domElement';\r\nimport { CanvasController } from '../../utils/controller';\r\nimport { Element, ElementAttributes } from \"../../utils/element\";\r\nimport { TickerReturnData } from '../../utils/ticker';\r\nimport { Vector2 } from \"../../utils/vector2\";\r\nimport { GlElement } from '../gl/glElement';\r\n\r\nexport type CanvasElementAttributes = ElementAttributes & {\r\n    hasDom?: boolean,\r\n    autoReady?: boolean,\r\n    controllers?: CanvasController[];\r\n    composite?: GlobalCompositeOperation;\r\n};\r\nexport interface CanvasElement {\r\n    mouseMove?(e: MouseEvent): void;\r\n    keyDown?(e: KeyboardEvent): void;\r\n    keyUp?(e: KeyboardEvent): void;\r\n    click?(e: MouseEvent): void;\r\n    scroll?(e: WheelEvent): void;\r\n}\r\nexport type CanvasElementType = 'color' | 'image' | 'wrapper' | 'logic' | 'animation' | 'collider';\r\nexport abstract class CanvasElement extends Element {\r\n    public abstract type: CanvasElementType;\r\n    public rendererType: \"canvas\" | \"dom\" | \"gl\" = 'canvas';\r\n    public dom!: DomElement<any>;\r\n    public autoReady: boolean;\r\n    private hasDom: boolean;\r\n    public composite: GlobalCompositeOperation = 'source-over';\r\n\r\n    public get x() {\r\n        return super.x;\r\n    }\r\n\r\n    public set x(n: number) {\r\n        super.x = n;\r\n        if (this.dom) {\r\n            this.dom.x = n;\r\n        }\r\n    }\r\n\r\n    public get y() {\r\n        return super.y;\r\n    }\r\n\r\n    public set y(n: number) {\r\n        super.y = n;\r\n        if (this.dom) {\r\n            this.dom.y = n;\r\n        }\r\n    }\r\n\r\n    public get width() {\r\n        return super.width;\r\n    }\r\n\r\n    public set width(n: number) {\r\n        super.width = n;\r\n        if (this.dom) {\r\n            this.dom.width = n;\r\n        }\r\n    }\r\n\r\n    public get height() {\r\n        return super.height;\r\n    }\r\n\r\n    public set height(n: number) {\r\n        super.height = n;\r\n        if (this.dom) {\r\n            this.dom.height = n;\r\n        }\r\n    }\r\n\r\n    public get renderPosition(): Vector2 {\r\n        return this.position.add(this.anchoredPosition);\r\n    }\r\n    public get renderX() { return this.renderPosition.x; }\r\n    public get renderY() { return this.renderPosition.y; }\r\n\r\n    public lowerChildren: CanvasElement[] = [];\r\n    public higherChildren: CanvasElement[] = [];\r\n    public glElements: GlElement[] = [];\r\n    public controllers: CanvasController[] = [];\r\n    public anchoredPosition: Vector2 = Vector2.zero;\r\n\r\n    public get camera(): typeof this.mode.camera{\r\n        return this.mode.camera\r\n    }\r\n    public set camera(c: typeof this.mode.camera){\r\n        this.mode.camera = c;\r\n    }\r\n\r\n    constructor(attr: CanvasElementAttributes = {}) {\r\n        super(attr);\r\n        this.hasDom = attr.hasDom || false;\r\n        if (this.hasDom) {\r\n            this.dom = new DomElement('div');\r\n        }\r\n\r\n        this.autoReady = attr.autoReady !== undefined? attr.autoReady: true;\r\n        this.composite = attr.composite || 'source-over';\r\n        this.addControllers(attr.controllers || []);\r\n    }\r\n\r\n    public ready() {\r\n        this.build();\r\n        if (this.game.waitCount){\r\n            this.game.waitCount--;\r\n        }\r\n    }\r\n\r\n    public addChild(child: CanvasElement | DomElement<any> | GlElement, above: boolean = false): typeof child {\r\n        child.parent ??= this;\r\n        child.game ??= this.game;\r\n        child.mode ??= this.mode;\r\n        child.level ??= this.level;\r\n        child.GLR ??= this.game.GLR;\r\n        if (this.game.waitCount) {\r\n            this.game.waitCount++;\r\n        }\r\n\r\n        if (child.rendererType === 'canvas') {\r\n            this[above ? 'higherChildren' : 'lowerChildren'].push(child);\r\n            child.registerControllers(child);\r\n            if (child.dom && this.hasDom) {\r\n                this.dom.addChild(child.dom);\r\n            }\r\n        } else if (child.rendererType === 'gl') {\r\n            this.glElements.push(child as GlElement);\r\n        } else {\r\n            if (this.hasDom) {\r\n                this.dom.addChild(child as DomElement<any>);\r\n            } else {\r\n                console.log('The CanvasElement class does not have a dom element to add children to. Child:', child.constructor.name);\r\n            }\r\n        }\r\n\r\n        if (child.rendererType === 'dom' || child.autoReady) {\r\n            child.ready();\r\n        }\r\n\r\n        // if (child.rendererType === 'canvas' && child.type === 'collider' && (child as Collider).colliderType === 'static' && this.level) {\r\n        //     this.level.colliders.push(child as Collider);\r\n        // }\r\n\r\n        return child;\r\n\r\n    }\r\n\r\n    public addControllers(c: CanvasController[]) {\r\n        if (c.length > 0) {\r\n            this.controllers.push(...c);\r\n        }\r\n    }\r\n\r\n    public registerControllers(child: CanvasElement) {\r\n        child.controllers.forEach((controller) => {\r\n            if (controller.parent === undefined) {\r\n                controller.parent ??= child;\r\n                controller.game ??= child.game;\r\n                controller.mode ??= child.mode;\r\n                controller.level ??= child.level;\r\n                controller.build();\r\n            }\r\n        });\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n\r\n        this.controllers.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        this.lowerChildren.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        this.higherChildren.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        this.glElements.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n\r\n        if (this.dom) {\r\n            this.dom.tick(obj);\r\n        }\r\n    }\r\n\r\n\r\n    public preRender(c: CanvasRenderingContext2D, gl?: WebGLRenderingContext) {\r\n        c.save();\r\n\r\n        if (this.relativity === 'anchor' || this.relativity === 'composite') {\r\n            c.translate(this.x, this.y);\r\n            c.scale(this.zoom.x, this.zoom.y);\r\n        }\r\n\r\n        c.save();\r\n        c.globalCompositeOperation = this.composite;\r\n        this.renderLower(c);\r\n        this.render(c);\r\n        c.restore();\r\n    }\r\n\r\n    public renderLower(c: CanvasRenderingContext2D, gl?: WebGLRenderingContext) {\r\n        this.lowerChildren.filter((child) => child.visible && child.active).forEach((child) => {\r\n            child.preRender(c);\r\n            child.postRender(c);\r\n        });\r\n    }\r\n\r\n    public render(c: CanvasRenderingContext2D, gl?: WebGLRenderingContext) {\r\n        //\r\n    }\r\n\r\n    public renderHigher(c: CanvasRenderingContext2D, gl?: WebGLRenderingContext) {\r\n        this.higherChildren.filter((child) => child.visible && child.active).forEach((child) => {\r\n            child.preRender(c);\r\n            child.postRender(c);\r\n        });\r\n        // if (gl) {\r\n        //     this.glElements.filter((child) => child.visible && child.active).forEach((child) => {\r\n        //         child.preRender(gl);\r\n        //         child.postRender(gl);\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    public renderGl(gl: WebGLRenderingContext) {\r\n        this.glElements.filter((child) => child.visible && child.active).forEach((child) => {\r\n            child.preRender(gl);\r\n            child.postRender(gl);\r\n        });\r\n    }\r\n\r\n    public postRender(c: CanvasRenderingContext2D, gl?: WebGLRenderingContext) {\r\n        this.renderHigher(c);\r\n        // this.renderGl(gl);\r\n        c.restore();\r\n    }\r\n\r\n}\r\n\r\n\r\n", "import { ElementRelativity } from '../../utils/elementPosition';\r\nimport { CanvasElement, CanvasElementAttributes, CanvasElementType } from './canvasElement';\r\n\r\nexport type CanvasWrapperAttributes = CanvasElementAttributes & {\r\n};\r\nexport class CanvasWrapper extends CanvasElement {\r\n    public type: CanvasElementType = 'wrapper';\r\n    public relativity: ElementRelativity;\r\n\r\n    constructor(attr: CanvasWrapperAttributes = {}) {\r\n        super(attr);\r\n        if (!attr.relativity) {\r\n            this.relativity = 'anchor';\r\n        }\r\n    }\r\n}\r\n\r\n\r\n", "import { DomElement, DomElementAttributes } from \"./domElement\";\r\n\r\nexport type  DomTextAttributes = DomElementAttributes & {\r\n    text?: string,\r\n    color?: string,\r\n    fontSize?: number,\r\n    fontWeight?: number,\r\n    fontFamily?: string,\r\n    padding?: [number,number,number,number],\r\n}\r\nexport class DomText extends DomElement<'div'> {\r\n    set color (v: string) {\r\n        this.dom.style.color = v; \r\n    }\r\n    set fontSize (v: number) {\r\n        this.dom.style.fontSize = String(v)+'px'; \r\n    }\r\n    set fontWeight (v: number) {\r\n        this.dom.style.fontWeight = String(v); \r\n    }\r\n    set fontFamily (v: string) {\r\n        this.dom.style.fontFamily = v; \r\n    }\r\n    public get text() {\r\n        return this.dom.innerHTML;\r\n    }\r\n    public set text (v: string) {\r\n        this.dom.innerHTML = v?v:''; \r\n    }\r\n    public set padding (v: [number,number,number,number]) {\r\n        this.dom.style.padding = v.join('px ')+'px'; \r\n    }\r\n    public constructor(attr: DomTextAttributes = {}) {\r\n        super('div', attr);\r\n        this.color = attr.color;\r\n        this.text = attr.text;\r\n        this.fontSize = attr.fontSize;\r\n        this.fontWeight = attr.fontWeight;\r\n        this.fontFamily = attr.fontFamily;\r\n        this.padding = attr.padding || [0,0,0,0];\r\n\r\n        this.dom.style.pointerEvents = 'none';\r\n        this.dom.style.userSelect = 'none';\r\n        this.dom.style.zIndex = '1';\r\n    }\r\n}", "import { DomText } from \"../../elements/dom/domText\";\r\nimport { TickerReturnData } from '../ticker';\r\nimport { Vector2 } from '../vector2';\r\n\r\nexport class FPS extends DomText {\r\n    private fCount: number = 0;\r\n    private tCount: number = 0;\r\n    public constructor( ) {\r\n        super({\r\n            text: FPS.getString(''),\r\n            fontSize: 35,\r\n            fontWeight: 900,\r\n            color: 'white',\r\n            position: new Vector2(5,5), \r\n            size: new Vector2(100, 50),\r\n            background: '#ff0000aa',\r\n            fontFamily: 'monospace',\r\n            padding: [0,10,0,10]\r\n        });\r\n    }\r\n\r\n    public tick({frameRate, frame}: TickerReturnData){\r\n        if (frame % 100 === 1){\r\n            this.text = FPS.getString(frameRate.toFixed(0));\r\n        }\r\n    }\r\n\r\n    public static getString(v: string){\r\n        return `${String(v)}<sub style=\"font-size:25px; top: -7px; position: relative\">FPS</sub>`\r\n    }\r\n}", "export type TickerReturnData = { interval: number, total: number, frameRate: number, frame: number; };\r\nexport type TickerCallback = (obj: TickerReturnData) => void;\r\nexport class Ticker {\r\n    private _running: boolean = false;\r\n    private started: boolean = false;\r\n    private pauzedTime: number = 0;\r\n    private id: number;\r\n    public get running(): boolean {\r\n        return this._running;\r\n    }\r\n    public set running(value: boolean) {\r\n        this._running = value;\r\n        \r\n        if (value) {\r\n            this.pTime = performance.now() - this.pauzedTime;\r\n            this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n        } else {\r\n            window.cancelAnimationFrame(this.id);\r\n            this.pauzedTime = performance.now() - this.pTime\r\n            \r\n        }\r\n    }\r\n    constructor() {\r\n        document.addEventListener(\"visibilitychange\", () => {\r\n            if (this.started) {\r\n                this.running = !document.hidden;\r\n            }\r\n        });\r\n    }\r\n    private callbacks: TickerCallback[] = [];\r\n    private sTime: number;\r\n    public get startTime() {\r\n        return this.sTime;\r\n    }\r\n    private eTime: number;\r\n    // public get elapsed() {\r\n    //     return this.eTime;\r\n    // }\r\n    private pTime: number;\r\n    private frameN: number = 0;\r\n\r\n    private frame(timeStamp: number) {\r\n\r\n        if (this.running) {\r\n            const interval = timeStamp - this.pTime;\r\n            this.pTime = timeStamp;\r\n            this.frameN++;\r\n\r\n            const o = {\r\n                interval,\r\n                total: this.eTime,\r\n                frameRate: 1000 / interval,\r\n                frame: this.frameN,\r\n            };\r\n\r\n            this.callbacks.forEach((c) => {\r\n                c(o);\r\n            });\r\n\r\n            this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n        }\r\n    }\r\n\r\n    public start() {\r\n        this.started = true;\r\n        this._running = true;\r\n        this.sTime = performance.now();\r\n        this.pTime = performance.now();\r\n        this.id = window.requestAnimationFrame(this.frame.bind(this));\r\n    }\r\n\r\n    public add(callback: TickerCallback) {\r\n        this.callbacks.push(callback);\r\n    }\r\n}\r\n", "export type eventFunction<T> = (v: T) => void;\r\nexport class Event<T> {\r\n    public id: string;\r\n    private subscribers: Record<string, eventFunction<T>> = {};\r\n    constructor(id: string) {\r\n        this.id = id;\r\n    }\r\n\r\n    public subscribe(key: string, func: eventFunction<T>) {\r\n        this.subscribers[key] = func;\r\n    }\r\n\r\n    public alert(v: T) {\r\n        Object.values(this.subscribers).forEach((s) => {\r\n            s(v);\r\n        });\r\n    }\r\n}\r\n", "import { CanvasElement } from '../elements/canvas/canvasElement';\r\nimport { DomCanvas } from '../elements/dom/domCanvas';\r\nimport { DomText } from '../elements/dom/domText';\r\nimport { GlElement } from '../elements/gl/glElement';\r\nimport { Game } from '../game';\r\n\r\nexport type inputEvents = 'mouseMove' | 'keyDown' | 'keyUp' | 'click' | 'scroll';\r\nexport type inputEventsData = {\r\n    'mouseMove': MouseEvent,\r\n    'keyDown': KeyboardEvent,\r\n    'keyUp': KeyboardEvent,\r\n    'click': MouseEvent,\r\n    'scroll': WheelEvent,\r\n};\r\nexport class Input {\r\n    private canvas: DomCanvas;\r\n    private game: Game;\r\n    private _locked: boolean;\r\n    private overlay: DomText;\r\n    public get locked(): boolean {\r\n        return this._locked;\r\n    }\r\n    public set locked(value: boolean) {\r\n        this._locked = value;\r\n        this.overlay.dom.style.display = !value? 'block': 'none';\r\n    }\r\n    public constructor(game: Game) {\r\n        this.game = game;\r\n        this.canvas = game.renderer;\r\n        this.canvas.dom.addEventListener('mousemove', this.mouseMove.bind(this));\r\n        this.canvas.dom.addEventListener('keydown', this.keyDown.bind(this));\r\n        this.canvas.dom.addEventListener('keyup', this.keyUp.bind(this));\r\n        this.canvas.dom.addEventListener('click', this.mouseClick.bind(this));\r\n        this.canvas.dom.addEventListener('wheel', this.scroll.bind(this));\r\n        this.overlay = new DomText({\r\n            text: 'Pauzed',\r\n        });\r\n        this.overlay.dom.setAttribute('style', `\r\n            transform-origin: left bottom;\r\n            pointer-events: none;\r\n            bottom: 0px;\r\n            left: 0px;\r\n            user-select: none;\r\n            z-index: 999;\r\n            position: absolute;\r\n            height: 100vh;\r\n            width: 100vw;\r\n            color: white !important;\r\n            font-family: monospace;\r\n            font-weight: bold;\r\n            font-size: 40px;\r\n            padding-left: 50px;\r\n            padding-top: 20px;\r\n            box-sizing: border-box;\r\n            text-transform: uppercase;`\r\n        );\r\n        document.body.appendChild(this.overlay.dom);\r\n\r\n        document.addEventListener('pointerlockchange', () => {\r\n            this.locked = (document.pointerLockElement === this.canvas.dom);\r\n        });\r\n\r\n    }\r\n\r\n    public mouseClick(e: MouseEvent) {\r\n        if (this.locked) {\r\n            this.send('click', e);\r\n        } else {\r\n            this.canvas.dom.requestPointerLock();\r\n        }\r\n    }\r\n    public mouseMove(e: MouseEvent) {\r\n        if (this.locked) {\r\n            this.send('mouseMove', e);\r\n        }\r\n\r\n    }\r\n\r\n    public scroll(e: WheelEvent) {\r\n        if (this.locked) {\r\n            this.send('scroll', e);\r\n        }\r\n\r\n    }\r\n\r\n    public keyDown(e: KeyboardEvent) {\r\n        if (this.locked) {\r\n            this.send('keyDown', e);\r\n        }\r\n    }\r\n\r\n    public keyUp(e: KeyboardEvent) {\r\n        if (this.locked) {\r\n            this.send('keyUp', e);\r\n        }\r\n    }\r\n\r\n    private send(event: inputEvents, e: KeyboardEvent | MouseEvent) {\r\n        Object.values(this.game.modes).forEach((mode) => this.recursive(event, mode, e));\r\n    }\r\n\r\n    private recursive(event: inputEvents, element: CanvasElement | GlElement, e: KeyboardEvent | MouseEvent | WheelEvent) {\r\n        if (element.active) {\r\n            if (element[event]) {\r\n                if (event === 'mouseMove' || event === 'click') {\r\n                    element[event](e as MouseEvent);\r\n                } else if (event === 'scroll') {\r\n                    element[event](e as WheelEvent);\r\n                } else {\r\n                    element[event](e as KeyboardEvent);\r\n                }\r\n            }\r\n            if (element.rendererType !== 'gl') {\r\n                element.lowerChildren.forEach((child) => this.recursive(event, child, e));\r\n                element.higherChildren.forEach((child) => this.recursive(event, child, e));\r\n                element.glElements.forEach((child) => this.recursive(event, child, e));\r\n            } \r\n            if (element.rendererType === 'gl') {\r\n                (element as GlElement).glChildren.forEach((child) => this.recursive(event, child, e));\r\n            } \r\n            element.controllers.forEach((child) => this.recursive(event, child, e));\r\n        }\r\n    }\r\n}", "import { Game } from '../../game';\r\nimport { ElementAttributes } from \"../../utils/element\";\r\nimport { Mode } from '../../utils/mode';\r\nimport { TickerReturnData } from '../../utils/ticker';\r\nimport { Vector2 } from \"../../utils/vector2\";\r\nimport { DomElement } from './domElement';\r\n\r\nexport type DomElementAttributes = ElementAttributes & {\r\n    id?: string,\r\n    size?: Vector2,\r\n    background?: string,\r\n    position?: Vector2;\r\n};\r\nexport class DomCanvas extends DomElement<'canvas'> {\r\n    public dom: HTMLCanvasElement;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public domGl: HTMLCanvasElement;\r\n    public tickerData: TickerReturnData;\r\n\r\n    constructor(public game: Game) {\r\n        super('canvas');\r\n        this.dom = document.createElement('canvas');\r\n        this.dom.style.position = 'absolute';\r\n        this.dom.style.imageRendering = 'pixelated';\r\n        this.dom.style.pointerEvents = 'all';\r\n        this.dom.style.bottom = '0px';\r\n        this.ctx = this.dom.getContext('2d');\r\n        this.ctx.imageSmoothingEnabled = false;\r\n\r\n        this.domGl = document.createElement('canvas');\r\n        this.domGl.style.position = 'absolute';\r\n        this.domGl.style.pointerEvents = 'none';\r\n        this.domGl.style.bottom = '0px';\r\n\r\n    }\r\n\r\n    public build(): void {\r\n        this.game.ctx = this.ctx;\r\n        this.dom.tabIndex = 1;\r\n\r\n        this.game.getEvent('resize').subscribe(String(Math.random()), (size: Vector2) => {\r\n            this.size = size;\r\n            this.game?.GLR?.resize();\r\n        });\r\n        this.game.resize();\r\n\r\n    }\r\n\r\n    public get width() {\r\n        return Math.round(Number(this.dom.style.width.replace(/\\D/g, '')));\r\n    }\r\n    public set width(value: number) {\r\n        if (this.dom) {\r\n            this.dom.style.width = `${value}px`;\r\n            this.dom.setAttribute('width', String(value));\r\n        }\r\n        if (this.domGl) {\r\n            this.domGl.style.width = `${value}px`;\r\n            this.domGl.setAttribute('width', String(value));\r\n        }\r\n    }\r\n\r\n    public get height() {\r\n        return Math.round(Number(this.dom.style.height.replace(/\\D/g, '')));\r\n    }\r\n    public set height(value: number) {\r\n        if (this.dom) {\r\n            this.dom.style.height = `${value}px`;\r\n            this.dom.setAttribute('height', String(value));\r\n        }\r\n        if (this.domGl) {\r\n            this.domGl.style.height = `${value}px`;\r\n            this.domGl.setAttribute('height', String(value));\r\n        }\r\n    }\r\n\r\n    public addMode(child: Mode) {\r\n        child.parent ??= this.game;\r\n        child.game ??= this.game;\r\n        child.mode ??= this.mode;\r\n        child.level ??= this.level;\r\n        child.GLR ??= this.game.GLR;\r\n        this.game.dom.appendChild(child.dom);\r\n        child.registerControllers(child);\r\n        child.build();\r\n    }\r\n\r\n    private _context: '2d' | '3d';\r\n    public get context(): '2d' | '3d' {\r\n        return this._context;\r\n    }\r\n    public set context(value: '2d' | '3d') {\r\n        this._context = value;\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        this.tickerData = obj;\r\n\r\n        this.ctx.clearRect(0, 0, this.width, this.height);\r\n\r\n        this.ctx.save();\r\n        this.ctx.scale(1, -1);\r\n        this.ctx.translate(0, -this.height);\r\n\r\n        Object.values(this.game.modes).filter((child) => child.active).forEach((mode) => mode.tick(obj));\r\n\r\n        Object.values(this.game.modes).filter((child) => child.visible && child.active).forEach((mode) => {\r\n            mode.preRender(this.ctx);\r\n            mode.postRender(this.ctx);\r\n        });\r\n        this.ctx.restore();\r\n\r\n        this.game.GLR.draw();\r\n    }\r\n}\r\n\r\n\r\n", "import { DomElement } from '../../elements/dom/domElement';\r\nimport { DomText } from \"../../elements/dom/domText\";\r\nimport { Vector2 } from '../vector2';\r\n\r\nexport class Loader extends DomElement<'div'> {\r\n    bar: DomElement<'div'>;\r\n    barBackground: DomElement<'div'>;\r\n    text: DomText;\r\n    public constructor( ) {\r\n        super('div',{\r\n            position: new Vector2(5, 5),\r\n            size: new Vector2(600, 70),\r\n            background: '#272727',\r\n        });\r\n\r\n        this.bar = new DomElement('div', {\r\n            size: new Vector2(600, 70),\r\n            background: '#80808070',\r\n        })\r\n        this.dom.appendChild(this.bar.dom);\r\n\r\n        this.text = new DomText({\r\n            text: '',\r\n            fontSize: 35,\r\n            fontWeight: 900,\r\n            color: 'white',\r\n            size: new Vector2(600, 70),\r\n            position: new Vector2(30, -10),\r\n            fontFamily: 'monospace',\r\n        });\r\n        this.dom.appendChild(this.text.dom);\r\n    }\r\n\r\n    public update(value: number, total: number){\r\n        this.text.text = `loaded ${total - value} out of ${total} assets`;\r\n        this.bar.width = 600 * (total - value) / total;\r\n    }\r\n}", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "function loadShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n    const shader = gl.createShader(type);\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        alert(\r\n            `An error occurred compiling the shaders: ${gl.getShaderInfoLog(shader)}`,\r\n        );\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n\r\n    return shader;\r\n}\r\n\r\nexport function initShaderProgram(gl: WebGLRenderingContext) {\r\n\r\n    const vsSource = `\r\n    attribute vec4 aVertexPosition;\r\n    attribute vec3 aVertexNormal;\r\n    attribute vec2 aTextureCoord;\r\n\r\n    uniform mat4 uNormalMatrix;\r\n    uniform mat4 uModelViewMatrix;\r\n    uniform mat4 uProjectionMatrix;\r\n\r\n    varying highp vec2 vTextureCoord;\r\n    varying highp vec3 vLighting;\r\n\r\n    void main(void) {\r\n      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\r\n      vTextureCoord = aTextureCoord;\r\n\r\n      // Apply lighting effect\r\n\r\n      highp vec3 ambientLight = vec3(0.3, 0.3, 0.3);\r\n      highp vec3 directionalLightColor = vec3(1, 1, 1);\r\n      highp vec3 directionalVector = normalize(vec3(0.2, 0.9, 0.75));\r\n\r\n      highp vec4 transformedNormal = uNormalMatrix * vec4(aVertexNormal, 1.0);\r\n\r\n      highp float directional = max(dot(transformedNormal.xyz, directionalVector), 0.0);\r\n      vLighting = ambientLight + (directionalLightColor * directional);\r\n    }\r\n    `;\r\n\r\n    const fsSource = `\r\n    varying highp vec2 vTextureCoord;\r\n    varying highp vec3 vLighting;\r\n\r\n    uniform sampler2D uSampler;\r\n\r\n    void main(void) {\r\n      highp vec4 texelColor = texture2D(uSampler, vTextureCoord);\r\n\r\n      gl_FragColor = vec4(texelColor.rgb * vLighting, texelColor.a);\r\n    }\r\n  `;\r\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n\r\n    const shaderProgram = gl.createProgram();\r\n    gl.attachShader(shaderProgram, vertexShader);\r\n    gl.attachShader(shaderProgram, fragmentShader);\r\n    gl.linkProgram(shaderProgram);\r\n\r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n        alert(\r\n            `Unable to initialize the shader program: ${gl.getProgramInfoLog(\r\n                shaderProgram,\r\n            )}`,\r\n        );\r\n        return;\r\n    }\r\n\r\n    return {\r\n        program: shaderProgram,\r\n        attribLocations: {\r\n            vertexPosition: gl.getAttribLocation(shaderProgram, \"aVertexPosition\"),\r\n            vertexNormal: gl.getAttribLocation(shaderProgram, \"aVertexNormal\"),\r\n            textureCoord: gl.getAttribLocation(shaderProgram, \"aTextureCoord\"),\r\n        },\r\n        uniformLocations: {\r\n            projectionMatrix: gl.getUniformLocation(shaderProgram, \"uProjectionMatrix\"),\r\n            modelViewMatrix: gl.getUniformLocation(shaderProgram, \"uModelViewMatrix\"),\r\n            normalMatrix: gl.getUniformLocation(shaderProgram, \"uNormalMatrix\"),\r\n            uSampler: gl.getUniformLocation(shaderProgram, \"uSampler\"),\r\n        },\r\n    };\r\n}", "import { vec3 } from 'gl-matrix';\r\nimport { Vector2, v2 } from './vector2';\r\n\r\nexport function v3(n: [number, number?, number?] | number, y?: number, z?: number) {\r\n\tif (typeof n === 'number') {\r\n\t\treturn Vector3.f(n, y, z);\r\n\t} else if (typeof n === 'undefined') {\r\n\t\treturn Vector3.f(0);\r\n\t} else {\r\n\t\treturn Vector3.f(...n);\r\n\t}\r\n}\r\n\r\nexport class Vector3 {\r\n\tpublic get pitch(): number {return this.x}\r\n\tpublic set pitch(value: number) {this.x = value}\r\n\r\n\tpublic get yaw(): number {return this.y}\r\n\tpublic set yaw(value: number) {this.y = value}\r\n\r\n\tpublic get roll(): number {return this.z}\r\n\tpublic set roll(value: number) {this.z = value}\r\n\r\n\tpublic get x(): number {return this.vec[0]}\r\n\tpublic set x(value: number) {this.vec[0] = value}\r\n\r\n\tpublic get y(): number {return this.vec[1]}\r\n\tpublic set y(value: number) {this.vec[1] = value}\r\n\r\n\tpublic get z(): number {return this.vec[2]}\r\n\tpublic set z(value: number) {this.vec[2] = value}\r\n\r\n\tpublic get xy(){return v2(this.x, this.y)}\r\n\tpublic get xz(){return v2(this.x, this.z)}\r\n\r\n\tpublic get yx(){return v2(this.y, this.x)}\r\n\tpublic get yz(){return v2(this.y, this.z)}\r\n\t\r\n\tpublic get zx(){return v2(this.z, this.x)}\r\n\tpublic get zy(){return v2(this.z, this.y)}\r\n\r\n\tpublic vec: vec3;\r\n\r\n\tconstructor(x: number = 0, y: number = 0, z: number = 0) {\r\n\t\tthis.vec = [x, y, z];\r\n\t}\r\n\r\n\tstatic from2(vector: Vector2, z: number = 0) {\r\n\t\treturn new Vector3(vector.x, vector.y, z);\r\n\t}\r\n\r\n\tstatic f(x: number = 0, y: number = x, z: number = x) {\r\n\t\treturn new Vector3(x, y, z);\r\n\t}\r\n\r\n\tget array() {\r\n\t\treturn [this.x, this.y, this.z];\r\n\t}\r\n\r\n\tset array(a: [number, number, number]) {\r\n\t\t[this.x, this.y, this.z] = a;\r\n\t}\r\n\r\n\tforEach(callbackfn: (value: number, index: number, array: number[]) => void): void {\r\n\t\tthis.array.forEach(callbackfn);\r\n\t};\r\n\r\n\tget c(): Vector3 {\r\n\t\treturn this.clone();\r\n\t}\r\n\r\n\tclone(): Vector3 {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x,\r\n\t\t\tthis.y,\r\n\t\t\tthis.z\r\n\t\t);\r\n\t}\r\n\r\n\tadd(vector: Vector3) {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x + vector.x,\r\n\t\t\tthis.y + vector.y,\r\n\t\t\tthis.z + vector.z,\r\n\t\t);\r\n\t}\r\n\r\n\tmultiply(a: Vector3): Vector3;\r\n\tmultiply(a: number, b: number, c: number): Vector3;\r\n\tmultiply(a: Vector3 | number, b?: number, c?: number): Vector3 {\r\n\t\tconst [x,y,z] = (typeof a === 'number')? [a,b,c]: a.array\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x * x,\r\n\t\t\tthis.y * y,\r\n\t\t\tthis.z * z,\r\n\t\t);\r\n\t}\r\n\r\n\tsubtract(vector: Vector3) {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x - vector.x,\r\n\t\t\tthis.y - vector.y,\r\n\t\t\tthis.z - vector.z,\r\n\t\t);\r\n\t}\r\n\r\n\tscale(scalar: number) {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x * scalar,\r\n\t\t\tthis.y * scalar,\r\n\t\t\tthis.z * scalar,\r\n\t\t);\r\n\t}\r\n\r\n\tdivide(vector: Vector3) {\r\n\t\treturn new Vector3(\r\n\t\t\tthis.x / vector.x,\r\n\t\t\tthis.y / vector.y,\r\n\t\t\tthis.z / vector.z,\r\n\t\t);\r\n\t}\r\n\r\n\t// dot(vector: Vector2) {\r\n\t// \treturn (this.x * vector.x + this.y + vector.y);\r\n\t// }\r\n\r\n\t// moveTowards(vector: Vector2, t: number) {\r\n\t// \tt = Math.min(t, 1); // still allow negative t\r\n\t// \tvar diff = vector.subtract(this);\r\n\t// \treturn this.add(diff.scale(t));\r\n\t// }\r\n\r\n\t// magnitude() {\r\n\t// \treturn Math.sqrt(this.magnitudeSqr());\r\n\t// }\r\n\r\n\t// magnitudeSqr() {\r\n\t// \treturn (this.x * this.x + this.y * this.y);\r\n\t// }\r\n\r\n\t// distance(vector: Vector2) {\r\n\t// \treturn Math.sqrt(this.distanceSqr(vector));\r\n\t// }\r\n\r\n\t// distanceSqr(vector: Vector2) {\r\n\t// \tvar deltaX = this.x - vector.x;\r\n\t// \tvar deltaY = this.y - vector.y;\r\n\t// \treturn (deltaX * deltaX + deltaY * deltaY);\r\n\t// }\r\n\r\n\t// normalize() {\r\n\t// \tvar mag = this.magnitude();\r\n\t// \tvar vector = this.clone();\r\n\t// \tif (Math.abs(mag) < 1e-9) {\r\n\t// \t\tvector.x = 0;\r\n\t// \t\tvector.y = 0;\r\n\t// \t} else {\r\n\t// \t\tvector.x /= mag;\r\n\t// \t\tvector.y /= mag;\r\n\t// \t}\r\n\t// \treturn vector;\r\n\t// }\r\n\r\n\t// angleDegrees() {\r\n\t// \treturn this.angle() * (180 / Math.PI);\r\n\t// }\r\n\r\n\t// angle() {\r\n\t// \treturn Math.atan2(this.y, this.x);\r\n\t// }\r\n\r\n\r\n\t// rotate(rad: number) {\r\n\t// \tvar cos = Math.cos(rad);\r\n\t// \tvar sin = Math.sin(rad);\r\n\t// \treturn new Vector2(\r\n\t// \t\tthis.x * cos - this.y * sin,\r\n\t// \t\tthis.x * sin + this.y * cos\r\n\t// \t);\r\n\t// }\r\n\r\n\t// toPrecision(precision: number) {\r\n\t// \tvar vector = this.clone();\r\n\t// \tvector.x = +vector.x.toFixed(precision);\r\n\t// \tvector.y = +vector.y.toFixed(precision);\r\n\t// \treturn vector;\r\n\t// }\r\n\r\n\t// toString() {\r\n\t// \tvar vector = this.toPrecision(1);\r\n\t// \treturn (\"[\" + vector.x + \"; \" + vector.y + \"]\");\r\n\t// }\r\n\r\n\t// public clamp(min: Vector2, max: Vector2) {\r\n\t// \treturn Vector2.clamp(this, min, max);\r\n\t// }\r\n\r\n\t// public static min(a: Vector2, b: Vector2) {\r\n\t// \treturn new Vector2(\r\n\t// \t\tMath.min(a.x, b.x),\r\n\t// \t\tMath.min(a.y, b.y),\r\n\t// \t);\r\n\t// }\r\n\r\n\t// public static max(a: Vector2, b: Vector2) {\r\n\t// \treturn new Vector2(\r\n\t// \t\tMath.max(a.x, b.x),\r\n\t// \t\tMath.max(a.y, b.y),\r\n\t// \t);\r\n\t// }\r\n\r\n\t// public static clamp(value: Vector2, min: Vector2, max: Vector2) {\r\n\t// \treturn Vector2.max(Vector2.min(value, min), max);\r\n\t// }\r\n\r\n\t// public clampMagnitute(mag: number) {\r\n\t// \treturn Vector2.clampMagnitute(this, mag);\r\n\t// }\r\n\r\n\t// public static clampMagnitute(value: Vector2, mag: number) {\r\n\t// \tvar ratio = value.magnitude() / mag;\r\n\t// \treturn new Vector2(value.x / ratio, value.y / ratio);\r\n\t// }\r\n\r\n\t// static get zero() {\r\n\t// \treturn new Vector2(0, 0);\r\n\t// }\r\n\t// static get down() {\r\n\t// \treturn new Vector2(0, -1);\r\n\t// }\r\n\t// static get up() {\r\n\t// \treturn new Vector2(0, 1);\r\n\t// }\r\n\t// static get right() {\r\n\t// \treturn new Vector2(1, 0);\r\n\t// }\r\n\t// static get left() {\r\n\t// \treturn new Vector2(-1, 0);\r\n\t// }\r\n\t// static get fromDegree() {\r\n\t// \treturn new Vector2(0, 0);\r\n\t// }\r\n}\r\n", "import { mat4, vec4 } from 'gl-matrix';\r\nimport { Game } from '../game';\r\nimport { initShaderProgram } from './glInit';\r\nimport { TickerReturnData } from './ticker';\r\nimport { Vector3 } from './vector3';\r\nimport { GLRendable } from '../elements/gl/glRendable';\r\nimport { GlElement } from '../elements/gl/glElement';\r\n\r\nexport interface bufferDataInitilizers {\r\n    indices: WebGLBuffer;\r\n    initColor: (gl: WebGLRenderingContext, colors: vec4[]) => WebGLBuffer;\r\n    initSize: (gl: WebGLRenderingContext, size: Vector3) => WebGLBuffer;\r\n    verticesCount: number;\r\n}\r\nexport interface buffers {\r\n    indices: WebGLBuffer;\r\n    positionBuffer: WebGLBuffer;\r\n    textureCoord: WebGLBuffer,\r\n    normalBuffer: WebGLBuffer,\r\n}\r\n\r\nexport type GlElementType = 'camera' | 'obj' | 'mesh' | 'collider' | 'group';\r\n\r\nexport interface objectData {\r\n    meshType: GlElementType,\r\n    size3?: Vector3,\r\n    position3: Vector3,\r\n    buffer?: buffers;\r\n    verticesCount?: number;\r\n}\r\n\r\nexport class GLR {\r\n    private objects: (GLRendable)[] = [];\r\n    public gl: WebGLRenderingContext;\r\n    private frameData: {\r\n        projectionMatrix?: mat4;\r\n        modelViewMatrix?: mat4;\r\n        normalMatrix?: mat4;\r\n    } = {};\r\n    private programInfo: {\r\n        program: WebGLProgram;\r\n        attribLocations: {\r\n            vertexPosition: number;\r\n            vertexNormal: number;\r\n            textureCoord: number,\r\n        };\r\n        uniformLocations: {\r\n            projectionMatrix: WebGLUniformLocation;\r\n            modelViewMatrix: WebGLUniformLocation;\r\n            normalMatrix: WebGLUniformLocation,\r\n            uSampler: WebGLUniformLocation;\r\n        };\r\n    };\r\n\r\n    get t(): TickerReturnData {\r\n        return this.game.t;\r\n    }\r\n\r\n    constructor(public game: Game) {\r\n        this.gl = this.game.renderer.domGl.getContext('webgl');\r\n        const ext = this.gl.getExtension(\"OES_element_index_uint\");\r\n        this.programInfo = initShaderProgram(this.gl);\r\n    }\r\n\r\n    public resize() {\r\n        this.gl.viewport(0, 0, (this.gl.canvas as HTMLCanvasElement).width, (this.gl.canvas as HTMLCanvasElement).height);\r\n    }\r\n\r\n    initGlElement(mesh: GLRendable) {\r\n        this.objects.push(mesh);\r\n    }\r\n\r\n    setCamera() {\r\n\r\n        const fieldOfView = (this.game.mode.camera.fov * Math.PI) / 180;\r\n\r\n        const aspect = (this.gl.canvas as HTMLCanvasElement).clientWidth / (this.gl.canvas as HTMLCanvasElement).clientHeight;\r\n        const zNear = 1;\r\n        const zFar = 10000;\r\n        const projectionMatrix = mat4.create();\r\n        const modelViewMatrix = mat4.create();\r\n        const normalMatrix = mat4.create();\r\n\r\n        mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\r\n\r\n        mat4.translate(\r\n            projectionMatrix,\r\n            projectionMatrix,\r\n            this.game.mode.camera.offset.multiply(1, 1, -1).vec\r\n        );\r\n\r\n        this.game.mode.camera.rotation.forEach((r, i) => {\r\n            mat4.rotate(\r\n                projectionMatrix,\r\n                projectionMatrix,\r\n                r,\r\n                [Number(i === 0), Number(i === 1), Number(i === 2)],\r\n            );\r\n        });\r\n\r\n        mat4.translate(\r\n            modelViewMatrix,\r\n            modelViewMatrix,\r\n            this.game.mode.camera.target.multiply(-1, 1, 1).vec\r\n        );\r\n\r\n        mat4.invert(normalMatrix, modelViewMatrix);\r\n        mat4.transpose(normalMatrix, normalMatrix);\r\n\r\n        this.gl.uniformMatrix4fv(\r\n            this.programInfo.uniformLocations.normalMatrix,\r\n            false,\r\n            normalMatrix,\r\n          );\r\n\r\n        this.frameData.projectionMatrix = projectionMatrix;\r\n        this.frameData.modelViewMatrix = modelViewMatrix;\r\n        this.frameData.normalMatrix = normalMatrix;\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.gl.clearColor(0.0, 0.0, 0.0, 0.5);\r\n        this.gl.clearDepth(1.0);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n        this.gl.depthFunc(this.gl.LEQUAL);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\r\n    }\r\n\r\n    draw() {\r\n        this.clear();\r\n        this.gl.useProgram(this.programInfo.program);\r\n        this.setCamera();\r\n        this.drawElement(this.game.level);\r\n\r\n    }\r\n\r\n    drawElement(element: GlElement, currentModelview?: mat4) {\r\n        element.glChildren.forEach((o) => {\r\n            this.drawObject(o, currentModelview ? mat4.clone(currentModelview) : undefined);\r\n        });\r\n    }\r\n\r\n    drawObject(mesh: GlElement, currentModelview: mat4 = mat4.clone(this.frameData.modelViewMatrix)) {\r\n\r\n        mat4.translate(\r\n            currentModelview,\r\n            currentModelview,\r\n            mesh.position3.multiply(new Vector3(1, 1, -1)).vec,\r\n        );\r\n\r\n        // mat4.translate(\r\n        //     currentModelview,\r\n        //     currentModelview,\r\n        //     mesh.anchorPoint.multiply(1, 1, -1).vec,\r\n        // );\r\n\r\n        // // mesh.rotation.multiply(new Vector3(1, -1, -1)).forEach((r, i) => {\r\n        // //     mat4.rotate(\r\n        // //         currentModelview,\r\n        // //         currentModelview,\r\n        // //         r,\r\n        // //         [Number(i === 0), Number(i === 1), Number(i === 2)],\r\n        // //     );\r\n        // // });\r\n\r\n        // mat4.translate(\r\n        //     currentModelview,\r\n        //     currentModelview,\r\n        //     mesh.anchorPoint.multiply(-1, -1, 1).vec,\r\n        // );\r\n\r\n        if ((mesh as GLRendable).buffer) {\r\n            this.renderMesh(mesh as GLRendable, currentModelview);\r\n        }\r\n\r\n        this.drawElement(mesh, currentModelview);\r\n\r\n    }\r\n\r\n    renderMesh(mesh: GLRendable, currentModelview: mat4) {\r\n\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, mesh.buffer.indices);\r\n\r\n        this.setPositionAttribute(mesh);\r\n        this.setTextureAttribute(mesh);\r\n        this.setNormalAttribute(mesh);\r\n\r\n        this.gl.uniformMatrix4fv(\r\n            this.programInfo.uniformLocations.projectionMatrix,\r\n            false,\r\n            this.frameData.projectionMatrix,\r\n        );\r\n        this.gl.uniformMatrix4fv(\r\n            this.programInfo.uniformLocations.modelViewMatrix,\r\n            false,\r\n            currentModelview,\r\n        );\r\n\r\n        this.gl.activeTexture(this.gl.TEXTURE0);\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, mesh.texture.texture);\r\n        this.gl.uniform1i(this.programInfo.uniformLocations.uSampler, 0);\r\n\r\n        this.gl.drawElements(\r\n            this.gl.TRIANGLES,\r\n            mesh.verticesCount,\r\n            this.gl.UNSIGNED_INT,\r\n            0\r\n        );\r\n    }\r\n\r\n    setPositionAttribute(mesh: GLRendable) {\r\n        const numComponents = 3;\r\n        const type = this.gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, mesh.buffer.positionBuffer);\r\n\r\n        this.gl.vertexAttribPointer(\r\n            this.programInfo.attribLocations.vertexPosition,\r\n            numComponents,\r\n            type,\r\n            normalize,\r\n            stride,\r\n            offset,\r\n        );\r\n        this.gl.enableVertexAttribArray(this.programInfo.attribLocations.vertexPosition);\r\n    }\r\n\r\n    setTextureAttribute(mesh: GLRendable) {\r\n        const num = 2; // every coordinate composed of 2 values\r\n        const type = this.gl.FLOAT; // the data in the buffer is 32-bit float\r\n        const normalize = false; // don't normalize\r\n        const stride = 0; // how many bytes to get from one set to the next\r\n        const offset = 0; // how many bytes inside the buffer to start from\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, mesh.buffer.textureCoord);\r\n        this.gl.vertexAttribPointer(\r\n            this.programInfo.attribLocations.textureCoord,\r\n            num,\r\n            type,\r\n            normalize,\r\n            stride,\r\n            offset,\r\n        );\r\n        this.gl.enableVertexAttribArray(this.programInfo.attribLocations.textureCoord);\r\n    }\r\n\r\n    setNormalAttribute(mesh: GLRendable) {\r\n        const numComponents = 3;\r\n        const type = this.gl.FLOAT;\r\n        const normalize = false;\r\n        const stride = 0;\r\n        const offset = 0;\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, mesh.buffer.normalBuffer);\r\n        this.gl.vertexAttribPointer(\r\n            this.programInfo.attribLocations.vertexNormal,\r\n            numComponents,\r\n            type,\r\n            normalize,\r\n            stride,\r\n            offset,\r\n        );\r\n        this.gl.enableVertexAttribArray(this.programInfo.attribLocations.vertexNormal);\r\n    }\r\n\r\n}", "import { CanvasWrapper, CanvasWrapperAttributes } from '../elements/canvas/canvasWrapper';\r\nimport { ElementRelativity } from './elementPosition';\r\nimport { Level } from './level';\r\nimport { TickerReturnData } from './ticker';\r\nimport { Vector2 } from './vector2';\r\n\r\nexport type modeAttributes = CanvasWrapperAttributes & {\r\n\r\n};\r\nexport abstract class Mode extends CanvasWrapper {\r\n    public levels: Record<string, Level> = {};\r\n    public relativity: ElementRelativity = 'anchor';\r\n\r\n    public get camera():typeof this.level.camera {\r\n        return this.level.camera;\r\n    }\r\n    public set camera(value:typeof this.level.camera) {\r\n        this.level.camera = value;\r\n    }\r\n\r\n    private keyAliases = {\r\n        'w': 'up',\r\n        'a': 'left',\r\n        's': 'down',\r\n        'd': 'right',\r\n        ' ': 'space',\r\n        'ArrowUp': 'up',\r\n        'ArrowLeft': 'left',\r\n        'ArrowDown': 'down',\r\n        'ArrowRight': 'right',\r\n    } as const;\r\n\r\n    public input: {\r\n        'up': boolean,\r\n        'left': boolean,\r\n        'down': boolean,\r\n        'right': boolean,\r\n        'space': boolean,\r\n    } = {\r\n            'up': false,\r\n            'left': false,\r\n            'down': false,\r\n            'right': false,\r\n            'space': false,\r\n        };\r\n\r\n    build(): void {\r\n        super.build();\r\n        this.game.getEvent('resize').subscribe(String(Math.random()), (size: Vector2) => {\r\n            this.size = size;\r\n        });\r\n    }\r\n\r\n    protected addLevel(s: string, level: Level) {\r\n        this.levels[s] = level;\r\n        this.addChild(level);\r\n    }\r\n\r\n    public switchLevel(s: string) {\r\n        Object.entries(this.levels).forEach(([key, level]) => {\r\n            level.active = key === s;\r\n            level.visible = key === s;\r\n            // level.dom ? level.dom.visible = key === s : null;\r\n            if (key === s){\r\n                this.level = level;\r\n                this.game.level = level;\r\n            }\r\n        });\r\n    }\r\n\r\n    public keyDown(e: KeyboardEvent) {\r\n        \r\n        if (Object.keys(this.keyAliases).includes(e.key)) {\r\n            this.input[this.keyAliases[e.key as keyof typeof this.keyAliases]] = true;\r\n        }\r\n    }\r\n\r\n    public keyUp(e: KeyboardEvent) {\r\n        if (Object.keys(this.keyAliases).includes(e.key)) {\r\n            this.input[this.keyAliases[e.key as keyof typeof this.keyAliases]] = false;\r\n        }\r\n    }\r\n\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n\r\n        this.controllers.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        this.lowerChildren.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        this.higherChildren.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        this.glElements.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        if (this.dom) {\r\n            this.dom.tick(obj);\r\n        }\r\n    }\r\n}\r\n", "import { Vector2 } from '../../utils/vector2';\r\nimport { CanvasElement, CanvasElementAttributes } from './canvasElement';\r\n\r\nexport type LinearGradient = {\r\n    angle: number,\r\n    stops: [number,string][]\r\n}\r\nexport type RadialGradient = {\r\n    stops: [number,string][],\r\n    offset?: Vector2,\r\n}\r\nexport type ColorType = 'color'|'linearGradient'|'radialGradient';\r\nexport type CanvasColorAttributes = CanvasElementAttributes & {\r\n    color?: string,\r\n    stroke?: string,\r\n    strokeWidth?: number,\r\n    linearGradient?: LinearGradient,\r\n    radialGradient?: RadialGradient,\r\n}\r\nexport abstract class CanvasColor extends CanvasElement {\r\n    public abstract shape: 'circle'|'square';\r\n    public type = 'color' as const;\r\n    public colorType: ColorType = 'color';\r\n    public color: string;\r\n    public linearGradient: LinearGradient;\r\n    public radialGradient: RadialGradient;\r\n    public stroke: string;\r\n    public strokeWidth: number = 0;\r\n\r\n    constructor(attr: CanvasColorAttributes = {}) {\r\n        super(attr);\r\n        this.color = attr.color\r\n        this.stroke = attr.stroke\r\n        this.strokeWidth = attr.strokeWidth | 0\r\n        this.linearGradient = attr.linearGradient\r\n        this.radialGradient = attr.radialGradient\r\n    }\r\n\r\n    public getColor(): string | CanvasGradient | CanvasPattern {\r\n        if (this.colorType === 'color'){\r\n            return this.color\r\n        }\r\n        if (this.colorType === 'linearGradient'){\r\n            return this.getLiniarGradient();\r\n        }\r\n        if (this.colorType === 'radialGradient'){\r\n            return this.getRadialGradient();\r\n        }\r\n    }\r\n    public abstract getLiniarGradient(): CanvasGradient | ''\r\n    public abstract getRadialGradient(): CanvasGradient | ''\r\n}\r\n", "import { Vector2 } from '../../utils/vector2';\r\nimport { CanvasColor, CanvasColorAttributes } from './canvasColor';\r\n\r\nexport type CanvasSquareAttributes = CanvasColorAttributes & {\r\n    rounded?: number;\r\n    condition?: (position: Vector2, size: Vector2)=>void,\r\n    opacity?: number,\r\n};\r\nexport class CanvasSquare extends CanvasColor {\r\n    public shape = 'square' as const;\r\n    public rounded: number;\r\n    public condition: (position: Vector2, size: Vector2) => void;\r\n    public opacity: number;\r\n\r\n    constructor(attr: CanvasSquareAttributes = {}) {\r\n        super(attr);\r\n        this.color = attr.color;\r\n        this.rounded = attr.rounded || 3;\r\n        this.condition = attr.condition;\r\n        this.opacity = attr.opacity || 1;\r\n\r\n    }\r\n\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        if ((!this.condition || this.condition(this.position.add(this.parent.position), this.size))) {\r\n            ctx.fillStyle = this.getColor();\r\n            ctx.globalAlpha = this.opacity;\r\n            ctx.beginPath();\r\n            ctx.roundRect(this.position.x, this.position.y, this.width, this.height, this.rounded);\r\n            if (this.color){\r\n                ctx.fill();\r\n            }\r\n            if (this.strokeWidth) {\r\n                ctx.lineWidth = this.strokeWidth;\r\n                ctx.strokeStyle = this.stroke || 'black';\r\n                ctx.stroke();\r\n            }\r\n            ctx.closePath();\r\n        }\r\n    }\r\n\r\n    public getLiniarGradient(): CanvasGradient | '' {\r\n        if (this.linearGradient) {\r\n            const grd = this.game.renderer.ctx.createLinearGradient(\r\n                this.position.x + this.anchoredPosition.x,\r\n                this.position.y + this.anchoredPosition.y,\r\n                this.position.x + this.anchoredPosition.x + this.width,\r\n                this.position.y + this.anchoredPosition.y + this.height\r\n            );\r\n\r\n            this.linearGradient.stops.forEach(([number, color]) => {\r\n                grd.addColorStop(number, color);\r\n            });\r\n\r\n            return grd;\r\n        }\r\n        return \"\";\r\n    }\r\n    public getRadialGradient(): CanvasGradient | '' {\r\n        if (this.radialGradient) {\r\n            const grd = this.game.renderer.ctx.createRadialGradient(\r\n                this.position.x + this.width / 2,\r\n                this.position.y + this.height / 2,\r\n                0,\r\n                this.position.x + this.width / 2,\r\n                this.position.y + this.height / 2,\r\n                this.width\r\n            );\r\n            this.radialGradient.stops.forEach(([number, color]) => {\r\n                grd.addColorStop(number, color);\r\n            });\r\n            return grd;\r\n        }\r\n        return \"\";\r\n    }\r\n}\r\n", "import { Vector2 } from '../../utils/vector2';\r\nimport { CanvasSquare } from './canvasSquare';\r\n\r\nexport class CanvasColorBackground extends CanvasSquare {\r\n    constructor(color: string) {\r\n        super({\r\n            position: Vector2.zero,\r\n            color,\r\n        });\r\n    }\r\n\r\n    build() {\r\n        this.game.getEvent('resize').subscribe(String(Math.random()), (size: Vector2)=>{\r\n            this.size = this.parent.size;            \r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n", "export type Color = [number, number, number, number];\r\nexport class Colors {\r\n    public static k:Color = [0.0, 0.0, 0.0, 1.0];\r\n    public static r:Color = [1.0, 0.0, 0.0, 1.0];\r\n    public static g:Color = [0.0, 1.0, 0.0, 1.0];\r\n    public static b:Color = [0.0, 0.0, 1.0, 1.0];\r\n    public static y:Color = [1.0, 1.0, 0.0, 1.0];\r\n    public static c:Color = [0.0, 1.0, 1.0, 1.0];\r\n    public static m:Color = [1.0, 0.0, 1.0, 1.0];\r\n    public static w:Color = [1.0, 1.0, 1.0, 1.0];\r\n}", "import { CanvasController } from '../../utils/controller';\r\nimport { Element, ElementAttributes } from \"../../utils/element\";\r\nimport { GlElementType } from '../../utils/gl';\r\nimport { TickerReturnData } from '../../utils/ticker';\r\nimport { Vector2 } from \"../../utils/vector2\";\r\nimport { Vector3, v3 } from '../../utils/vector3';\r\n\r\nexport type GlElementAttributes = ElementAttributes & {\r\n    autoReady?: boolean,\r\n    controllers?: CanvasController[];\r\n    composite?: GlobalCompositeOperation;\r\n    size3?: Vector3;\r\n    position3?: Vector3;\r\n    rotation?: Vector3;\r\n    anchorPoint?: Vector3;\r\n};\r\nexport interface GlElement {\r\n    mouseMove?(e: MouseEvent): void;\r\n    keyDown?(e: KeyboardEvent): void;\r\n    keyUp?(e: KeyboardEvent): void;\r\n    click?(e: MouseEvent): void;\r\n    scroll?(e: WheelEvent): void;\r\n}\r\nexport abstract class GlElement extends Element {\r\n    public abstract type: GlElementType;\r\n    public rendererType = 'gl' as const;\r\n    public autoReady: boolean;\r\n    public anchorPoint: Vector3;\r\n    public parent: GlElement;\r\n\r\n    public get renderPosition(): Vector2 {\r\n        return this.position.add(this.anchoredPosition);\r\n    }\r\n    public get renderX() { return this.renderPosition.x; }\r\n    public get renderY() { return this.renderPosition.y; }\r\n\r\n    public glChildren: GlElement[] = [];\r\n    public controllers: CanvasController[] = [];\r\n    public anchoredPosition: Vector2 = Vector2.zero;\r\n\r\n\r\n    public get x() { return super.x; }\r\n    public set x(n: number) { super.x = n; }\r\n\r\n    public get y() { return super.y; }\r\n    public set y(n: number) { super.y = n; }\r\n\r\n    public z: number = 0;\r\n\r\n    public get position3() { return v3(this.x, this.y, this.z); }\r\n    public set position3({ x, y, z }: Vector3) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    private _rotation: Vector3 = v3(0);\r\n    public get rotation() { return this._rotation; }\r\n    public set rotation(r: Vector3) {\r\n        this._rotation = r;\r\n    }\r\n\r\n    public get width() { return super.width; }\r\n    public set width(n: number) { super.width = n; }\r\n\r\n    public get height() { return super.height; }\r\n    public set height(n: number) { super.height = n; }\r\n\r\n    private _depth: number = 1;\r\n    public get depth() { return this._depth; }\r\n    public set depth(n: number) { this._depth = n; }\r\n\r\n    public get size3() { return v3(this.width, this.height, this.depth); }\r\n    public set size3({ x, y, z }: Vector3) {\r\n        this.width = x;\r\n        this.height = y;\r\n        this.depth = z;\r\n    }\r\n\r\n    public get camera(): typeof this.mode.camera {\r\n        return this.mode.camera;\r\n    }\r\n    public set camera(c: typeof this.mode.camera) {\r\n        this.mode.camera = c;\r\n    }\r\n\r\n    constructor(attr: GlElementAttributes = {}) {\r\n        super(attr);\r\n        this.autoReady = attr.autoReady !== undefined ? attr.autoReady : true;\r\n        this.addControllers(attr.controllers || []);\r\n\r\n        this.size3 = attr.size3 || this.parent.size3;\r\n        this.position3 = attr.position3 || v3(0);\r\n        this.rotation = attr.rotation || v3(0);\r\n        this.anchorPoint = attr.anchorPoint || v3(0);\r\n    }\r\n\r\n    public ready() {\r\n        this.build();\r\n        if (this.game.waitCount) {\r\n            this.game.waitCount--;\r\n        }\r\n    }\r\n\r\n    public addChild(child: GlElement): typeof child {\r\n        child.parent ??= this;\r\n        child.game ??= this.game;\r\n        child.mode ??= this.mode;\r\n        child.level ??= this.level;\r\n        child.GLR ??= this.game.GLR;\r\n        if (this.game.waitCount) {\r\n            this.game.waitCount++;\r\n        }\r\n        this.glChildren.push(child);\r\n        child.registerControllers(child);\r\n        if (child.autoReady) {\r\n            child.ready();\r\n        }\r\n\r\n        // if (child.rendererType === 'canvas' && child.type === 'collider' && (child as Collider).colliderType === 'static' && this.level) {\r\n        //     this.level.colliders.push(child as Collider);\r\n        // }\r\n\r\n        return child;\r\n\r\n    }\r\n\r\n    public addControllers(c: CanvasController[]) {\r\n        if (c.length > 0) {\r\n            this.controllers.push(...c);\r\n        }\r\n    }\r\n\r\n    public registerControllers(child: GlElement) {\r\n        child.controllers.forEach((controller) => {\r\n            if (controller.parent === undefined) {\r\n                controller.parent ??= child;\r\n                controller.game ??= child.game;\r\n                controller.mode ??= child.mode;\r\n                controller.level ??= child.level;\r\n                controller.build();\r\n            }\r\n        });\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n        this.controllers.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n        this.glChildren.filter((child) => child.active).forEach((c) => c.tick(obj));\r\n    }\r\n\r\n    public preRender(c: WebGLRenderingContext) {\r\n        this.renderLower(c);\r\n        this.render(c);\r\n    }\r\n\r\n    public renderLower(c: WebGLRenderingContext) {\r\n        this.glChildren.filter((child) => child.visible && child.active).forEach((child) => {\r\n            child.preRender(c);\r\n            child.postRender(c);\r\n        });\r\n    }\r\n\r\n    public render(c: WebGLRenderingContext) {\r\n        //\r\n    }\r\n\r\n    public postRender(c: WebGLRenderingContext) {\r\n    }\r\n\r\n}\r\n\r\n\r\n", "import { ElementAttributes } from \"../../utils/element\";\r\nimport { buffers } from '../../utils/gl';\r\nimport { Vector3 } from '../../utils/vector3';\r\nimport { GlElement } from './glElement';\r\nimport { GLTexture } from './glTexture';\r\n\r\nexport type GLRendableAttributes = ElementAttributes & {\r\n\r\n};\r\n\r\nexport abstract class GLRendable extends GlElement {\r\n    public buffer: buffers;\r\n    public colors: [number, number, number, number][] = [];\r\n    public abstract verticesCount: number;\r\n    public abstract texture: GLTexture;\r\n\r\n    constructor(attr: GLRendableAttributes = {}) {\r\n        super(attr);\r\n    }\r\n\r\n    public build() {\r\n        this.buffer = {\r\n            positionBuffer: this.positionBuffer(this.size3),\r\n            indices: this.indexBuffer(),\r\n            textureCoord: this.textureBuffer(this.size3),\r\n            normalBuffer: this.normalBuffer(),\r\n        };\r\n        this.GLR.initGlElement(this);\r\n        // this.texture = new GLTexture(this.game, { url: 'cubetexture.png' });\r\n    };\r\n\r\n    public ready() {\r\n        this.build();\r\n        if (this.game.waitCount) {\r\n            this.game.waitCount--;\r\n        }\r\n    }\r\n\r\n    protected abstract indexBuffer(): WebGLBuffer;\r\n    protected abstract positionBuffer(size: Vector3): WebGLBuffer;\r\n    protected abstract textureBuffer(size: Vector3): WebGLBuffer;\r\n    protected abstract normalBuffer(): WebGLBuffer;\r\n\r\n    getIndexBuffer(indices: number[]) {\r\n        const indexBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n        this.gl.bufferData(\r\n            this.gl.ELEMENT_ARRAY_BUFFER,\r\n            new Uint32Array(indices),\r\n            this.gl.STATIC_DRAW,\r\n        );\r\n        return indexBuffer;\r\n    }\r\n\r\n    getPositionBuffer(positions: number[]) {\r\n        const positionBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, positionBuffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(positions), this.gl.STATIC_DRAW);\r\n        return positionBuffer;\r\n    }\r\n\r\n    getTextureBuffer(coordinates: number[]) {\r\n        const textureCoordBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, textureCoordBuffer);\r\n        this.gl.bufferData(\r\n            this.gl.ARRAY_BUFFER,\r\n            new Float32Array(coordinates),\r\n            this.gl.STATIC_DRAW,\r\n        );\r\n        return textureCoordBuffer;\r\n    }\r\n\r\n    getNormalBuffer(coordinates: number[]) {\r\n\r\n        const normalBuffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, normalBuffer);\r\n\r\n        this.gl.bufferData(\r\n            this.gl.ARRAY_BUFFER,\r\n            new Float32Array(coordinates),\r\n            this.gl.STATIC_DRAW,\r\n        );\r\n        \r\n        return normalBuffer;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n", "import { Game } from '../../game';\r\nimport { Color } from '../../utils/colors';\r\n\r\nexport type GLTextureAttributes = {\r\n    url?: string;\r\n    color?: Color[];\r\n};\r\n\r\nexport class GLTexture {\r\n    static textureOffset(index:number, total:number): number[] {\r\n        const inc = 1 / total;\r\n        return [\r\n            index * inc + (inc / 3), 0,\r\n            index * inc + (inc / 3), 1,\r\n            (index + 1) * inc - (inc / 3), 0\r\n        ];\r\n\r\n    }\r\n    public texture: WebGLTexture;\r\n    private image: HTMLImageElement;\r\n    constructor(public game: Game, attr: GLTextureAttributes) {\r\n        this.image = new Image();\r\n        if (attr.url) {\r\n            this.game.waitCount++;\r\n            this.image.onload = () => {\r\n                this.game.waitCount--;\r\n                this.loadTexture(this.image);\r\n            };\r\n            this.image.src = `${window.location.href}/tex/${attr.url}`;\r\n        } else {\r\n            this.loadColor(attr.color || [[0.8, 0.8, 0.7, 1]]);\r\n        }\r\n    }\r\n    loadColor(colors: Color[]) {\r\n        // gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        // gl.texImage2D(\r\n        //     gl.TEXTURE_2D,\r\n        //     0,\r\n        //     gl.RGBA,\r\n        //     1,\r\n        //     1,\r\n        //     0,\r\n        //     gl.RGBA,\r\n        //     gl.UNSIGNED_BYTE,\r\n        //     new Uint8Array([...first.map((n)=>n*255)])\r\n        // );\r\n        // this.texture = texture;\r\n\r\n\r\n        const ss = document.createElement('canvas');\r\n        ss.width = colors.length;\r\n        ss.height = 1;\r\n        const ssCTX = ss.getContext('2d');\r\n\r\n        for (let x = 0; x < colors.length; x++) {\r\n            const color = colors[x];\r\n            ssCTX.fillStyle = `rgba(${color[0] * 255}, ${color[1] * 255}, ${color[2] * 255}, ${color[3]})`;\r\n            ssCTX.fillRect(\r\n                x,\r\n                0,\r\n                1,\r\n                1\r\n            );\r\n        }\r\n        this.loadTexture(ss);\r\n\r\n    }\r\n    loadTexture(img: HTMLImageElement | HTMLCanvasElement) {\r\n        const gl = this.game.gl;\r\n        const texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            gl.RGBA,\r\n            gl.RGBA,\r\n            gl.UNSIGNED_BYTE,\r\n            img\r\n        );\r\n        gl.texParameterf(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n        if (this.isPowerOf2(img.width) && this.isPowerOf2(img.height)) {\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n        } else {\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        }\r\n\r\n        this.texture = texture;\r\n    }\r\n\r\n    isPowerOf2(value: number) {\r\n        return (value & (value - 1)) === 0;\r\n    }\r\n}", "import { GlElementType } from '../../utils/gl';\r\nimport { Color, Colors } from '../../utils/colors';\r\nimport { Vector3 } from '../../utils/vector3';\r\nimport { GlElementAttributes } from './glElement';\r\nimport { GLRendable } from './glRendable';\r\nimport { GLTexture } from './glTexture';\r\n\r\nexport type GlMeshAttributes = GlElementAttributes & {\r\n    colors?: [Color, Color?, Color?, Color?, Color?, Color?],\r\n    textureUrl?: string,\r\n    size3: Vector3;\r\n};\r\n\r\nexport class GlMesh extends GLRendable {\r\n    public texture: GLTexture;\r\n    public type: GlElementType = 'mesh';\r\n    public colors: [number, number, number, number][] = [];\r\n    public verticesCount = 36;\r\n    public dimensions = 0 | 1 | 2 | 3;\r\n    private textureUrl: string;\r\n    private faceCount: number;\r\n\r\n    constructor(attr: GlMeshAttributes) {\r\n        super(attr);\r\n        this.dimensions = attr.size3.array.filter((v) => v !== 0).length;\r\n        if (this.dimensions < 2) {\r\n            return;\r\n        }\r\n        this.verticesCount = this.dimensions === 3 ? 36 : 6;\r\n        this.faceCount = this.dimensions === 3 ? 6 : 1;\r\n        this.textureUrl = attr.textureUrl;\r\n\r\n        if (attr.colors) this.colors = attr.colors;\r\n        else this.colors = [\r\n            Colors.r,\r\n            Colors.g,\r\n            Colors.b,\r\n            Colors.c,\r\n            Colors.m,\r\n            Colors.y\r\n        ].slice(0, this.faceCount);\r\n\r\n    }\r\n\r\n    public build(): void {\r\n        super.build();\r\n        this.texture = new GLTexture(this.game, this.textureUrl ? { url: this.textureUrl } : { color: this.colors });\r\n    }\r\n\r\n    protected indexBuffer() {\r\n        let b: number[] = [\r\n            0, 1, 2,\r\n            0, 2, 3,\r\n            4, 5, 6,\r\n            4, 6, 7,\r\n            8, 9, 10,\r\n            8, 10, 11,\r\n            12, 13, 14,\r\n            12, 14, 15,\r\n            16, 17, 18,\r\n            16, 18, 19,\r\n            20, 21, 22,\r\n            20, 22, 23\r\n        ].slice(0, this.faceCount * 6);\r\n\r\n        return this.getIndexBuffer(b);\r\n    }\r\n\r\n    protected positionBuffer(size: Vector3) {\r\n        let b = [\r\n            0.0, 0.0, -1.0,\r\n            1.0, 0.0, -1.0,\r\n\r\n            1.0, 1.0, -1.0,\r\n            0.0, 1.0, -1.0,\r\n\r\n            0.0, 0.0, -0.0,\r\n            0.0, 1.0, -0.0,\r\n\r\n            1.0, 1.0, -0.0,\r\n            1.0, 0.0, -0.0,\r\n\r\n            0.0, 1.0, -0.0,\r\n            0.0, 1.0, -1.0,\r\n\r\n            1.0, 1.0, -1.0,\r\n            1.0, 1.0, -0.0,\r\n\r\n            0.0, 0.0, -0.0,\r\n            1.0, 0.0, -0.0,\r\n\r\n            1.0, 0.0, -1.0,\r\n            0.0, 0.0, -1.0,\r\n\r\n            1.0, 0.0, -0.0,\r\n            1.0, 1.0, -0.0,\r\n\r\n            1.0, 1.0, -1.0,\r\n            1.0, 0.0, -1.0,\r\n\r\n            0.0, 0.0, -0.0,\r\n            0.0, 0.0, -1.0,\r\n\r\n            0.0, 1.0, -1.0,\r\n            0.0, 1.0, -0.0\r\n\r\n        ];\r\n\r\n        if (this.dimensions === 2) {\r\n            if (this.depth === 0) b = b.slice(0, 24);\r\n            else if (this.width === 0) b = b.slice(60, 72);\r\n            else if (this.height === 0) b = b.slice(36, 48);\r\n        }\r\n        return this.getPositionBuffer(b.map((n, i) => n * size.array[(i % 3)]));\r\n    }\r\n    protected normalBuffer() {\r\n        let b = [\r\n            // Front\r\n            0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0,\r\n            // Back\r\n            0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0,\r\n            // Top\r\n            0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0,\r\n            // Bottom\r\n            0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0,\r\n            // Right\r\n            1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0,\r\n            // Left\r\n            -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0,\r\n\r\n        ];\r\n\r\n        if (this.dimensions === 2) {\r\n            if (this.depth === 0) b = b.slice(12, 24);\r\n            else if (this.width === 0) b = b.slice(60, 72);\r\n            else if (this.height === 0) b = b.slice(36, 48);\r\n        }\r\n        return this.getNormalBuffer(b);\r\n    }\r\n\r\n    protected textureBuffer(size: Vector3): WebGLBuffer {\r\n        let b: number[] = [];\r\n        if (this.textureUrl) {\r\n            b = [\r\n                0.0, 0.0, 1.0, 0.0,\r\n                1.0, 1.0, 0.0, 1.0,\r\n                0.0, 0.0, 1.0, 0.0,\r\n                1.0, 1.0, 0.0, 1.0,\r\n                0.0, 0.0, 1.0, 0.0,\r\n                1.0, 1.0, 0.0, 1.0,\r\n                0.0, 0.0, 1.0, 0.0,\r\n                1.0, 1.0, 0.0, 1.0,\r\n                0.0, 0.0, 1.0, 0.0,\r\n                1.0, 1.0, 0.0, 1.0,\r\n                0.0, 0.0, 1.0, 0.0,\r\n                1.0, 1.0, 0.0, 1.0,\r\n            ];\r\n            if (this.dimensions === 2) {\r\n                if (this.depth === 0) b = b.slice(0, 8);\r\n                else if (this.width === 0) b = b.slice(40, 48);\r\n                else if (this.height === 0) b = b.slice(24, 32);\r\n            }\r\n        } else {\r\n            const inc = 1 / this.faceCount;\r\n            \r\n            for (let index = 0; index < this.faceCount; index++) {\r\n                b.push(\r\n                    index * inc + (inc / 3), 0,\r\n                    index * inc + (inc / 3), 1,\r\n                    (index + 1) * inc - (inc / 3), 0,\r\n                    (index + 1) * inc - (inc / 3), 0\r\n                );\r\n            }\r\n        }\r\n        return this.getTextureBuffer(b);\r\n\r\n    }\r\n}", "import { Color } from '../../utils/colors';\r\nimport { GlElementType } from '../../utils/gl';\r\nimport { Vector3 } from '../../utils/vector3';\r\nimport { GlElementAttributes } from './glElement';\r\nimport { GLRendable } from './glRendable';\r\nimport { GLTexture } from './glTexture';\r\n\r\nexport type GLobjAttributes = GlElementAttributes & {\r\n    url?: string;\r\n};\r\nexport type textureCoords = [number, number];\r\nexport type vertexCoords = [number, number, number];\r\nexport type vertexData = [vertexCoords, number, vertexCoords, string];\r\nexport type faceData = [vertexData, vertexData, vertexData];\r\nexport class GLobj extends GLRendable {\r\n    public type: GlElementType = 'mesh';\r\n    public texture: GLTexture;\r\n    public verticesCount: number = 0;\r\n    private matIndeces: string[] = [];\r\n    private mats: Record<string, string[]> = {};\r\n    private positionIndeces: number[] = [];\r\n    private indexIndeces: number[] = [];\r\n    private normalIndeces: number[] = [];\r\n    private textureIndeces: number[] = [];\r\n    private texturePositionIndeces: number[] = [];\r\n\r\n    constructor(attr: GLobjAttributes = {}) {\r\n        super({ ...attr, ...{ autoReady: false } });\r\n\r\n        this.loadFile(`${window.location.href}/obj/${attr.url}`)\r\n            .then(this.parseMtl.bind(this))\r\n            .then(this.parseObj.bind(this))\r\n            .then(() => {\r\n                this.ready();\r\n            });\r\n\r\n    }\r\n\r\n    public build(): void {\r\n        super.build();\r\n    }\r\n\r\n    private async parseMtl(str: string) {\r\n        if (/mtllib/.test(str)) {\r\n            await this.loadFile(`${window.location.href}obj/${str.split(/mtllib/)[1].split(/(?: |\\n)/)[1]}`)\r\n                .then((v) => {\r\n                    v.split('newmtl ').slice(1).forEach((s: string) => {\r\n                        const l = s.split('\\n');\r\n                        this.mats[l.shift()] = l;\r\n                    });\r\n                });\r\n\r\n            return str;\r\n\r\n        } else {\r\n            return str;\r\n        }\r\n    }\r\n\r\n    private parseFaces(lineArray: string[], mat: string, points: vertexCoords[], normals: vertexCoords[], tCoords: textureCoords[]) {\r\n        const textRemainder = lineArray.slice(1);\r\n        const numbRemainder = textRemainder.map(Number);\r\n        (({\r\n            usemtl: () => {\r\n                mat = textRemainder[0];\r\n            },\r\n            f: () => {\r\n                if (numbRemainder.length === 3) {\r\n\r\n                    this.positionIndeces.push(...points[numbRemainder[0] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[1] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[2] - 1]);\r\n\r\n                } else if (numbRemainder.length === 6) {\r\n\r\n                    this.positionIndeces.push(...points[numbRemainder[0] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[2] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[4] - 1]);\r\n                    this.textureIndeces.push(numbRemainder[1] - 1);\r\n                    this.textureIndeces.push(numbRemainder[3] - 1);\r\n                    this.textureIndeces.push(numbRemainder[5] - 1);\r\n\r\n                } else {\r\n                    this.positionIndeces.push(...points[numbRemainder[0] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[3] - 1]);\r\n                    this.positionIndeces.push(...points[numbRemainder[6] - 1]);\r\n                    this.textureIndeces.push(\r\n                        ...GLTexture.textureOffset(Object.keys(this.mats).indexOf(mat), Object.keys(this.mats).length)\r\n                    );\r\n                    this.normalIndeces.push(...normals[numbRemainder[2] - 1]);\r\n                    this.normalIndeces.push(...normals[numbRemainder[5] - 1]);\r\n                    this.normalIndeces.push(...normals[numbRemainder[8] - 1]);\r\n                }\r\n\r\n                this.indexIndeces.push(this.indexIndeces.length);\r\n                this.indexIndeces.push(this.indexIndeces.length);\r\n                this.indexIndeces.push(this.indexIndeces.length);\r\n                this.matIndeces.push(mat);\r\n                this.matIndeces.push(mat);\r\n                this.matIndeces.push(mat);\r\n                // this.texturePositionIndeces.push(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0);\r\n\r\n            },\r\n        } as Record<string, () => void>)[lineArray[0]] || (() => { }))();\r\n\r\n        return mat;\r\n    }\r\n\r\n    private parseObj(str: string) {\r\n        let mat = 'none';\r\n        const lines = str.split(\"\\n\");\r\n        const nonVertex: string[][] = [];\r\n        const points: vertexCoords[] = [];\r\n        const normals: vertexCoords[] = [];\r\n        const tCoords: textureCoords[] = [];\r\n\r\n        lines.forEach(async (line) => {\r\n            const words = line.split(/(?: |\\/)/);\r\n            const command = words[0];\r\n            const numbers = words.slice(1).map(Number);\r\n\r\n            if (command === 'v') {\r\n                points.push([numbers[0], numbers[1], numbers[2]]);\r\n            } else if (command === 'vn') {\r\n                normals.push([numbers[0], numbers[1], numbers[2]]);\r\n            } else if (command === 'vt') {\r\n                tCoords.push([numbers[0], numbers[1]]);\r\n            } else {\r\n                nonVertex.push(words);\r\n            }\r\n\r\n        });\r\n\r\n        nonVertex.forEach((words) => {\r\n            mat = this.parseFaces(words, mat, points, normals, tCoords);\r\n        });\r\n\r\n        this.verticesCount = this.indexIndeces.length;\r\n    }\r\n\r\n    public async loadFile(url: string): Promise<any> {\r\n        const response = await fetch(url);\r\n        const data = await response.text();\r\n        return data;\r\n    }\r\n\r\n    protected indexBuffer() {\r\n        return this.getIndexBuffer(this.indexIndeces);\r\n    }\r\n\r\n    protected positionBuffer(size: Vector3) {\r\n        return this.getPositionBuffer(this.positionIndeces.map((n, i) => n * size.array[i % 3]));\r\n    }\r\n\r\n    protected normalBuffer() {\r\n        return this.getNormalBuffer(this.normalIndeces);\r\n    }\r\n\r\n    protected textureBuffer(size: Vector3) {\r\n        if (Object.values(this.mats).length) {\r\n            this.texture = new GLTexture(this.game, { color: Object.values(this.mats).map((s) => [...s[2].slice(3).split(' ').map(Number), Number(s[6].slice(2))] as Color) });\r\n        } else {\r\n            this.texture = new GLTexture(this.game, {});\r\n        }\r\n        // this.textureIndeces = [\r\n        //     // select the top left image\r\n        //     0, 0,\r\n        //     0, 1,\r\n        //     0.166666, 0,\r\n        //     0, 1,\r\n        //     0.166666, 0,\r\n        //     0.166666, 1,\r\n        //     // select the top middle image\r\n        //     0.166666, 0,\r\n        //     0.166666, 1,\r\n        //     0.333333, 0,\r\n        //     0.166666, 1,\r\n        //     0.333333, 0,\r\n        //     0.333333, 1,\r\n        //     // select to top right image\r\n        //     0.333333, 0,\r\n        //     0.333333, 1,\r\n        //     0.50, 0,\r\n        //     0.333333, 1,\r\n        //     0.50, 0,\r\n        //     0.50, 1,\r\n        //     // select the bottom left image\r\n        //     0.50, 0,\r\n        //     0.50, 1,\r\n        //     0.666666, 0,\r\n        //     0.50, 1,\r\n        //     0.666666, 0,\r\n        //     0.666666, 1,\r\n        //     // select the bottom middle image\r\n        //     0.666666, 0,\r\n        //     0.666666, 1,\r\n        //     0.833333, 0,\r\n        //     0.666666, 1,\r\n        //     0.833333, 0,\r\n        //     0.833333, 1,\r\n        //     // select the bottom right image\r\n        //     0.833333, 0,\r\n        //     0.833333, 1,\r\n        //     1.00, 0,\r\n        //     0.833333, 1,\r\n        //     1.00, 0,\r\n        //     1.00, 1,\r\n        // ];\r\n        return this.getTextureBuffer(this.textureIndeces);\r\n    }\r\n}", "import { CanvasSquare } from '../elements/canvas/canvasSquare';\r\nimport { GlElement, GlElementAttributes } from '../elements/gl/glElement';\r\nimport { Collider } from './collider';\r\nimport { ElementRelativity } from './elementPosition';\r\nimport { GlElementType } from './gl';\r\nimport { Vector2 } from \"./vector2\";\r\nimport { Vector3 } from './vector3';\r\n\r\nexport type levelAttributes = GlElementAttributes & {\r\n    size3?: Vector3;\r\n};\r\nexport abstract class Level extends GlElement {\r\n    abstract start: Vector2;\r\n    abstract background: CanvasSquare;\r\n    public type: GlElementType = 'group';\r\n    public relativity: ElementRelativity = 'anchor';\r\n    public colliders: Collider[] = [];\r\n    // public get center(): Vector3 {\r\n    //     return Vector3.from2(this.mode.size.scale(0.5).subtract(this.position), this.depth);\r\n    // }\r\n\r\n    private _camera: {\r\n        target: Vector3;\r\n        rotation: Vector3;\r\n        offset: Vector3;\r\n        fov: number;\r\n    } = {\r\n            target: Vector3.f(0),\r\n            rotation: Vector3.f(0),\r\n            offset: Vector3.f(0),\r\n            fov: 60,\r\n        };\r\n\r\n    public get camera():typeof this._camera {\r\n        return this._camera;\r\n    }\r\n    public set camera(value:typeof this._camera) {\r\n        this._camera = value;\r\n    }\r\n\r\n    constructor(attr: levelAttributes = {}) {\r\n        super(attr);\r\n        this.level = this;\r\n        this.mode = this.mode;\r\n        this.size = this.size;\r\n    }\r\n}\r\n", "import { GlElement, GlElementAttributes } from '../elements/gl/glElement';\r\nimport { GlElementType } from './gl';\r\n\r\nexport type CharacterAttributes = GlElementAttributes & {\r\n}\r\n\r\nexport abstract class Character extends GlElement {\r\n    public type: GlElementType = 'group';\r\n    constructor(attr: CharacterAttributes) {\r\n        super(attr);\r\n    }\r\n}\r\n", "import { CanvasElement, CanvasElementType } from '../elements/canvas/canvasElement';\r\n\r\nexport class CanvasController extends CanvasElement {\r\n    public type: CanvasElementType = 'logic';\r\n}", "export abstract class Util{\r\n    public static clamp(value:number, min:number, max:number) {\r\n        return Math.max(Math.min(value, max), min);\r\n    }\r\n    public static to0(value:number, tolerance: number = 0.1) {\r\n        return Math.abs(value) < tolerance ? 0 : value;\r\n    }\r\n}", "import { Character } from '../../../utils/character';\r\nimport { CanvasController } from '../../../utils/controller';\r\nimport { TickerReturnData } from '../../../utils/ticker';\r\nimport { Util } from '../../../utils/utils';\r\nimport { v2 } from '../../../utils/vector2';\r\nimport { Vector3, v3 } from '../../../utils/vector3';\r\n\r\nexport class glController extends CanvasController {\r\n    private speed = 0.8;\r\n    private jumpHeight = 2;\r\n    private velocity: Vector3 = Vector3.f(0);\r\n    public parent: Character;\r\n    public jumping: boolean = false;\r\n    public jumpDuration: number = 0;\r\n    jumpVelocity: number;\r\n\r\n    keyDown(e: KeyboardEvent): void {\r\n        if (!this.jumping && this.mode.input.space) {\r\n            this.jumpVelocity = 1;\r\n        }\r\n    }\r\n\r\n    jump(m: number) {\r\n        if (this.jumpDuration !== 0 || !this.jumping) {\r\n            this.jumping = true;\r\n            this.velocity.y += this.jumpHeight;\r\n        }\r\n    }\r\n\r\n    land() {\r\n\r\n        this.jumpDuration = 0;\r\n        this.jumping = false;\r\n    }\r\n\r\n    mouseMove(e: MouseEvent): void {\r\n        const r = v2(e.movementX, e.movementY).scale(0.005);\r\n        this.camera.rotation = v3(\r\n            Util.clamp(this.camera.rotation.x + r.y, -0.1, Math.PI / 2),\r\n            this.camera.rotation.y + r.x,\r\n            this.camera.rotation.z\r\n        );\r\n\r\n    }\r\n\r\n    scroll(e: WheelEvent): void {\r\n        this.camera.offset.z = Util.clamp(this.camera.offset.z + e.deltaY * 0.1, 10, 300);\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        super.tick(obj);\r\n\r\n        const m = 1 / obj.frameRate * 144;\r\n        if (this.mode.input.space) {\r\n            this.jump(m);\r\n        } else {\r\n            this.jumpDuration = 0;\r\n        }\r\n        // this.velocity.x = Util.to0(this.velocity.x * 0.9*m + ((this.mode.input.right ? 1 : (this.mode.input.left ? -1 : 0))*0.6 ), 0.1);\r\n        this.velocity.x = (this.mode.input.right ? 1 : (this.mode.input.left ? -1 : 0)) * this.speed;\r\n        this.velocity.z = (this.mode.input.up ? 1 : (this.mode.input.down ? -1 : 0)) * this.speed;\r\n        this.velocity.y = Util.to0(this.velocity.y - (9.8 * 0.003) * m, 0.0001);\r\n\r\n        if (this.velocity.x || this.velocity.y || this.velocity.z) {\r\n\r\n            const frameScaledVelocity = this.velocity.scale(m);\r\n\r\n            // const r = Collisions.check(this.level.colliders, this.parent, frameScaledVelocity);\r\n\r\n            // if (r.length !== 0) {\r\n            //     r.sort(function (a, b) {\r\n            //         return Math.abs(a[1]) - Math.abs(b[1]);\r\n            //     });\r\n            //     if (r.find((a) => a[0] === \"x\")) {\r\n            //         frameScaledVelocity.x = 0;\r\n            //         this.velocity.x = 0;\r\n            //         frameScaledVelocity.x = r.find((a) => a[0] === \"x\")[1];\r\n            //     }\r\n            //     if (r.find((a) => a[0] === \"y\")) {\r\n            //         this.jumping = false;\r\n            //         frameScaledVelocity.y = 0;\r\n            //         this.velocity.y = 0;\r\n            //         frameScaledVelocity.y = r.find((a) => a[0] === \"y\")[1];\r\n            //     }\r\n            // }\r\n\r\n            const rotated = v2(frameScaledVelocity.x, frameScaledVelocity.z).rotate(-this.camera.rotation.y);\r\n            const movement = v3(\r\n                rotated.x,\r\n                frameScaledVelocity.y,\r\n                rotated.y,\r\n            );\r\n            const p = this.parent.position3.add(movement);\r\n\r\n            if (p.y < 0) {\r\n                this.velocity.y = 0;\r\n                p.y = 0;\r\n                if (this.jumping) {\r\n                    this.land();\r\n                }\r\n            }\r\n            this.parent.position3 = p;\r\n            if (movement.x || movement.z) {\r\n                this.parent.rotation = this.camera.rotation.multiply(0,1,0);\r\n            }\r\n        }\r\n\r\n    }\r\n}", "import { CanvasAnimation } from '../../../elements/canvas/canvasAnimation';\r\nimport { GlMesh } from '../../../elements/gl/glMesh';\r\nimport { Character } from '../../../utils/character';\r\nimport { ElementRelativity } from '../../../utils/elementPosition';\r\nimport { TickerReturnData } from '../../../utils/ticker';\r\nimport { glController } from './SideController';\r\nimport { Vector3 } from '../../../utils/vector3';\r\n\r\nexport class SideCharacter extends Character {\r\n    public relativity: ElementRelativity = 'anchor';\r\n    public animations: Record<string, CanvasAnimation> = {};\r\n    public direction: number = 1;\r\n    public phase: 'idle' | 'walk' = 'idle';\r\n    public mesh: GlMesh\r\n\r\n    constructor({\r\n        position3 = Vector3.f(0),\r\n        size3 = Vector3.f(0)\r\n    }: {\r\n        position3?: Vector3;\r\n        size3?: Vector3;\r\n    } = {}) {\r\n        super({\r\n            position3,\r\n            size3,\r\n            anchorPoint: size3.multiply(0.5,0,0.5), \r\n        });\r\n        this.addControllers([new glController()])\r\n    }\r\n\r\n    build() {\r\n        this.registerControllers(this)\r\n        this.addChild(this.mesh = new GlMesh({ size3: this.size3, colors: [[1,0.3,0.3, 1], [0.3,1,0.3, 1], [0.4,0.4,1, 1], [1,1,0.3, 1], [0.2,1,1, 1], [1,0.2,1, 1]] }));\r\n    }\r\n    public tick(o: TickerReturnData) {\r\n        super.tick(o);\r\n        this.camera.target = this.position3.clone().add(this.size3.multiply(0.5,0.5,0.5)).multiply(1,-1,1);\r\n    }\r\n}", "import { CanvasColorBackground } from '../../../elements/canvas/canvasBackground';\r\nimport { CanvasImage } from '../../../elements/canvas/canvasImage';\r\nimport { CanvasPrepSprites } from '../../../elements/canvas/canvasPrepSprites';\r\nimport { DomText } from '../../../elements/dom/domText';\r\nimport { GlMesh } from '../../../elements/gl/glMesh';\r\nimport { GLobj as GLObj } from '../../../elements/gl/glObj';\r\nimport { Colors } from '../../../utils/colors';\r\nimport { Level } from '../../../utils/level';\r\nimport { TickerReturnData } from '../../../utils/ticker';\r\nimport { Vector2 } from '../../../utils/vector2';\r\nimport { v3 } from '../../../utils/vector3';\r\nimport { SideCharacter } from '../character/SideCharacter';\r\n\r\n\r\n\r\nexport class World extends Level {\r\n    public start = Vector2.zero;\r\n    public background = new CanvasColorBackground('#46345E');\r\n    public character: SideCharacter;\r\n    public sprites: CanvasPrepSprites;\r\n    public mo: DomText;\r\n    public ground: CanvasImage;\r\n    // public get speed(): number {\r\n    //     if (this.inTrain) {\r\n    //         return this.train.speed;\r\n    //     } else {\r\n    //         return 0;\r\n    //     }\r\n    // }\r\n    // private _inTrain: boolean = false;\r\n    // public get inTrain(): boolean {\r\n    //     return this._inTrain;\r\n    // }\r\n    // public set inTrain(value: boolean) {\r\n    //     this._inTrain = value;\r\n    //     this.character.active = !value;\r\n    //     this.train.character.active = value;\r\n    //     this.train.x = 0;\r\n    //     this.backgroundLayer.x = this.foregroundLayer.x = 0;\r\n    //     if (value) {\r\n    //         this.train.character.x = Util.clamp(this.character.x, this.train.left, this.train.right - 1);\r\n    //     } else {\r\n    //         this.character.position = this.train.character.position;\r\n    //     }\r\n    // }\r\n    // public env: Scroller;\r\n    // public frame: number = 0;\r\n    // public backgroundLayer: CanvasWrapper;\r\n    // public foregroundLayer: CanvasWrapper;\r\n    // public characterLayer: CanvasComposite;\r\n    // // public station: Station;\r\n    // public trainLayer: CanvasWrapper;\r\n    // public train: Train;\r\n    constructor() {\r\n        super({\r\n            size3: v3(900, 200, 400)\r\n        });\r\n    }\r\n\r\n    keyDown(e: KeyboardEvent): void {\r\n        // if (e.code === 'Enter') {\r\n        //     this.inTrain = !this.inTrain;\r\n        // }\r\n    }\r\n\r\n\r\n    build() {\r\n        this.addChild(new SideCharacter({\r\n            size3: v3(8, 24, 8),\r\n            position3: v3(800, 0, 250)\r\n        }));\r\n\r\n        // this.addChild(new GLContainer({ size3: this.size3, position3: v3(0,0,0) }));\r\n        // this.addChild(new GlMesh({ size3: v3(-5000, -1000, -5000), position3: v3(2500, 999, 2500), colors: [[0.15, 0.15, 0.4, 1], [0.15, 0.15, 0.4, 1], [0.15, 0.15, 0.4, 1], [0.1, 0.2, 0.1, 1], [0.15, 0.15, 0.4, 1], [0.15, 0.15, 0.4, 1]] }));\r\n        this.addChild(new GlMesh({ size3: v3(5000, 0, 5000), position3: v3(-2500, -0.1, -2500), colors: [[0.15, 0.15, 0.4, 1], [0.15, 0.15, 0.4, 1], [0.15, 0.15, 0.4, 1], [0.1, 0.2, 0.1, 1], [0.15, 0.15, 0.4, 1], [0.15, 0.15, 0.4, 1]] }));\r\n        this.addChild(new GlMesh({ size3: v3(5000, 0, 52), position3: v3(-2500, 0, 300), colors: [Colors.w] }));\r\n        this.addChild(new GLObj({ url: 'carriage.obj', size3: v3(1, 1, 1), position3: v3(0 + 50, 0, 300) }));\r\n        this.addChild(new GLObj({ url: 'carriage.obj', size3: v3(1, 1, 1), position3: v3(0 + 50 + 256, 0, 300) }));\r\n        this.addChild(new GLObj({ url: 'coal.obj', size3: v3(1, 1, 1), position3: v3(256 + 50 + 256, 0, 302) }));\r\n        this.addChild(new GlMesh({ size3: v3(176, 65, 0), position3: v3(256 + 83 + 50 + 256, 0, 395), colors: [Colors.k], textureUrl: 'test.png' }));\r\n        this.addChild(new GLObj({ anchorPoint: v3(0, 0, 0), url: 'loco.obj', size3: v3(100, 100, 100), position3: v3(256 + 82 + 50 + 256, 0, 300) }));\r\n        this.addChild(new GLObj({ anchorPoint: v3(0, 0, 0), url: 'GearPump3.obj', size3: v3(10, 10, 10), position3: v3(600, 60, 200) }));\r\n        this.addChild(new GLObj({ anchorPoint: v3(0, 0, 0), url: 'testobj.obj', size3: v3(10, 10, 10), position3: v3(800, 10, 200) }));\r\n        this.camera.offset = v3(0, -5, 70);\r\n        this.camera.rotation = v3(0.25, -Math.PI / 3, 0);\r\n        this.camera.target = v3(150, 0, 250);\r\n        this.camera.fov = 70;\r\n\r\n        // this.start = new Vector2((256 * 6) * 1.5, 15 * 6 + 90);\r\n        // this.backgroundLayer = new CanvasWrapper();\r\n        // this.trainLayer = new CanvasWrapper();\r\n        // this.foregroundLayer = new CanvasWrapper();\r\n        // this.characterLayer = new CanvasComposite({}, (c)=>{\r\n        //     c.globalCompositeOperation = 'source-atop';\r\n        //     c.fillStyle = 'rgba(23, 21, 11, 0.5)';\r\n        //     c.fillRect(0, 0, this.level.width, this.level.height);\r\n        //     c.globalCompositeOperation = 'source-over';\r\n        // });\r\n        // this.env = new Scroller();\r\n        // this.addChild(this.background);\r\n        // this.addChild(this.env);\r\n        // this.addChild(this.backgroundLayer);\r\n        // this.addChild(this.trainLayer);\r\n        // this.addChild(this.foregroundLayer);\r\n        // this.addChild(this.characterLayer);\r\n        // this.train = new Train();\r\n        // this.trainLayer.addChild(this.train);\r\n        // this.station = new Station(this.train, this.backgroundLayer, this.foregroundLayer);\r\n        // this.addChild(this.station);\r\n        // this.character = new SideCharacter({\r\n        //     position: this.start,\r\n        //     controllers: [new SideContoller()],\r\n        // });\r\n        // this.character.active = false\r\n        // this.characterLayer.addChild(this.character);\r\n        // (([\r\n        //     [0, 0, this.width, 75],\r\n        // ]) as ([number, number, number, number, number?])[]).forEach(([x, y, w, h, t = 30]) => {\r\n        //     this.addChild(new Collider({\r\n        //         position: new Vector2(x, y),\r\n        //         size: new Vector2(w, h),\r\n        //         condition: () => !this.inTrain\r\n        //     }));\r\n        // });\r\n        // this.inTrain = false;\r\n        // this.train.x = 10;\r\n    }\r\n\r\n    public tick(obj: TickerReturnData): void {\r\n        super.tick(obj);\r\n        // this.camera.target[0] = (this.camera.target[0]+1)%this.width\r\n        // this.camera.rotation.y = (this.t.frame/360%Math.PI*2)\r\n        // if (this.inTrain) {\r\n        //     this.backgroundLayer.x = this.foregroundLayer.x = this.backgroundLayer.x - (this.train.speed*10);\r\n        // } else {\r\n        //     this.train.x = this.train.x + (this.train.speed*10);\r\n        //     if (this.train.x > this.width){\r\n        //         this.train.x = -this.train.right;\r\n        //     }\r\n        // }\r\n        // this.speed = 1 / obj.frameRate * 144;\r\n        // this.frame = (this.frame + 1) % (3000 * Math.PI);\r\n        // this.speed = +(Math.sin(this.frame / 3000) * this.maxSpeed) * (1 / obj.frameRate);\r\n    }\r\n}\r\n", "import { Mode } from '../../utils/mode';\r\nimport { World } from './levels/world';\r\n\r\nexport class SideMode extends Mode{\r\n    public constructor() {\r\n        super({hasDom: true});\r\n    }\r\n\r\n    build(){\r\n        super.build();\r\n        // this.addChild(new CanvasColorBackground('#272727'))\r\n        this.addLevel('platform', new World());\r\n        this.switchLevel('platform');\r\n    }\r\n}", "import { CanvasWrapper } from './elements/canvas/canvasWrapper';\r\nimport { FPS } from './utils/debug/fps';\r\nimport { Ticker, TickerReturnData } from './utils/ticker';\r\nimport { Event } from './utils/event';\r\nimport { Vector2 } from './utils/vector2';\r\nimport { Input } from './utils/input';\r\nimport { Mode } from './utils/mode';\r\nimport { ElementRelativity } from './utils/elementPosition';\r\nimport { DomCanvas } from './elements/dom/domCanvas';\r\nimport { Loader } from './utils/debug/loader';\r\nimport { GLR } from './utils/gl';\r\nimport { SideMode } from './modes/side/SideMode';\r\n\r\nexport class Game extends CanvasWrapper {\r\n    public relativity: ElementRelativity = 'anchor';\r\n    public ticker: Ticker;\r\n    public renderer: DomCanvas;\r\n    private fps: FPS;\r\n    public modes: Record<string, Mode> = {};\r\n    public game = this;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public input: Input;\r\n    public readyToStart: boolean = false;\r\n    private _waitCount: number = 0;\r\n    private started: boolean = false;\r\n    private loader: Loader;\r\n    public total: number = 0;\r\n    public GLR: GLR;\r\n    get t(): TickerReturnData {\r\n        return this.renderer.tickerData;\r\n    }\r\n    public get waitCount(): number {\r\n        return this._waitCount;\r\n    }\r\n    public set waitCount(value: number) {\r\n        if (value > this._waitCount){\r\n            this.total++;\r\n        }\r\n        if (!this.started){\r\n            if (value === 0 && this.readyToStart) {\r\n                this.start();\r\n            } else {\r\n                this.loader.update(value, this.total);\r\n            }\r\n        }\r\n        this._waitCount = value;\r\n\r\n    }\r\n\r\n    public constructor() {\r\n        super({ hasDom: true });\r\n        this.game = this;\r\n        this.addEvent(new Event('resize'));\r\n        window.addEventListener(\"resize\", () => { this.resize(); });\r\n        this.build();\r\n    }\r\n    build() {\r\n        this.loader = new Loader();\r\n        this.addChild(this.loader);\r\n\r\n        this.renderer = new DomCanvas(this);\r\n        this.addChild(this.renderer);\r\n\r\n        this.GLR = new GLR(this);\r\n        this.setupModes();\r\n        \r\n        this.ticker = new Ticker();\r\n        this.ticker.add(this.tick.bind(this));\r\n        this.input = new Input(this);\r\n        this.debug();\r\n        this.fps.visible = false;\r\n\r\n        if (this.waitCount === 0) {\r\n            this.start();\r\n        } else {\r\n            this.readyToStart = true;\r\n        }\r\n        this.resize();\r\n    }\r\n\r\n    public tick(obj: TickerReturnData) {\r\n        this.renderer.tick(obj);\r\n    }\r\n\r\n    private setupModes() {\r\n        // this.addMode('snakes', new SnakeMode());\r\n        // this.addMode('rpg', new RPGMode());\r\n        this.addMode('side', new SideMode());\r\n\r\n        this.switchMode('side');\r\n    }\r\n\r\n    resize() {\r\n        this.game.getEvent('resize').alert(new Vector2(document.body.clientWidth, document.body.clientHeight));\r\n    }\r\n\r\n    private debug() {\r\n        this.fps = new FPS();\r\n        this.dom.appendChild(this.fps);\r\n        this.ticker.add(this.fps.tick.bind(this.fps));\r\n    }\r\n\r\n    protected addMode(s: string, mode: Mode) {\r\n        this.modes[s] = mode;\r\n        mode.parent = this;\r\n        mode.mode = mode;\r\n        this.renderer.addMode(mode);\r\n    }\r\n\r\n    public switchMode(s: string) {\r\n        document.title = s;\r\n        Object.entries(this.modes).forEach(([key, mode]) => {\r\n            mode.active = key === s;\r\n            mode.visible = key === s;\r\n            mode.dom ? mode.dom.visible = key === s : null;\r\n            if (key === s){\r\n                this.mode = mode;\r\n            }\r\n        });\r\n    }\r\n\r\n    public start() {\r\n        this.started = true;\r\n        this.loader.visible = false;\r\n        this.fps.visible = true;\r\n        this.ticker.start();\r\n        // this.addChild(new DomButton({\r\n        //     text: 'RPG',\r\n        //     fontSize: 39,\r\n        //     fontWeight: 1000,\r\n        //     color: 'white',\r\n        //     position: new Vector2(130, 5),\r\n        //     size: new Vector2(65, 50),\r\n        //     background: '#ff00ffaa',\r\n        //     fontFamily: 'monospace',\r\n        //     padding: [0, 10, 0, 10],\r\n        //     onClick: () => {\r\n        //         this.switchMode('rpg');\r\n        //     }\r\n        // }));\r\n        // this.addChild(new DomButton({\r\n        //     text: 'SNAKES',\r\n        //     fontSize: 39,\r\n        //     fontWeight: 1000,\r\n        //     color: 'white',\r\n        //     position: new Vector2(220, 5),\r\n        //     size: new Vector2(130, 50),\r\n        //     background: '#ff00ffaa',\r\n        //     fontFamily: 'monospace',\r\n        //     padding: [0, 10, 0, 10],\r\n        //     onClick: () => {\r\n        //         this.switchMode('snakes');\r\n        //     }\r\n        // }));\r\n        // this.addChild(new DomButton({\r\n        //     text: 'TRAIN',\r\n        //     fontSize: 39,\r\n        //     fontWeight: 1000,\r\n        //     color: 'white',\r\n        //     position: new Vector2(375, 5),\r\n        //     size: new Vector2(130, 50),\r\n        //     background: '#ff00ffaa',\r\n        //     fontFamily: 'monospace',\r\n        //     padding: [0, 10, 0, 10],\r\n        //     onClick: () => {\r\n        //         this.switchMode('side');\r\n        //     }\r\n        // }));\r\n    }\r\n}\r\n\r\n\r\n", "import { Game } from \"./game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\r\n    const g = new Game();\r\n    document.body.appendChild(g.dom.dom);\r\n    g.dom.dom.appendChild(g.renderer.domGl);\r\n});"],
  "mappings": "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",
  "names": ["scale", "str"]
}
